{
	"info": {
		"_postman_id": "e9d6756d-3185-49ed-a6ee-0e6e229663cd",
		"name": "Gitlab",
		"description": "The platform for modern developers\nGitLab unifies issues, code review, CI and CD into a single UI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25640152"
	},
	"item": [
		{
			"name": "v3",
			"item": [
				{
					"name": "application/settings",
					"item": [
						{
							"name": "Get the current application settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/application/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"application",
										"settings"
									]
								},
								"description": "Get the current application settings"
							},
							"response": [
								{
									"name": "Get the current application settings",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/application/settings?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"application",
												"settings"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"after_sign_out_path\": \"aute commodo\",\n \"after_sign_up_text\": \"veniam adipisicing\",\n \"container_registry_token_expire_delay\": \"eu re\",\n \"created_at\": \"consectetur aute nulla\",\n \"default_branch_protection\": \"voluptate aute incididunt nisi ut\",\n \"default_group_visibility\": \"eu reprehenderit\",\n \"default_project_visibility\": \"nostrud commodo reprehenderit laboris\",\n \"default_projects_limit\": \"laboris occaecat\",\n \"default_snippet_visibility\": \"commodo Ut aliq\",\n \"domain_blacklist\": \"tempor\",\n \"domain_blacklist_enabled\": \"dolore dolor nostrud Excepteur\",\n \"domain_whitelist\": \"quis cupidatat Excepteur\",\n \"gravatar_enabled\": \"tempor consectetur est\",\n \"home_page_url\": \"nostrud aliquip dolor\",\n \"id\": \"labore in\",\n \"koding_enabled\": \"esse cupidata\",\n \"koding_url\": \"sint adipisicing\",\n \"max_attachment_size\": \"in consequat ad veniam nostrud\",\n \"plantuml_enabled\": \"ipsum Excepteur et\",\n \"plantuml_url\": \"amet et enim\",\n \"repository_storage\": \"nulla \",\n \"repository_storages\": \"in cupidatat commodo sed\",\n \"restricted_visibility_levels\": \"elit dolore ea ad Excepteur\",\n \"session_expire_delay\": \"aute est sunt Lorem\",\n \"sign_in_text\": \"ad fugiat sunt culpa\",\n \"signin_enabled\": \"enim ut\",\n \"signup_enabled\": \"ex labore fugiat deserunt ut\",\n \"updated_at\": \"Duis veniam eu eiusmod\",\n \"user_oauth_applications\": \"labore mollit ipsum\"\n}"
								}
							]
						},
						{
							"name": "Modify application settings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "domain_blacklist",
											"value": "<string>",
											"description": "Users with e-mail addresses that match these domain(s) will NOT be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com"
										},
										{
											"key": "two_factor_grace_period",
											"value": "<integer>",
											"description": "Amount of time (in hours) that users are allowed to skip forced configuration of two-factor authentication"
										},
										{
											"key": "shared_runners_text",
											"value": "<string>",
											"description": "Shared runners text "
										},
										{
											"key": "metrics_host",
											"value": "<string>",
											"description": "The InfluxDB host"
										},
										{
											"key": "metrics_port",
											"value": "<integer>",
											"description": "The UDP port to use for connecting to InfluxDB"
										},
										{
											"key": "metrics_pool_size",
											"value": "<integer>",
											"description": "The amount of InfluxDB connections to open"
										},
										{
											"key": "metrics_timeout",
											"value": "<integer>",
											"description": "The amount of seconds after which an InfluxDB connection will time out"
										},
										{
											"key": "metrics_method_call_threshold",
											"value": "<integer>",
											"description": "A method call is only tracked when it takes longer to complete than the given amount of milliseconds."
										},
										{
											"key": "metrics_sample_interval",
											"value": "<integer>",
											"description": "The sampling interval in seconds"
										},
										{
											"key": "metrics_packet_size",
											"value": "<integer>",
											"description": "The amount of points to store in a single UDP packet"
										},
										{
											"key": "sidekiq_throttling_queus",
											"value": "[\"<string>\",\"<string>\"]",
											"description": "Choose which queues you wish to throttle"
										},
										{
											"key": "sidekiq_throttling_factor",
											"value": "<float>",
											"description": "The factor by which the queues should be throttled. A value between 0.0 and 1.0, exclusive."
										},
										{
											"key": "recaptcha_site_key",
											"value": "<string>",
											"description": "Generate site key at http://www.google.com/recaptcha"
										},
										{
											"key": "recaptcha_private_key",
											"value": "<string>",
											"description": "Generate private key at http://www.google.com/recaptcha"
										},
										{
											"key": "akismet_api_key",
											"value": "<string>",
											"description": "Generate API key at http://www.akismet.com"
										},
										{
											"key": "sentry_dsn",
											"value": "<string>",
											"description": "Sentry Data Source Name"
										},
										{
											"key": "koding_url",
											"value": "<string>",
											"description": "The Koding team URL"
										},
										{
											"key": "plantuml_url",
											"value": "<string>",
											"description": "The PlantUML server URL"
										},
										{
											"key": "housekeeping_bitmaps_enabled",
											"value": "<boolean>",
											"description": "Creating pack file bitmaps makes housekeeping take a little longer but bitmaps should accelerate 'git clone' performance."
										},
										{
											"key": "housekeeping_incremental_repack_period",
											"value": "<integer>",
											"description": "Number of Git pushes after which an incremental 'git repack' is run."
										},
										{
											"key": "housekeeping_full_repack_period",
											"value": "<integer>",
											"description": "Number of Git pushes after which a full 'git repack' is run."
										},
										{
											"key": "housekeeping_gc_period",
											"value": "<integer>",
											"description": "Number of Git pushes after which 'git gc' is run."
										},
										{
											"key": "default_branch_protection",
											"value": "<integer>",
											"description": "Determine if developers can push to master (This can only be one of 0,1,2)"
										},
										{
											"key": "default_project_visibility",
											"value": "<integer>",
											"description": "The default project visibility (This can only be one of 0,10,20)"
										},
										{
											"key": "default_snippet_visibility",
											"value": "<integer>",
											"description": "The default snippet visibility (This can only be one of 0,10,20)"
										},
										{
											"key": "default_group_visibility",
											"value": "<integer>",
											"description": "The default group visibility (This can only be one of 0,10,20)"
										},
										{
											"key": "restricted_visibility_levels",
											"value": "[\"<string>\",\"<string>\"]",
											"description": "Selected levels cannot be used by non-admin users for projects or snippets. If the public level is restricted, user profiles are only visible to logged in users."
										},
										{
											"key": "import_sources",
											"value": "fogbugz",
											"description": "Enabled sources for code import during project creation. OmniAuth must be configured for GitHub, Bitbucket, and GitLab.com (This can only be one of github,bitbucket,gitlab,google_code,fogbugz,git,gitlab_project)"
										},
										{
											"key": "disabled_oauth_sign_in_sources",
											"value": "[\"<string>\",\"<string>\"]",
											"description": "Disable certain OAuth sign-in sources"
										},
										{
											"key": "enabled_git_access_protocol",
											"value": "<string>",
											"description": "Allow only the selected protocols to be used for Git access. (This can only be one of ssh,http,nil)"
										},
										{
											"key": "gravatar_enabled",
											"value": "<boolean>",
											"description": "Flag indicating if the Gravatar service is enabled"
										},
										{
											"key": "default_projects_limit",
											"value": "<integer>",
											"description": "The maximum number of personal projects"
										},
										{
											"key": "max_attachment_size",
											"value": "<integer>",
											"description": "Maximum attachment size in MB"
										},
										{
											"key": "session_expire_delay",
											"value": "<integer>",
											"description": "Session duration in minutes. GitLab restart is required to apply changes."
										},
										{
											"key": "user_oauth_applications",
											"value": "<boolean>",
											"description": "Allow users to register any application to use GitLab as an OAuth provider"
										},
										{
											"key": "user_default_external",
											"value": "<boolean>",
											"description": "Newly registered users will by default be external"
										},
										{
											"key": "signup_enabled",
											"value": "<boolean>",
											"description": "Flag indicating if sign up is enabled"
										},
										{
											"key": "send_user_confirmation_email",
											"value": "<boolean>",
											"description": "Send confirmation email on sign-up"
										},
										{
											"key": "domain_whitelist",
											"value": "<string>",
											"description": "ONLY users with e-mail addresses that match these domain(s) will be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com"
										},
										{
											"key": "domain_blacklist_enabled",
											"value": "<boolean>",
											"description": "Enable domain blacklist for sign ups"
										},
										{
											"key": "after_sign_up_text",
											"value": "<string>",
											"description": "Text shown after sign up"
										},
										{
											"key": "signin_enabled",
											"value": "<boolean>",
											"description": "Flag indicating if sign in is enabled"
										},
										{
											"key": "require_two_factor_authentication",
											"value": "<boolean>",
											"description": "Require all users to setup Two-factor authentication"
										},
										{
											"key": "home_page_url",
											"value": "<string>",
											"description": "We will redirect non-logged in users to this page"
										},
										{
											"key": "after_sign_out_path",
											"value": "<string>",
											"description": "We will redirect users to this page after they sign out"
										},
										{
											"key": "sign_in_text",
											"value": "<string>",
											"description": "The sign in text of the GitLab application"
										},
										{
											"key": "help_page_text",
											"value": "<string>",
											"description": "Custom text displayed on the help page"
										},
										{
											"key": "shared_runners_enabled",
											"value": "<boolean>",
											"description": "Enable shared runners for new projects"
										},
										{
											"key": "max_artifacts_size",
											"value": "<integer>",
											"description": "Set the maximum file size each build's artifacts can have"
										},
										{
											"key": "container_registry_token_expire_delay",
											"value": "<integer>",
											"description": "Authorization token duration (minutes)"
										},
										{
											"key": "metrics_enabled",
											"value": "<boolean>",
											"description": "Enable the InfluxDB metrics"
										},
										{
											"key": "sidekiq_throttling_enabled",
											"value": "<boolean>",
											"description": "Enable Sidekiq Job Throttling"
										},
										{
											"key": "recaptcha_enabled",
											"value": "<boolean>",
											"description": "Helps prevent bots from creating accounts"
										},
										{
											"key": "akismet_enabled",
											"value": "<boolean>",
											"description": "Helps prevent bots from creating issues"
										},
										{
											"key": "admin_notification_email",
											"value": "<string>",
											"description": "Abuse reports will be sent to this address if it is set. Abuse reports are always available in the admin area."
										},
										{
											"key": "sentry_enabled",
											"value": "<boolean>",
											"description": "Sentry is an error reporting and logging tool which is currently not shipped with GitLab, get it here: https://getsentry.com"
										},
										{
											"key": "repository_storage",
											"value": "<string>",
											"description": "Storage paths for new projects"
										},
										{
											"key": "repository_checks_enabled",
											"value": "<boolean>",
											"description": "GitLab will periodically run 'git fsck' in all project and wiki repositories to look for silent disk corruption issues."
										},
										{
											"key": "koding_enabled",
											"value": "<boolean>",
											"description": "Enable Koding"
										},
										{
											"key": "plantuml_enabled",
											"value": "<boolean>",
											"description": "Enable PlantUML"
										},
										{
											"key": "version_check_enabled",
											"value": "<boolean>",
											"description": "Let GitLab inform you when an update is available."
										},
										{
											"key": "email_author_in_body",
											"value": "<boolean>",
											"description": "Some email servers do not support overriding the email sender name. Enable this option to include the name of the author of the issue, merge request or comment in the email body instead."
										},
										{
											"key": "html_emails_enabled",
											"value": "<boolean>",
											"description": "By default GitLab sends emails in HTML and plain text formats so mail clients can choose what format to use. Disable this option if you only want to send emails in plain text format."
										},
										{
											"key": "housekeeping_enabled",
											"value": "<boolean>",
											"description": "Enable automatic repository housekeeping (git repack, git gc)"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v3/application/settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"application",
										"settings"
									]
								},
								"description": "Modify application settings"
							},
							"response": [
								{
									"name": "Modify application settings",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "domain_blacklist",
													"value": "<string>",
													"description": {
														"content": "Users with e-mail addresses that match these domain(s) will NOT be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com",
														"type": "text/plain"
													}
												},
												{
													"key": "two_factor_grace_period",
													"value": "<integer>",
													"description": {
														"content": "Amount of time (in hours) that users are allowed to skip forced configuration of two-factor authentication",
														"type": "text/plain"
													}
												},
												{
													"key": "shared_runners_text",
													"value": "<string>",
													"description": {
														"content": "Shared runners text ",
														"type": "text/plain"
													}
												},
												{
													"key": "metrics_host",
													"value": "<string>",
													"description": {
														"content": "The InfluxDB host",
														"type": "text/plain"
													}
												},
												{
													"key": "metrics_port",
													"value": "<integer>",
													"description": {
														"content": "The UDP port to use for connecting to InfluxDB",
														"type": "text/plain"
													}
												},
												{
													"key": "metrics_pool_size",
													"value": "<integer>",
													"description": {
														"content": "The amount of InfluxDB connections to open",
														"type": "text/plain"
													}
												},
												{
													"key": "metrics_timeout",
													"value": "<integer>",
													"description": {
														"content": "The amount of seconds after which an InfluxDB connection will time out",
														"type": "text/plain"
													}
												},
												{
													"key": "metrics_method_call_threshold",
													"value": "<integer>",
													"description": {
														"content": "A method call is only tracked when it takes longer to complete than the given amount of milliseconds.",
														"type": "text/plain"
													}
												},
												{
													"key": "metrics_sample_interval",
													"value": "<integer>",
													"description": {
														"content": "The sampling interval in seconds",
														"type": "text/plain"
													}
												},
												{
													"key": "metrics_packet_size",
													"value": "<integer>",
													"description": {
														"content": "The amount of points to store in a single UDP packet",
														"type": "text/plain"
													}
												},
												{
													"key": "sidekiq_throttling_queus",
													"value": "[\"<string>\",\"<string>\"]",
													"description": {
														"content": "Choose which queues you wish to throttle",
														"type": "text/plain"
													}
												},
												{
													"key": "sidekiq_throttling_factor",
													"value": "<float>",
													"description": {
														"content": "The factor by which the queues should be throttled. A value between 0.0 and 1.0, exclusive.",
														"type": "text/plain"
													}
												},
												{
													"key": "recaptcha_site_key",
													"value": "<string>",
													"description": {
														"content": "Generate site key at http://www.google.com/recaptcha",
														"type": "text/plain"
													}
												},
												{
													"key": "recaptcha_private_key",
													"value": "<string>",
													"description": {
														"content": "Generate private key at http://www.google.com/recaptcha",
														"type": "text/plain"
													}
												},
												{
													"key": "akismet_api_key",
													"value": "<string>",
													"description": {
														"content": "Generate API key at http://www.akismet.com",
														"type": "text/plain"
													}
												},
												{
													"key": "sentry_dsn",
													"value": "<string>",
													"description": {
														"content": "Sentry Data Source Name",
														"type": "text/plain"
													}
												},
												{
													"key": "koding_url",
													"value": "<string>",
													"description": {
														"content": "The Koding team URL",
														"type": "text/plain"
													}
												},
												{
													"key": "plantuml_url",
													"value": "<string>",
													"description": {
														"content": "The PlantUML server URL",
														"type": "text/plain"
													}
												},
												{
													"key": "housekeeping_bitmaps_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Creating pack file bitmaps makes housekeeping take a little longer but bitmaps should accelerate 'git clone' performance.",
														"type": "text/plain"
													}
												},
												{
													"key": "housekeeping_incremental_repack_period",
													"value": "<integer>",
													"description": {
														"content": "Number of Git pushes after which an incremental 'git repack' is run.",
														"type": "text/plain"
													}
												},
												{
													"key": "housekeeping_full_repack_period",
													"value": "<integer>",
													"description": {
														"content": "Number of Git pushes after which a full 'git repack' is run.",
														"type": "text/plain"
													}
												},
												{
													"key": "housekeeping_gc_period",
													"value": "<integer>",
													"description": {
														"content": "Number of Git pushes after which 'git gc' is run.",
														"type": "text/plain"
													}
												},
												{
													"key": "default_branch_protection",
													"value": "<integer>",
													"description": {
														"content": "Determine if developers can push to master (This can only be one of 0,1,2)",
														"type": "text/plain"
													}
												},
												{
													"key": "default_project_visibility",
													"value": "<integer>",
													"description": {
														"content": "The default project visibility (This can only be one of 0,10,20)",
														"type": "text/plain"
													}
												},
												{
													"key": "default_snippet_visibility",
													"value": "<integer>",
													"description": {
														"content": "The default snippet visibility (This can only be one of 0,10,20)",
														"type": "text/plain"
													}
												},
												{
													"key": "default_group_visibility",
													"value": "<integer>",
													"description": {
														"content": "The default group visibility (This can only be one of 0,10,20)",
														"type": "text/plain"
													}
												},
												{
													"key": "restricted_visibility_levels",
													"value": "[\"<string>\",\"<string>\"]",
													"description": {
														"content": "Selected levels cannot be used by non-admin users for projects or snippets. If the public level is restricted, user profiles are only visible to logged in users.",
														"type": "text/plain"
													}
												},
												{
													"key": "import_sources",
													"value": "gitlab",
													"description": {
														"content": "Enabled sources for code import during project creation. OmniAuth must be configured for GitHub, Bitbucket, and GitLab.com (This can only be one of github,bitbucket,gitlab,google_code,fogbugz,git,gitlab_project)",
														"type": "text/plain"
													}
												},
												{
													"key": "disabled_oauth_sign_in_sources",
													"value": "[\"<string>\",\"<string>\"]",
													"description": {
														"content": "Disable certain OAuth sign-in sources",
														"type": "text/plain"
													}
												},
												{
													"key": "enabled_git_access_protocol",
													"value": "<string>",
													"description": {
														"content": "Allow only the selected protocols to be used for Git access. (This can only be one of ssh,http,nil)",
														"type": "text/plain"
													}
												},
												{
													"key": "gravatar_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indicating if the Gravatar service is enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "default_projects_limit",
													"value": "<integer>",
													"description": {
														"content": "The maximum number of personal projects",
														"type": "text/plain"
													}
												},
												{
													"key": "max_attachment_size",
													"value": "<integer>",
													"description": {
														"content": "Maximum attachment size in MB",
														"type": "text/plain"
													}
												},
												{
													"key": "session_expire_delay",
													"value": "<integer>",
													"description": {
														"content": "Session duration in minutes. GitLab restart is required to apply changes.",
														"type": "text/plain"
													}
												},
												{
													"key": "user_oauth_applications",
													"value": "<boolean>",
													"description": {
														"content": "Allow users to register any application to use GitLab as an OAuth provider",
														"type": "text/plain"
													}
												},
												{
													"key": "user_default_external",
													"value": "<boolean>",
													"description": {
														"content": "Newly registered users will by default be external",
														"type": "text/plain"
													}
												},
												{
													"key": "signup_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indicating if sign up is enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "send_user_confirmation_email",
													"value": "<boolean>",
													"description": {
														"content": "Send confirmation email on sign-up",
														"type": "text/plain"
													}
												},
												{
													"key": "domain_whitelist",
													"value": "<string>",
													"description": {
														"content": "ONLY users with e-mail addresses that match these domain(s) will be able to sign-up. Wildcards allowed. Use separate lines for multiple entries. Ex: domain.com, *.domain.com",
														"type": "text/plain"
													}
												},
												{
													"key": "domain_blacklist_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Enable domain blacklist for sign ups",
														"type": "text/plain"
													}
												},
												{
													"key": "after_sign_up_text",
													"value": "<string>",
													"description": {
														"content": "Text shown after sign up",
														"type": "text/plain"
													}
												},
												{
													"key": "signin_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indicating if sign in is enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "require_two_factor_authentication",
													"value": "<boolean>",
													"description": {
														"content": "Require all users to setup Two-factor authentication",
														"type": "text/plain"
													}
												},
												{
													"key": "home_page_url",
													"value": "<string>",
													"description": {
														"content": "We will redirect non-logged in users to this page",
														"type": "text/plain"
													}
												},
												{
													"key": "after_sign_out_path",
													"value": "<string>",
													"description": {
														"content": "We will redirect users to this page after they sign out",
														"type": "text/plain"
													}
												},
												{
													"key": "sign_in_text",
													"value": "<string>",
													"description": {
														"content": "The sign in text of the GitLab application",
														"type": "text/plain"
													}
												},
												{
													"key": "help_page_text",
													"value": "<string>",
													"description": {
														"content": "Custom text displayed on the help page",
														"type": "text/plain"
													}
												},
												{
													"key": "shared_runners_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Enable shared runners for new projects",
														"type": "text/plain"
													}
												},
												{
													"key": "max_artifacts_size",
													"value": "<integer>",
													"description": {
														"content": "Set the maximum file size each build's artifacts can have",
														"type": "text/plain"
													}
												},
												{
													"key": "container_registry_token_expire_delay",
													"value": "<integer>",
													"description": {
														"content": "Authorization token duration (minutes)",
														"type": "text/plain"
													}
												},
												{
													"key": "metrics_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Enable the InfluxDB metrics",
														"type": "text/plain"
													}
												},
												{
													"key": "sidekiq_throttling_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Enable Sidekiq Job Throttling",
														"type": "text/plain"
													}
												},
												{
													"key": "recaptcha_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Helps prevent bots from creating accounts",
														"type": "text/plain"
													}
												},
												{
													"key": "akismet_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Helps prevent bots from creating issues",
														"type": "text/plain"
													}
												},
												{
													"key": "admin_notification_email",
													"value": "<string>",
													"description": {
														"content": "Abuse reports will be sent to this address if it is set. Abuse reports are always available in the admin area.",
														"type": "text/plain"
													}
												},
												{
													"key": "sentry_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Sentry is an error reporting and logging tool which is currently not shipped with GitLab, get it here: https://getsentry.com",
														"type": "text/plain"
													}
												},
												{
													"key": "repository_storage",
													"value": "<string>",
													"description": {
														"content": "Storage paths for new projects",
														"type": "text/plain"
													}
												},
												{
													"key": "repository_checks_enabled",
													"value": "<boolean>",
													"description": {
														"content": "GitLab will periodically run 'git fsck' in all project and wiki repositories to look for silent disk corruption issues.",
														"type": "text/plain"
													}
												},
												{
													"key": "koding_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Enable Koding",
														"type": "text/plain"
													}
												},
												{
													"key": "plantuml_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Enable PlantUML",
														"type": "text/plain"
													}
												},
												{
													"key": "version_check_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Let GitLab inform you when an update is available.",
														"type": "text/plain"
													}
												},
												{
													"key": "email_author_in_body",
													"value": "<boolean>",
													"description": {
														"content": "Some email servers do not support overriding the email sender name. Enable this option to include the name of the author of the issue, merge request or comment in the email body instead.",
														"type": "text/plain"
													}
												},
												{
													"key": "html_emails_enabled",
													"value": "<boolean>",
													"description": {
														"content": "By default GitLab sends emails in HTML and plain text formats so mail clients can choose what format to use. Disable this option if you only want to send emails in plain text format.",
														"type": "text/plain"
													}
												},
												{
													"key": "housekeeping_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Enable automatic repository housekeeping (git repack, git gc)",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/application/settings?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"application",
												"settings"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"after_sign_out_path\": \"aute commodo\",\n \"after_sign_up_text\": \"veniam adipisicing\",\n \"container_registry_token_expire_delay\": \"eu re\",\n \"created_at\": \"consectetur aute nulla\",\n \"default_branch_protection\": \"voluptate aute incididunt nisi ut\",\n \"default_group_visibility\": \"eu reprehenderit\",\n \"default_project_visibility\": \"nostrud commodo reprehenderit laboris\",\n \"default_projects_limit\": \"laboris occaecat\",\n \"default_snippet_visibility\": \"commodo Ut aliq\",\n \"domain_blacklist\": \"tempor\",\n \"domain_blacklist_enabled\": \"dolore dolor nostrud Excepteur\",\n \"domain_whitelist\": \"quis cupidatat Excepteur\",\n \"gravatar_enabled\": \"tempor consectetur est\",\n \"home_page_url\": \"nostrud aliquip dolor\",\n \"id\": \"labore in\",\n \"koding_enabled\": \"esse cupidata\",\n \"koding_url\": \"sint adipisicing\",\n \"max_attachment_size\": \"in consequat ad veniam nostrud\",\n \"plantuml_enabled\": \"ipsum Excepteur et\",\n \"plantuml_url\": \"amet et enim\",\n \"repository_storage\": \"nulla \",\n \"repository_storages\": \"in cupidatat commodo sed\",\n \"restricted_visibility_levels\": \"elit dolore ea ad Excepteur\",\n \"session_expire_delay\": \"aute est sunt Lorem\",\n \"sign_in_text\": \"ad fugiat sunt culpa\",\n \"signin_enabled\": \"enim ut\",\n \"signup_enabled\": \"ex labore fugiat deserunt ut\",\n \"updated_at\": \"Duis veniam eu eiusmod\",\n \"user_oauth_applications\": \"labore mollit ipsum\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "dockerfiles",
					"item": [
						{
							"name": "Get the list of the available template",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/dockerfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"dockerfiles"
									]
								},
								"description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": [
								{
									"name": "Get the list of the available template",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/dockerfiles?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"dockerfiles"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"dolor sint do\"\n}"
								}
							]
						},
						{
							"name": "Get the text for a specific template present in local filesystem",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/dockerfiles/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"dockerfiles",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The name of the template"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": [
								{
									"name": "Get the text for a specific template present in local filesystem",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/dockerfiles/:name?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"dockerfiles",
												":name"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": \"ut quis elit aute\",\n \"name\": \"do Excepteur anim\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "gitignores",
					"item": [
						{
							"name": "Get the list of the available template",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/gitignores",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"gitignores"
									]
								},
								"description": "This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": [
								{
									"name": "Get the list of the available template",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/gitignores?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"gitignores"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"dolor sint do\"\n}"
								}
							]
						},
						{
							"name": "Get the text for a specific template present in local filesystem",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/gitignores/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"gitignores",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The name of the template"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": [
								{
									"name": "Get the text for a specific template present in local filesystem",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/gitignores/:name?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"gitignores",
												":name"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": \"ut quis elit aute\",\n \"name\": \"do Excepteur anim\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "gitlab ci ymls",
					"item": [
						{
							"name": "Get the list of the available template",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/gitlab_ci_ymls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"gitlab_ci_ymls"
									]
								},
								"description": "This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": [
								{
									"name": "Get the list of the available template",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/gitlab_ci_ymls?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"gitlab_ci_ymls"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"name\": \"dolor sint do\"\n}"
								}
							]
						},
						{
							"name": "Get the text for a specific template present in local filesystem",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/gitlab_ci_ymls/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"gitlab_ci_ymls",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The name of the template"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": [
								{
									"name": "Get the text for a specific template present in local filesystem",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/gitlab_ci_ymls/:name?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"gitlab_ci_ymls",
												":name"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"content\": \"ut quis elit aute\",\n \"name\": \"do Excepteur anim\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "groups",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "access requests",
									"item": [
										{
											"name": "{user id}",
											"item": [
												{
													"name": "Denies an access request for the given user.",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/access_requests/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"access_requests",
																":user_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The group ID"
																},
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The user ID of the access requester"
																}
															]
														},
														"description": "This feature was introduced in GitLab 8.11."
													},
													"response": [
														{
															"name": "Denies an access request for the given user.",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/groups/:id/access_requests/:user_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"groups",
																		":id",
																		"access_requests",
																		":user_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Approves an access request for the given user.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "access_level",
																	"value": "<integer>",
																	"description": "A valid access level (defaults: `30`, developer access level)"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/access_requests/:user_id/approve",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"access_requests",
																":user_id",
																"approve"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The group ID"
																},
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The user ID of the access requester"
																}
															]
														},
														"description": "This feature was introduced in GitLab 8.11."
													},
													"response": [
														{
															"name": "Approves an access request for the given user.",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/groups/:id/access_requests/:user_id/approve?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"groups",
																		":id",
																		"access_requests",
																		":user_id",
																		"approve"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"access_level\": \"irure Ut dolore sed\",\n \"avatar_url\": \"nisi cupidatat\",\n \"expires_at\": \"Ut ut sint et\",\n \"id\": \"anim ut esse ad\",\n \"name\": \"aliqua aliquip nostrud cillum nulla\",\n \"state\": \"Lorem sint minim\",\n \"username\": \"aute dolor laboris\",\n \"web_url\": \"aliquip exercitation ipsum\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Gets a list of access requests for a group.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/groups/:id/access_requests?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"groups",
														":id",
														"access_requests"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The group ID"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": [
												{
													"name": "Gets a list of access requests for a group.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/access_requests?page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"access_requests"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"avatar_url\": \"non consectetur ipsum voluptate\",\n \"id\": \"amet in\",\n \"name\": \"ut anim dolor\",\n \"requested_at\": \"veniam anim minim voluptate\",\n \"state\": \"Ut ex\",\n \"username\": \"commodo\",\n \"web_url\": \"in sit laborum\"\n}"
												}
											]
										},
										{
											"name": "Requests access for the authenticated user to a group.",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/groups/:id/access_requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"groups",
														":id",
														"access_requests"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The group ID"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": [
												{
													"name": "Requests access for the authenticated user to a group.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/access_requests?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"access_requests"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"avatar_url\": \"non consectetur ipsum voluptate\",\n \"id\": \"amet in\",\n \"name\": \"ut anim dolor\",\n \"requested_at\": \"veniam anim minim voluptate\",\n \"state\": \"Ut ex\",\n \"username\": \"commodo\",\n \"web_url\": \"in sit laborum\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "members",
									"item": [
										{
											"name": "{user id}",
											"item": [
												{
													"name": "Removes a user from a group or project.",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/members/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"members",
																":user_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The group ID"
																},
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The user ID of the member"
																}
															]
														},
														"description": "Removes a user from a group or project."
													},
													"response": [
														{
															"name": "Removes a user from a group or project.",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/groups/:id/members/:user_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"groups",
																		":id",
																		"members",
																		":user_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Gets a member of a group or project.",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/members/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"members",
																":user_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The group ID"
																},
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The user ID of the member"
																}
															]
														},
														"description": "Gets a member of a group or project."
													},
													"response": [
														{
															"name": "Gets a member of a group or project.",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/groups/:id/members/:user_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"groups",
																		":id",
																		"members",
																		":user_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"access_level\": \"irure Ut dolore sed\",\n \"avatar_url\": \"nisi cupidatat\",\n \"expires_at\": \"Ut ut sint et\",\n \"id\": \"anim ut esse ad\",\n \"name\": \"aliqua aliquip nostrud cillum nulla\",\n \"state\": \"Lorem sint minim\",\n \"username\": \"aute dolor laboris\",\n \"web_url\": \"aliquip exercitation ipsum\"\n}"
														}
													]
												},
												{
													"name": "Updates a member of a group or project.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "access_level",
																	"value": "<integer>",
																	"description": "A valid access level"
																},
																{
																	"key": "expires_at",
																	"value": "<dateTime>",
																	"description": "Date string in the format YEAR-MONTH-DAY"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/members/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"members",
																":user_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The group ID"
																},
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The user ID of the new member"
																}
															]
														},
														"description": "Updates a member of a group or project."
													},
													"response": [
														{
															"name": "Updates a member of a group or project.",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/groups/:id/members/:user_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"groups",
																		":id",
																		"members",
																		":user_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"access_level\": \"irure Ut dolore sed\",\n \"avatar_url\": \"nisi cupidatat\",\n \"expires_at\": \"Ut ut sint et\",\n \"id\": \"anim ut esse ad\",\n \"name\": \"aliqua aliquip nostrud cillum nulla\",\n \"state\": \"Lorem sint minim\",\n \"username\": \"aute dolor laboris\",\n \"web_url\": \"aliquip exercitation ipsum\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Gets a list of group or project members viewable by the authenticated user.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/groups/:id/members?query=<string>&page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"groups",
														":id",
														"members"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>",
															"description": "A query string to search for members"
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The group ID"
														}
													]
												},
												"description": "Gets a list of group or project members viewable by the authenticated user."
											},
											"response": [
												{
													"name": "Gets a list of group or project members viewable by the authenticated user.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/members?query=<string>&page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"members"
															],
															"query": [
																{
																	"key": "query",
																	"value": "<string>"
																},
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"access_level\": \"irure Ut dolore sed\",\n \"avatar_url\": \"nisi cupidatat\",\n \"expires_at\": \"Ut ut sint et\",\n \"id\": \"anim ut esse ad\",\n \"name\": \"aliqua aliquip nostrud cillum nulla\",\n \"state\": \"Lorem sint minim\",\n \"username\": \"aute dolor laboris\",\n \"web_url\": \"aliquip exercitation ipsum\"\n}"
												}
											]
										},
										{
											"name": "Adds a member to a group or project.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "user_id",
															"value": "<integer>",
															"description": "The user ID of the new member"
														},
														{
															"key": "access_level",
															"value": "<integer>",
															"description": "A valid access level (defaults: `30`, developer access level)"
														},
														{
															"key": "expires_at",
															"value": "<dateTime>",
															"description": "Date string in the format YEAR-MONTH-DAY"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/groups/:id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"groups",
														":id",
														"members"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The group ID"
														}
													]
												},
												"description": "Adds a member to a group or project."
											},
											"response": [
												{
													"name": "Adds a member to a group or project.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/members?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"members"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"access_level\": \"irure Ut dolore sed\",\n \"avatar_url\": \"nisi cupidatat\",\n \"expires_at\": \"Ut ut sint et\",\n \"id\": \"anim ut esse ad\",\n \"name\": \"aliqua aliquip nostrud cillum nulla\",\n \"state\": \"Lorem sint minim\",\n \"username\": \"aute dolor laboris\",\n \"web_url\": \"aliquip exercitation ipsum\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "notification settings",
									"item": [
										{
											"name": "Get group level notification level settings, defaults to Global",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/groups/:id/notification_settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"groups",
														":id",
														"notification_settings"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The group ID or project ID or project NAMESPACE/PROJECT_NAME"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.12"
											},
											"response": [
												{
													"name": "Get group level notification level settings, defaults to Global",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/notification_settings?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"notification_settings"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"events\": \"incididunt amet laborum enim exercitation\",\n \"level\": \"Ut sit\"\n}"
												}
											]
										},
										{
											"name": "Update group level notification level settings, defaults to Global",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "level",
															"value": "<string>",
															"description": "The group notification level"
														},
														{
															"key": "new_note",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "new_issue",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "reopen_issue",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "close_issue",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "reassign_issue",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "new_merge_request",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "reopen_merge_request",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "close_merge_request",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "reassign_merge_request",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "merge_merge_request",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "failed_pipeline",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "success_pipeline",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/groups/:id/notification_settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"groups",
														":id",
														"notification_settings"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The group ID or project ID or project NAMESPACE/PROJECT_NAME"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.12"
											},
											"response": [
												{
													"name": "Update group level notification level settings, defaults to Global",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "level",
																	"value": "<string>",
																	"description": {
																		"content": "The group notification level",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "new_note",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "new_issue",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "reopen_issue",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "close_issue",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "reassign_issue",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "new_merge_request",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "reopen_merge_request",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "close_merge_request",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "reassign_merge_request",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "merge_merge_request",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "failed_pipeline",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "success_pipeline",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/notification_settings?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"notification_settings"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"events\": \"incididunt amet laborum enim exercitation\",\n \"level\": \"Ut sit\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "projects",
									"item": [
										{
											"name": "Get a list of projects in this group.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/groups/:id/projects?archived=<boolean>&visibility=<string>&search=<string>&order_by=created_at&sort=desc&simple=<boolean>&page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"groups",
														":id",
														"projects"
													],
													"query": [
														{
															"key": "archived",
															"value": "<boolean>",
															"description": "Limit by archived status"
														},
														{
															"key": "visibility",
															"value": "<string>",
															"description": "Limit by visibility"
														},
														{
															"key": "search",
															"value": "<string>",
															"description": "Return list of authorized projects matching the search criteria"
														},
														{
															"key": "order_by",
															"value": "created_at",
															"description": "Return projects ordered by field"
														},
														{
															"key": "sort",
															"value": "desc",
															"description": "Return projects sorted in ascending and descending order"
														},
														{
															"key": "simple",
															"value": "<boolean>",
															"description": "Return only the ID, URL, name, and path of each project"
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a group"
														}
													]
												},
												"description": "Get a list of projects in this group."
											},
											"response": [
												{
													"name": "Get a list of projects in this group.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/projects?archived=<boolean>&visibility=<string>&search=<string>&order_by=created_at&sort=desc&simple=<boolean>&page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"projects"
															],
															"query": [
																{
																	"key": "archived",
																	"value": "<boolean>"
																},
																{
																	"key": "visibility",
																	"value": "<string>"
																},
																{
																	"key": "search",
																	"value": "<string>"
																},
																{
																	"key": "order_by",
																	"value": "created_at"
																},
																{
																	"key": "sort",
																	"value": "desc"
																},
																{
																	"key": "simple",
																	"value": "<boolean>"
																},
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"archived\": \"non mollit sit\",\n \"avatar_url\": \"exercitation est Ut ullamco\",\n \"builds_enabled\": \"amet ad\",\n \"container_registry_enabled\": \"nulla eu culpa\",\n \"created_at\": \"id in ut\",\n \"creator_id\": \"ullamco Ut\",\n \"default_branch\": \"aliqua\",\n \"description\": \"Lorem irure qui\",\n \"forked_from_project\": {\n  \"http_url_to_repo\": \"Duis ex\",\n  \"id\": \"c\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"in\",\n  \"path\": \"cupidatat et laboris Excepteur\",\n  \"path_with_namespace\": \"pariatur\",\n  \"web_url\": \"velit\"\n },\n \"forks_count\": \"ex mollit Excepteur commodo\",\n \"http_url_to_repo\": \"quis enim aliqua\",\n \"id\": \"aliqua\",\n \"issues_enabled\": \"ullamco exerci\",\n \"last_activity_at\": \"Lorem irure esse ut\",\n \"lfs_enabled\": \"amet ea anim\",\n \"merge_requests_enabled\": \"dolor\",\n \"name\": \"elit voluptate qui ea\",\n \"name_with_namespace\": \"enim\",\n \"namespace\": {\n  \"id\": \"consectetur pariatur et minim\",\n  \"kind\": \"ut sunt in Lorem\",\n  \"name\": \"sunt\",\n  \"path\": \"incididunt tempor\"\n },\n \"only_allow_merge_if_all_discussions_are_resolved\": \"qui aliquip labore tempor\",\n \"only_allow_merge_if_build_succeeds\": \"a\",\n \"open_issues_count\": \"irure laboris\",\n \"owner\": {\n  \"avatar_url\": \"id ut\",\n  \"id\": \"cupidat\",\n  \"name\": \"ullamco laborum\",\n  \"state\": \"non dolore fugiat\",\n  \"username\": \"enim in deserunt voluptate labore\",\n  \"web_url\": \"Lorem officia non\"\n },\n \"path\": \"do elit voluptate\",\n \"path_with_namespace\": \"sint deserunt do tempor qui\",\n \"public\": \"qui laboris nulla\",\n \"public_builds\": \"sit anim\",\n \"request_access_enabled\": \"labore anim id sint veniam\",\n \"runners_token\": \"fugiat proident Ut\",\n \"shared_runners_enabled\": \"repr\",\n \"shared_with_groups\": \"eiusmod tempor nulla voluptate\",\n \"snippets_enabled\": \"veniam Lorem\",\n \"ssh_url_to_repo\": \"adipisicing velit cupidatat voluptate\",\n \"star_count\": \"reprehenderit non et pariatur ut\",\n \"statistics\": {\n  \"build_artifacts_size\": \"cupidatat\",\n  \"commit_count\": \"nostrud laboris\",\n  \"lfs_objects_size\": \"enim\",\n  \"repository_size\": \"adipisicing occaecat\",\n  \"storage_size\": \"proident r\"\n },\n \"tag_list\": \"deserunt in ullamco\",\n \"visibility_level\": \"in eiusmod velit\",\n \"web_url\": \"adipisicing magna\",\n \"wiki_enabled\": \"cupidatat reprehenderit\"\n}"
												}
											]
										},
										{
											"name": "Transfer a project to the group namespace. Available only for admin.",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/groups/:id/projects/:project_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"groups",
														":id",
														"projects",
														":project_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a group"
														},
														{
															"key": "project_id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID or path of the project"
														}
													]
												},
												"description": "Transfer a project to the group namespace. Available only for admin."
											},
											"response": [
												{
													"name": "Transfer a project to the group namespace. Available only for admin.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/groups/:id/projects/:project_id?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"groups",
																":id",
																"projects",
																":project_id"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "project_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"avatar_url\": \"exercitation a\",\n \"description\": \"ea laboris\",\n \"id\": \"Excepteur velit aliquip\",\n \"lfs_enabled\": \"do proident consectetur anim\",\n \"name\": \"laborum non cupidatat\",\n \"path\": \"non\",\n \"projects\": {\n  \"archived\": \"commodo cillum\",\n  \"avatar_url\": \"tempor labore non ut\",\n  \"builds_enabled\": \"labore proident nulla in\",\n  \"container_registry_enabled\": \"in labore occaecat\",\n  \"created_at\": \"pariatur\",\n  \"creator_id\": \"consequat qui sunt\",\n  \"default_branch\": \"ullamco elit\",\n  \"description\": \"consectetur in voluptate veniam\",\n  \"forked_from_project\": {\n   \"http_url_to_repo\": \"anim aliquip incididunt labore\",\n   \"id\": \"dolore tempor\",\n   \"name\": \"laboris pariatur\",\n   \"name_with_namespace\": \"eu tempor voluptate ipsum\",\n   \"path\": \"irure dolor ea mollit\",\n   \"path_with_namespace\": \"tempor anim veniam\",\n   \"web_url\": \"sit labore occaecat\"\n  },\n  \"forks_count\": \"laboris ea\",\n  \"http_url_to_repo\": \"ut officia\",\n  \"id\": \"commodo ut fugiat\",\n  \"issues_enabled\": \"in eu\",\n  \"last_activity_at\": \"Lorem cillum\",\n  \"lfs_enabled\": \"Excepteur velit consequat exercitation sunt\",\n  \"merge_requests_enabled\": \"esse sint laborum ad eiusmod\",\n  \"name\": \"exercitation culpa voluptate velit\",\n  \"name_with_namespace\": \"sint anim in\",\n  \"namespace\": {\n   \"id\": \"culpa amet\",\n   \"kind\": \"aute ipsum do aliquip sunt\",\n   \"name\": \"qui Excepteur\",\n   \"path\": \"do in aute\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"pariatur e\",\n  \"only_allow_merge_if_build_succeeds\": \"sit in anim qui dolor\",\n  \"open_issues_count\": \"in\",\n  \"owner\": {\n   \"avatar_url\": \"labore fugiat in laboris incididunt\",\n   \"id\": \"quis ut\",\n   \"name\": \"cillum sed mollit deserunt\",\n   \"state\": \"mi\",\n   \"username\": \"tempor ad Duis\",\n   \"web_url\": \"do ut\"\n  },\n  \"path\": \"cupidatat sit consectetur aute voluptate\",\n  \"path_with_namespace\": \"commodo ipsum\",\n  \"public\": \"dolor dolore irure dolor occaecat\",\n  \"public_builds\": \"ea mollit\",\n  \"request_access_enabled\": \"aute sed\",\n  \"runners_token\": \"id pariatur esse ullamco\",\n  \"shared_runners_enabled\": \"magna eu dolor\",\n  \"shared_with_groups\": \"dolore qui do\",\n  \"snippets_enabled\": \"anim\",\n  \"ssh_url_to_repo\": \"dolor in laborum deserunt\",\n  \"star_count\": \"esse irure\",\n  \"statistics\": {\n   \"build_artifacts_size\": \"in\",\n   \"commit_count\": \"eni\",\n   \"lfs_objects_size\": \"labore dolor tempor ipsum\",\n   \"repository_size\": \"deserunt anim veniam ipsum\",\n   \"storage_size\": \"Lorem ut al\"\n  },\n  \"tag_list\": \"aliqua dolore ex\",\n  \"visibility_level\": \"Lorem ea\",\n  \"web_url\": \"nisi\",\n  \"wiki_enabled\": \"deserunt do nostrud Lorem in\"\n },\n \"request_access_enabled\": \"incididunt n\",\n \"shared_projects\": {\n  \"archived\": \"est nostr\",\n  \"avatar_url\": \"proident Excepteur nulla dolor in\",\n  \"builds_enabled\": \"labore \",\n  \"container_registry_enabled\": \"ut irure\",\n  \"created_at\": \"est labore dolore dolor ea\",\n  \"creator_id\": \"tempor aliquip\",\n  \"default_branch\": \"sint deserunt laboris in\",\n  \"description\": \"dolor consectetur exercitation in minim\",\n  \"forked_from_project\": {\n   \"http_url_to_repo\": \"ullamco\",\n   \"id\": \"cupidatat ea occaecat\",\n   \"name\": \"Excepteur adipisicing\",\n   \"name_with_namespace\": \"volupt\",\n   \"path\": \"Duis\",\n   \"path_with_namespace\": \"ad eu nost\",\n   \"web_url\": \"laboris sit ad\"\n  },\n  \"forks_count\": \"occaecat cillum tempor eu\",\n  \"http_url_to_repo\": \"ea dolor\",\n  \"id\": \"in\",\n  \"issues_enabled\": \"consectetur officia voluptate\",\n  \"last_activity_at\": \"qui in voluptate\",\n  \"lfs_enabled\": \"irure sit aliqua\",\n  \"merge_requests_enabled\": \"aliqua ut\",\n  \"name\": \"laborum do venia\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n   \"id\": \"adipisicing occaec\",\n   \"kind\": \"cillum in deserunt\",\n   \"name\": \"magna ipsum dolore nulla\",\n   \"path\": \"proide\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"sint nulla\",\n  \"only_allow_merge_if_build_succeeds\": \"proident non\",\n  \"open_issues_count\": \"dolore in laborum\",\n  \"owner\": {\n   \"avatar_url\": \"ut ea\",\n   \"id\": \"aliquip aliqua\",\n   \"name\": \"quis cillum\",\n   \"state\": \"anim\",\n   \"username\": \"commodo ex\",\n   \"web_url\": \"ut\"\n  },\n  \"path\": \"aliqua veniam aute\",\n  \"path_with_namespace\": \"laboris amet\",\n  \"public\": \"\",\n  \"public_builds\": \"in aliquip tempor sed\",\n  \"request_access_enabled\": \"tempor adipisicing in dolor\",\n  \"runners_token\": \"occaecat\",\n  \"shared_runners_enabled\": \"ea in\",\n  \"shared_with_groups\": \"occaecat\",\n  \"snippets_enabled\": \"irure fugiat \",\n  \"ssh_url_to_repo\": \"culpa elit minim\",\n  \"star_count\": \"reprehenderi\",\n  \"statistics\": {\n   \"build_artifacts_size\": \"reprehenderit est aliquip\",\n   \"commit_count\": \"non dolore ipsum occaecat\",\n   \"lfs_objects_size\": \"consequat\",\n   \"repository_size\": \"commodo reprehenderit Lorem\",\n   \"storage_size\": \"deserunt culpa exercitation dolor\"\n  },\n  \"tag_list\": \"incididunt eiusmod quis nostrud magna\",\n  \"visibility_level\": \"labore sed cillum consequat\",\n  \"web_url\": \"dolore\",\n  \"wiki_enabled\": \"reprehenderit dolore\"\n },\n \"statistics\": \"do nisi nostrud\",\n \"visibility_level\": \"ut qui\",\n \"web_url\": \"dolore\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Remove a group.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/groups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"groups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a group"
												}
											]
										},
										"description": "Remove a group."
									},
									"response": [
										{
											"name": "Remove a group.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/groups/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"groups",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a single group, with containing projects.",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/groups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"groups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a group"
												}
											]
										},
										"description": "Get a single group, with containing projects."
									},
									"response": [
										{
											"name": "Get a single group, with containing projects.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/groups/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"groups",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"avatar_url\": \"exercitation a\",\n \"description\": \"ea laboris\",\n \"id\": \"Excepteur velit aliquip\",\n \"lfs_enabled\": \"do proident consectetur anim\",\n \"name\": \"laborum non cupidatat\",\n \"path\": \"non\",\n \"projects\": {\n  \"archived\": \"commodo cillum\",\n  \"avatar_url\": \"tempor labore non ut\",\n  \"builds_enabled\": \"labore proident nulla in\",\n  \"container_registry_enabled\": \"in labore occaecat\",\n  \"created_at\": \"pariatur\",\n  \"creator_id\": \"consequat qui sunt\",\n  \"default_branch\": \"ullamco elit\",\n  \"description\": \"consectetur in voluptate veniam\",\n  \"forked_from_project\": {\n   \"http_url_to_repo\": \"anim aliquip incididunt labore\",\n   \"id\": \"dolore tempor\",\n   \"name\": \"laboris pariatur\",\n   \"name_with_namespace\": \"eu tempor voluptate ipsum\",\n   \"path\": \"irure dolor ea mollit\",\n   \"path_with_namespace\": \"tempor anim veniam\",\n   \"web_url\": \"sit labore occaecat\"\n  },\n  \"forks_count\": \"laboris ea\",\n  \"http_url_to_repo\": \"ut officia\",\n  \"id\": \"commodo ut fugiat\",\n  \"issues_enabled\": \"in eu\",\n  \"last_activity_at\": \"Lorem cillum\",\n  \"lfs_enabled\": \"Excepteur velit consequat exercitation sunt\",\n  \"merge_requests_enabled\": \"esse sint laborum ad eiusmod\",\n  \"name\": \"exercitation culpa voluptate velit\",\n  \"name_with_namespace\": \"sint anim in\",\n  \"namespace\": {\n   \"id\": \"culpa amet\",\n   \"kind\": \"aute ipsum do aliquip sunt\",\n   \"name\": \"qui Excepteur\",\n   \"path\": \"do in aute\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"pariatur e\",\n  \"only_allow_merge_if_build_succeeds\": \"sit in anim qui dolor\",\n  \"open_issues_count\": \"in\",\n  \"owner\": {\n   \"avatar_url\": \"labore fugiat in laboris incididunt\",\n   \"id\": \"quis ut\",\n   \"name\": \"cillum sed mollit deserunt\",\n   \"state\": \"mi\",\n   \"username\": \"tempor ad Duis\",\n   \"web_url\": \"do ut\"\n  },\n  \"path\": \"cupidatat sit consectetur aute voluptate\",\n  \"path_with_namespace\": \"commodo ipsum\",\n  \"public\": \"dolor dolore irure dolor occaecat\",\n  \"public_builds\": \"ea mollit\",\n  \"request_access_enabled\": \"aute sed\",\n  \"runners_token\": \"id pariatur esse ullamco\",\n  \"shared_runners_enabled\": \"magna eu dolor\",\n  \"shared_with_groups\": \"dolore qui do\",\n  \"snippets_enabled\": \"anim\",\n  \"ssh_url_to_repo\": \"dolor in laborum deserunt\",\n  \"star_count\": \"esse irure\",\n  \"statistics\": {\n   \"build_artifacts_size\": \"in\",\n   \"commit_count\": \"eni\",\n   \"lfs_objects_size\": \"labore dolor tempor ipsum\",\n   \"repository_size\": \"deserunt anim veniam ipsum\",\n   \"storage_size\": \"Lorem ut al\"\n  },\n  \"tag_list\": \"aliqua dolore ex\",\n  \"visibility_level\": \"Lorem ea\",\n  \"web_url\": \"nisi\",\n  \"wiki_enabled\": \"deserunt do nostrud Lorem in\"\n },\n \"request_access_enabled\": \"incididunt n\",\n \"shared_projects\": {\n  \"archived\": \"est nostr\",\n  \"avatar_url\": \"proident Excepteur nulla dolor in\",\n  \"builds_enabled\": \"labore \",\n  \"container_registry_enabled\": \"ut irure\",\n  \"created_at\": \"est labore dolore dolor ea\",\n  \"creator_id\": \"tempor aliquip\",\n  \"default_branch\": \"sint deserunt laboris in\",\n  \"description\": \"dolor consectetur exercitation in minim\",\n  \"forked_from_project\": {\n   \"http_url_to_repo\": \"ullamco\",\n   \"id\": \"cupidatat ea occaecat\",\n   \"name\": \"Excepteur adipisicing\",\n   \"name_with_namespace\": \"volupt\",\n   \"path\": \"Duis\",\n   \"path_with_namespace\": \"ad eu nost\",\n   \"web_url\": \"laboris sit ad\"\n  },\n  \"forks_count\": \"occaecat cillum tempor eu\",\n  \"http_url_to_repo\": \"ea dolor\",\n  \"id\": \"in\",\n  \"issues_enabled\": \"consectetur officia voluptate\",\n  \"last_activity_at\": \"qui in voluptate\",\n  \"lfs_enabled\": \"irure sit aliqua\",\n  \"merge_requests_enabled\": \"aliqua ut\",\n  \"name\": \"laborum do venia\",\n  \"name_with_namespace\": \"\",\n  \"namespace\": {\n   \"id\": \"adipisicing occaec\",\n   \"kind\": \"cillum in deserunt\",\n   \"name\": \"magna ipsum dolore nulla\",\n   \"path\": \"proide\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"sint nulla\",\n  \"only_allow_merge_if_build_succeeds\": \"proident non\",\n  \"open_issues_count\": \"dolore in laborum\",\n  \"owner\": {\n   \"avatar_url\": \"ut ea\",\n   \"id\": \"aliquip aliqua\",\n   \"name\": \"quis cillum\",\n   \"state\": \"anim\",\n   \"username\": \"commodo ex\",\n   \"web_url\": \"ut\"\n  },\n  \"path\": \"aliqua veniam aute\",\n  \"path_with_namespace\": \"laboris amet\",\n  \"public\": \"\",\n  \"public_builds\": \"in aliquip tempor sed\",\n  \"request_access_enabled\": \"tempor adipisicing in dolor\",\n  \"runners_token\": \"occaecat\",\n  \"shared_runners_enabled\": \"ea in\",\n  \"shared_with_groups\": \"occaecat\",\n  \"snippets_enabled\": \"irure fugiat \",\n  \"ssh_url_to_repo\": \"culpa elit minim\",\n  \"star_count\": \"reprehenderi\",\n  \"statistics\": {\n   \"build_artifacts_size\": \"reprehenderit est aliquip\",\n   \"commit_count\": \"non dolore ipsum occaecat\",\n   \"lfs_objects_size\": \"consequat\",\n   \"repository_size\": \"commodo reprehenderit Lorem\",\n   \"storage_size\": \"deserunt culpa exercitation dolor\"\n  },\n  \"tag_list\": \"incididunt eiusmod quis nostrud magna\",\n  \"visibility_level\": \"labore sed cillum consequat\",\n  \"web_url\": \"dolore\",\n  \"wiki_enabled\": \"reprehenderit dolore\"\n },\n \"statistics\": \"do nisi nostrud\",\n \"visibility_level\": \"ut qui\",\n \"web_url\": \"dolore\"\n}"
										}
									]
								},
								{
									"name": "Update a group. Available only for users who can administrate groups.",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "<string>",
													"description": "The name of the group"
												},
												{
													"key": "path",
													"value": "<string>",
													"description": "The path of the group"
												},
												{
													"key": "description",
													"value": "<string>",
													"description": "The description of the group"
												},
												{
													"key": "visibility_level",
													"value": "<integer>",
													"description": "The visibility level of the group"
												},
												{
													"key": "lfs_enabled",
													"value": "<boolean>",
													"description": "Enable/disable LFS for the projects in this group"
												},
												{
													"key": "request_access_enabled",
													"value": "<boolean>",
													"description": "Allow users to request member access"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/groups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"groups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a group"
												}
											]
										},
										"description": "Update a group. Available only for users who can administrate groups."
									},
									"response": [
										{
											"name": "Update a group. Available only for users who can administrate groups.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "name",
															"value": "<string>",
															"description": {
																"content": "The name of the group",
																"type": "text/plain"
															}
														},
														{
															"key": "path",
															"value": "<string>",
															"description": {
																"content": "The path of the group",
																"type": "text/plain"
															}
														},
														{
															"key": "description",
															"value": "<string>",
															"description": {
																"content": "The description of the group",
																"type": "text/plain"
															}
														},
														{
															"key": "visibility_level",
															"value": "<integer>",
															"description": {
																"content": "The visibility level of the group",
																"type": "text/plain"
															}
														},
														{
															"key": "lfs_enabled",
															"value": "<boolean>",
															"description": {
																"content": "Enable/disable LFS for the projects in this group",
																"type": "text/plain"
															}
														},
														{
															"key": "request_access_enabled",
															"value": "<boolean>",
															"description": {
																"content": "Allow users to request member access",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/groups/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"groups",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"avatar_url\": \"nostru\",\n \"description\": \"consectetur anim commodo\",\n \"id\": \"ullamco eiusmod nulla\",\n \"lfs_enabled\": \"non velit sed\",\n \"name\": \"nostrud non cillum\",\n \"path\": \"est et laboris quis consectetur\",\n \"request_access_enabled\": \"eiusmod ir\",\n \"statistics\": \"reprehenderit enim velit eu\",\n \"visibility_level\": \"Excepteur id deserunt\",\n \"web_url\": \"ut ea laboris irure Ut\"\n}"
										}
									]
								},
								{
									"name": "Get a list of group issues",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/groups/:id/issues?state=opened&labels=<string>&milestone=<string>&order_by=created_at&sort=desc&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"groups",
												":id",
												"issues"
											],
											"query": [
												{
													"key": "state",
													"value": "opened",
													"description": "Return opened, closed, or all issues"
												},
												{
													"key": "labels",
													"value": "<string>",
													"description": "Comma-separated list of label names"
												},
												{
													"key": "milestone",
													"value": "<string>",
													"description": "Return issues for a specific milestone"
												},
												{
													"key": "order_by",
													"value": "created_at",
													"description": "Return issues ordered by `created_at` or `updated_at` fields."
												},
												{
													"key": "sort",
													"value": "desc",
													"description": "Return issues sorted in `asc` or `desc` order."
												},
												{
													"key": "page",
													"value": "<integer>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a group"
												}
											]
										},
										"description": "Get a list of group issues"
									},
									"response": [
										{
											"name": "Get a list of group issues",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/groups/:id/issues?state=opened&labels=<string>&milestone=<string>&order_by=created_at&sort=desc&page=<integer>&per_page=<integer>&private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"groups",
														":id",
														"issues"
													],
													"query": [
														{
															"key": "state",
															"value": "opened"
														},
														{
															"key": "labels",
															"value": "<string>"
														},
														{
															"key": "milestone",
															"value": "<string>"
														},
														{
															"key": "order_by",
															"value": "created_at"
														},
														{
															"key": "sort",
															"value": "desc"
														},
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														},
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"assignee\": {\n  \"avatar_url\": \"minim labore consectet\",\n  \"id\": \"Excepteur ipsum ut in laborum\",\n  \"name\": \"dolore nostrud ut mollit\",\n  \"state\": \"ea officia mollit\",\n  \"username\": \"Ut Lorem reprehenderit\",\n  \"web_url\": \"eu ex sint nisi\"\n },\n \"author\": {\n  \"avatar_url\": \"dolore eu\",\n  \"id\": \"aute nulla\",\n  \"name\": \"dolor exercitation elit consequat\",\n  \"state\": \"laborum deserunt\",\n  \"username\": \"dolor cup\",\n  \"web_url\": \"qui adipisicing ullamco\"\n },\n \"confidential\": \"deserunt in\",\n \"created_at\": \"cupidatat consequat proident q\",\n \"description\": \"dolor esse Lorem\",\n \"downvotes\": \"exercitation\",\n \"due_date\": \"sint\",\n \"id\": \"non minim nisi\",\n \"iid\": \"irure\",\n \"labels\": \"tempor\",\n \"milestone\": {\n  \"created_at\": \"in do\",\n  \"description\": \"et\",\n  \"due_date\": \"labore nostrud\",\n  \"id\": \"labore ipsum culpa Lorem reprehenderit\",\n  \"iid\": \"dolor qui\",\n  \"project_id\": \"ad\",\n  \"start_date\": \"proident dolor mollit in ullamco\",\n  \"state\": \"in aute pariatur\",\n  \"title\": \"id\",\n  \"updated_at\": \"irure fugiat qui adipisicing id\"\n },\n \"project_id\": \"es\",\n \"state\": \"elit irure sed\",\n \"subscribed\": \"Excepteur voluptate dolore in\",\n \"title\": \"dolore irure laborum fugiat\",\n \"updated_at\": \"id laborum\",\n \"upvotes\": \"reprehenderit exercitation sit\",\n \"user_notes_count\": \"reprehenderit sit aliquip do\",\n \"web_url\": \"dolore in voluptate in\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get a groups list",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "skip_groups",
											"value": "[\"<integer>\",\"<integer>\"]",
											"description": "Array of group ids to exclude from list"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v3/groups?statistics=<boolean>&all_available=<boolean>&search=<string>&order_by=name&sort=asc&page=<integer>&per_page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"groups"
									],
									"query": [
										{
											"key": "statistics",
											"value": "<boolean>",
											"description": "Include project statistics"
										},
										{
											"key": "all_available",
											"value": "<boolean>",
											"description": "Show all group that you have access to"
										},
										{
											"key": "search",
											"value": "<string>",
											"description": "Search for a specific group"
										},
										{
											"key": "order_by",
											"value": "name",
											"description": "Order by name or path"
										},
										{
											"key": "sort",
											"value": "asc",
											"description": "Sort by asc (ascending) or desc (descending)"
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										}
									]
								},
								"description": "Get a groups list"
							},
							"response": [
								{
									"name": "Get a groups list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "skip_groups",
													"value": "[\"<integer>\",\"<integer>\"]",
													"description": {
														"content": "Array of group ids to exclude from list",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/groups?statistics=<boolean>&all_available=<boolean>&search=<string>&order_by=name&sort=asc&page=<integer>&per_page=<integer>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"groups"
											],
											"query": [
												{
													"key": "statistics",
													"value": "<boolean>"
												},
												{
													"key": "all_available",
													"value": "<boolean>"
												},
												{
													"key": "search",
													"value": "<string>"
												},
												{
													"key": "order_by",
													"value": "name"
												},
												{
													"key": "sort",
													"value": "asc"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"avatar_url\": \"nostru\",\n \"description\": \"consectetur anim commodo\",\n \"id\": \"ullamco eiusmod nulla\",\n \"lfs_enabled\": \"non velit sed\",\n \"name\": \"nostrud non cillum\",\n \"path\": \"est et laboris quis consectetur\",\n \"request_access_enabled\": \"eiusmod ir\",\n \"statistics\": \"reprehenderit enim velit eu\",\n \"visibility_level\": \"Excepteur id deserunt\",\n \"web_url\": \"ut ea laboris irure Ut\"\n}"
								}
							]
						},
						{
							"name": "Create a group. Available only for users who can create groups.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the group"
										},
										{
											"key": "path",
											"value": "<string>",
											"description": "The path of the group"
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "The description of the group"
										},
										{
											"key": "visibility_level",
											"value": "<integer>",
											"description": "The visibility level of the group"
										},
										{
											"key": "lfs_enabled",
											"value": "<boolean>",
											"description": "Enable/disable LFS for the projects in this group"
										},
										{
											"key": "request_access_enabled",
											"value": "<boolean>",
											"description": "Allow users to request member access"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v3/groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"groups"
									]
								},
								"description": "Create a group. Available only for users who can create groups."
							},
							"response": [
								{
									"name": "Create a group. Available only for users who can create groups.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "<string>",
													"description": {
														"content": "The name of the group",
														"type": "text/plain"
													}
												},
												{
													"key": "path",
													"value": "<string>",
													"description": {
														"content": "The path of the group",
														"type": "text/plain"
													}
												},
												{
													"key": "description",
													"value": "<string>",
													"description": {
														"content": "The description of the group",
														"type": "text/plain"
													}
												},
												{
													"key": "visibility_level",
													"value": "<integer>",
													"description": {
														"content": "The visibility level of the group",
														"type": "text/plain"
													}
												},
												{
													"key": "lfs_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable LFS for the projects in this group",
														"type": "text/plain"
													}
												},
												{
													"key": "request_access_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Allow users to request member access",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/groups?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"groups"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"avatar_url\": \"nostru\",\n \"description\": \"consectetur anim commodo\",\n \"id\": \"ullamco eiusmod nulla\",\n \"lfs_enabled\": \"non velit sed\",\n \"name\": \"nostrud non cillum\",\n \"path\": \"est et laboris quis consectetur\",\n \"request_access_enabled\": \"eiusmod ir\",\n \"statistics\": \"reprehenderit enim velit eu\",\n \"visibility_level\": \"Excepteur id deserunt\",\n \"web_url\": \"ut ea laboris irure Ut\"\n}"
								}
							]
						},
						{
							"name": "Get list of owned groups for authenticated user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/groups/owned?page=<integer>&per_page=<integer>&statistics=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"groups",
										"owned"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										},
										{
											"key": "statistics",
											"value": "<boolean>",
											"description": "Include project statistics"
										}
									]
								},
								"description": "Get list of owned groups for authenticated user"
							},
							"response": [
								{
									"name": "Get list of owned groups for authenticated user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/groups/owned?page=<integer>&per_page=<integer>&statistics=<boolean>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"groups",
												"owned"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "statistics",
													"value": "<boolean>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"avatar_url\": \"nostru\",\n \"description\": \"consectetur anim commodo\",\n \"id\": \"ullamco eiusmod nulla\",\n \"lfs_enabled\": \"non velit sed\",\n \"name\": \"nostrud non cillum\",\n \"path\": \"est et laboris quis consectetur\",\n \"request_access_enabled\": \"eiusmod ir\",\n \"statistics\": \"reprehenderit enim velit eu\",\n \"visibility_level\": \"Excepteur id deserunt\",\n \"web_url\": \"ut ea laboris irure Ut\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "hooks",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Delete a hook",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/hooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"hooks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the system hook"
												}
											]
										},
										"description": "Delete a hook"
									},
									"response": [
										{
											"name": "Delete a hook",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/hooks/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"hooks",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created_at\": \"reprehenderit ex\",\n \"enable_ssl_verification\": \"in nulla commodo\",\n \"id\": \"magna\",\n \"push_events\": \"nulla id\",\n \"tag_push_events\": \"quis do\",\n \"url\": \"fugiat laboris id\"\n}"
										}
									]
								},
								{
									"name": "Test a hook",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/hooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"hooks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the system hook"
												}
											]
										},
										"description": "Test a hook"
									},
									"response": [
										{
											"name": "Test a hook",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/hooks/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"hooks",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"created_at\": \"reprehenderit ex\",\n \"enable_ssl_verification\": \"in nulla commodo\",\n \"id\": \"magna\",\n \"push_events\": \"nulla id\",\n \"tag_push_events\": \"quis do\",\n \"url\": \"fugiat laboris id\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get the list of system hooks",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"hooks"
									]
								},
								"description": "Get the list of system hooks"
							},
							"response": [
								{
									"name": "Get the list of system hooks",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/hooks?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"hooks"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"created_at\": \"reprehenderit ex\",\n \"enable_ssl_verification\": \"in nulla commodo\",\n \"id\": \"magna\",\n \"push_events\": \"nulla id\",\n \"tag_push_events\": \"quis do\",\n \"url\": \"fugiat laboris id\"\n}"
								}
							]
						},
						{
							"name": "Create a new system hook",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "url",
											"value": "<string>",
											"description": "The URL to send the request to"
										},
										{
											"key": "token",
											"value": "<string>",
											"description": "The token used to validate payloads"
										},
										{
											"key": "push_events",
											"value": "<boolean>",
											"description": "Trigger hook on push events"
										},
										{
											"key": "tag_push_events",
											"value": "<boolean>",
											"description": "Trigger hook on tag push events"
										},
										{
											"key": "enable_ssl_verification",
											"value": "<boolean>",
											"description": "Do SSL verification when triggering the hook"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v3/hooks",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"hooks"
									]
								},
								"description": "Create a new system hook"
							},
							"response": [
								{
									"name": "Create a new system hook",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "url",
													"value": "<string>",
													"description": {
														"content": "The URL to send the request to",
														"type": "text/plain"
													}
												},
												{
													"key": "token",
													"value": "<string>",
													"description": {
														"content": "The token used to validate payloads",
														"type": "text/plain"
													}
												},
												{
													"key": "push_events",
													"value": "<boolean>",
													"description": {
														"content": "Trigger hook on push events",
														"type": "text/plain"
													}
												},
												{
													"key": "tag_push_events",
													"value": "<boolean>",
													"description": {
														"content": "Trigger hook on tag push events",
														"type": "text/plain"
													}
												},
												{
													"key": "enable_ssl_verification",
													"value": "<boolean>",
													"description": {
														"content": "Do SSL verification when triggering the hook",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/hooks?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"hooks"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"created_at\": \"reprehenderit ex\",\n \"enable_ssl_verification\": \"in nulla commodo\",\n \"id\": \"magna\",\n \"push_events\": \"nulla id\",\n \"tag_push_events\": \"quis do\",\n \"url\": \"fugiat laboris id\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "internal",
					"item": [
						{
							"name": "post V3Internal Allowed",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/internal/allowed",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"internal",
										"allowed"
									]
								}
							},
							"response": [
								{
									"name": "created Allowed",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/internal/allowed?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"internal",
												"allowed"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get V3Internal Broadcast Message",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/internal/broadcast_message",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"internal",
										"broadcast_message"
									]
								}
							},
							"response": [
								{
									"name": "get BroadcastMessage(s)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/internal/broadcast_message?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"internal",
												"broadcast_message"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get V3Internal Check",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/internal/check",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"internal",
										"check"
									]
								}
							},
							"response": [
								{
									"name": "get Check(s)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/internal/check?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"internal",
												"check"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get V3Internal Discover",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/internal/discover",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"internal",
										"discover"
									]
								}
							},
							"response": [
								{
									"name": "get Discover(s)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/internal/discover?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"internal",
												"discover"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post V3Internal Lfs Authenticate",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/internal/lfs_authenticate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"internal",
										"lfs_authenticate"
									]
								}
							},
							"response": [
								{
									"name": "created LfsAuthenticate",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/internal/lfs_authenticate?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"internal",
												"lfs_authenticate"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "get V3Internal Merge Request Urls",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/internal/merge_request_urls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"internal",
										"merge_request_urls"
									]
								}
							},
							"response": [
								{
									"name": "get MergeRequestUrl(s)",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/internal/merge_request_urls?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"internal",
												"merge_request_urls"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "post V3Internal Two Factor Recovery Codes",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/internal/two_factor_recovery_codes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"internal",
										"two_factor_recovery_codes"
									]
								}
							},
							"response": [
								{
									"name": "created TwoFactorRecoveryCode",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/internal/two_factor_recovery_codes?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"internal",
												"two_factor_recovery_codes"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "licenses",
					"item": [
						{
							"name": "Get the list of the available license template",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/licenses?popular=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"licenses"
									],
									"query": [
										{
											"key": "popular",
											"value": "<boolean>",
											"description": "If passed, returns only popular licenses"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.7. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": [
								{
									"name": "Get the list of the available license template",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/licenses?popular=<boolean>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"licenses"
											],
											"query": [
												{
													"key": "popular",
													"value": "<boolean>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"conditions\": \"ullamco ipsum elit\",\n \"content\": \"id Lorem\",\n \"description\": \"elit Duis est\",\n \"html_url\": \"ipsum quis m\",\n \"key\": \"dolor laborum\",\n \"limitations\": \"esse mollit nostrud\",\n \"name\": \"velit laborum\",\n \"nickname\": \"ut sunt nulla qui laborum\",\n \"permissions\": \"labore esse eu occaecat\",\n \"popular\": \"incididunt pariatur magna in\",\n \"source_url\": \"consectetur pariatur magna veniam\"\n}"
								}
							]
						},
						{
							"name": "Get the text for a specific license",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/licenses/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"licenses",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The name of the template"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.7. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": [
								{
									"name": "Get the text for a specific license",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/licenses/:name?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"licenses",
												":name"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"conditions\": \"ullamco ipsum elit\",\n \"content\": \"id Lorem\",\n \"description\": \"elit Duis est\",\n \"html_url\": \"ipsum quis m\",\n \"key\": \"dolor laborum\",\n \"limitations\": \"esse mollit nostrud\",\n \"name\": \"velit laborum\",\n \"nickname\": \"ut sunt nulla qui laborum\",\n \"permissions\": \"labore esse eu occaecat\",\n \"popular\": \"incididunt pariatur magna in\",\n \"source_url\": \"consectetur pariatur magna veniam\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "notification settings",
					"item": [
						{
							"name": "Get global notification level settings and email, defaults to Participate",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/notification_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"notification_settings"
									]
								},
								"description": "This feature was introduced in GitLab 8.12"
							},
							"response": [
								{
									"name": "Get global notification level settings and email, defaults to Participate",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/notification_settings?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"notification_settings"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"events\": \"adipisicing in nulla velit\",\n \"level\": \"sed Ut pariatur adipisicing\",\n \"notification_email\": \"eiusmod in incididunt nostrud consectetur\"\n}"
								}
							]
						},
						{
							"name": "Update global notification level settings and email, defaults to Participate",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "level",
											"value": "<string>",
											"description": "The global notification level"
										},
										{
											"key": "notification_email",
											"value": "<string>",
											"description": "The email address to send notifications"
										},
										{
											"key": "new_note",
											"value": "<boolean>",
											"description": "Enable/disable this notification"
										},
										{
											"key": "new_issue",
											"value": "<boolean>",
											"description": "Enable/disable this notification"
										},
										{
											"key": "reopen_issue",
											"value": "<boolean>",
											"description": "Enable/disable this notification"
										},
										{
											"key": "close_issue",
											"value": "<boolean>",
											"description": "Enable/disable this notification"
										},
										{
											"key": "reassign_issue",
											"value": "<boolean>",
											"description": "Enable/disable this notification"
										},
										{
											"key": "new_merge_request",
											"value": "<boolean>",
											"description": "Enable/disable this notification"
										},
										{
											"key": "reopen_merge_request",
											"value": "<boolean>",
											"description": "Enable/disable this notification"
										},
										{
											"key": "close_merge_request",
											"value": "<boolean>",
											"description": "Enable/disable this notification"
										},
										{
											"key": "reassign_merge_request",
											"value": "<boolean>",
											"description": "Enable/disable this notification"
										},
										{
											"key": "merge_merge_request",
											"value": "<boolean>",
											"description": "Enable/disable this notification"
										},
										{
											"key": "failed_pipeline",
											"value": "<boolean>",
											"description": "Enable/disable this notification"
										},
										{
											"key": "success_pipeline",
											"value": "<boolean>",
											"description": "Enable/disable this notification"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v3/notification_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"notification_settings"
									]
								},
								"description": "This feature was introduced in GitLab 8.12"
							},
							"response": [
								{
									"name": "Update global notification level settings and email, defaults to Participate",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "level",
													"value": "<string>",
													"description": {
														"content": "The global notification level",
														"type": "text/plain"
													}
												},
												{
													"key": "notification_email",
													"value": "<string>",
													"description": {
														"content": "The email address to send notifications",
														"type": "text/plain"
													}
												},
												{
													"key": "new_note",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable this notification",
														"type": "text/plain"
													}
												},
												{
													"key": "new_issue",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable this notification",
														"type": "text/plain"
													}
												},
												{
													"key": "reopen_issue",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable this notification",
														"type": "text/plain"
													}
												},
												{
													"key": "close_issue",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable this notification",
														"type": "text/plain"
													}
												},
												{
													"key": "reassign_issue",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable this notification",
														"type": "text/plain"
													}
												},
												{
													"key": "new_merge_request",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable this notification",
														"type": "text/plain"
													}
												},
												{
													"key": "reopen_merge_request",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable this notification",
														"type": "text/plain"
													}
												},
												{
													"key": "close_merge_request",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable this notification",
														"type": "text/plain"
													}
												},
												{
													"key": "reassign_merge_request",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable this notification",
														"type": "text/plain"
													}
												},
												{
													"key": "merge_merge_request",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable this notification",
														"type": "text/plain"
													}
												},
												{
													"key": "failed_pipeline",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable this notification",
														"type": "text/plain"
													}
												},
												{
													"key": "success_pipeline",
													"value": "<boolean>",
													"description": {
														"content": "Enable/disable this notification",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/notification_settings?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"notification_settings"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"events\": \"adipisicing in nulla velit\",\n \"level\": \"sed Ut pariatur adipisicing\",\n \"notification_email\": \"eiusmod in incididunt nostrud consectetur\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "projects",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "access requests",
									"item": [
										{
											"name": "{user id}",
											"item": [
												{
													"name": "Denies an access request for the given user.",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/access_requests/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"access_requests",
																":user_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																},
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The user ID of the access requester"
																}
															]
														},
														"description": "This feature was introduced in GitLab 8.11."
													},
													"response": [
														{
															"name": "Denies an access request for the given user.",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/access_requests/:user_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"access_requests",
																		":user_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Approves an access request for the given user.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "access_level",
																	"value": "<integer>",
																	"description": "A valid access level (defaults: `30`, developer access level)"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/access_requests/:user_id/approve",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"access_requests",
																":user_id",
																"approve"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																},
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The user ID of the access requester"
																}
															]
														},
														"description": "This feature was introduced in GitLab 8.11."
													},
													"response": [
														{
															"name": "Approves an access request for the given user.",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/access_requests/:user_id/approve?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"access_requests",
																		":user_id",
																		"approve"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"access_level\": \"irure Ut dolore sed\",\n \"avatar_url\": \"nisi cupidatat\",\n \"expires_at\": \"Ut ut sint et\",\n \"id\": \"anim ut esse ad\",\n \"name\": \"aliqua aliquip nostrud cillum nulla\",\n \"state\": \"Lorem sint minim\",\n \"username\": \"aute dolor laboris\",\n \"web_url\": \"aliquip exercitation ipsum\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Gets a list of access requests for a project.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/access_requests?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"access_requests"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": [
												{
													"name": "Gets a list of access requests for a project.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/access_requests?page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"access_requests"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"avatar_url\": \"non consectetur ipsum voluptate\",\n \"id\": \"amet in\",\n \"name\": \"ut anim dolor\",\n \"requested_at\": \"veniam anim minim voluptate\",\n \"state\": \"Ut ex\",\n \"username\": \"commodo\",\n \"web_url\": \"in sit laborum\"\n}"
												}
											]
										},
										{
											"name": "Requests access for the authenticated user to a project.",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/access_requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"access_requests"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": [
												{
													"name": "Requests access for the authenticated user to a project.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/access_requests?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"access_requests"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"avatar_url\": \"non consectetur ipsum voluptate\",\n \"id\": \"amet in\",\n \"name\": \"ut anim dolor\",\n \"requested_at\": \"veniam anim minim voluptate\",\n \"state\": \"Ut ex\",\n \"username\": \"commodo\",\n \"web_url\": \"in sit laborum\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "boards",
									"item": [
										{
											"name": "{board id}/lists",
											"item": [
												{
													"name": "{list id}",
													"item": [
														{
															"name": "Delete a board list",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/boards/:board_id/lists/:list_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"boards",
																		":board_id",
																		"lists",
																		":list_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "board_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a board"
																		},
																		{
																			"key": "list_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a board list"
																		}
																	]
																},
																"description": "This feature was introduced in 8.13"
															},
															"response": [
																{
																	"name": "Delete a board list",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/boards/:board_id/lists/:list_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"boards",
																				":board_id",
																				"lists",
																				":list_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "board_id"
																				},
																				{
																					"key": "list_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"sit velit consequat\",\n \"label\": {\n  \"color\": \"dolor cupidatat ipsum cillum\",\n  \"description\": \"dolor officia\",\n  \"id\": \"ut irur\",\n  \"name\": \"do id officia occaecat\"\n },\n \"position\": \"id\"\n}"
																}
															]
														},
														{
															"name": "Get a list of a project board",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/boards/:board_id/lists/:list_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"boards",
																		":board_id",
																		"lists",
																		":list_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "board_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a board"
																		},
																		{
																			"key": "list_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a list"
																		}
																	]
																},
																"description": "This feature was introduced in 8.13"
															},
															"response": [
																{
																	"name": "Get a list of a project board",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/boards/:board_id/lists/:list_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"boards",
																				":board_id",
																				"lists",
																				":list_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "board_id"
																				},
																				{
																					"key": "list_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"sit velit consequat\",\n \"label\": {\n  \"color\": \"dolor cupidatat ipsum cillum\",\n  \"description\": \"dolor officia\",\n  \"id\": \"ut irur\",\n  \"name\": \"do id officia occaecat\"\n },\n \"position\": \"id\"\n}"
																}
															]
														},
														{
															"name": "Moves a board list to a new position",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "position",
																			"value": "<integer>",
																			"description": "The position of the list"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/boards/:board_id/lists/:list_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"boards",
																		":board_id",
																		"lists",
																		":list_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "board_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a board"
																		},
																		{
																			"key": "list_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a list"
																		}
																	]
																},
																"description": "This feature was introduced in 8.13"
															},
															"response": [
																{
																	"name": "Moves a board list to a new position",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "urlencoded",
																			"urlencoded": [
																				{
																					"key": "position",
																					"value": "<integer>",
																					"description": {
																						"content": "The position of the list",
																						"type": "text/plain"
																					}
																				}
																			]
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/boards/:board_id/lists/:list_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"boards",
																				":board_id",
																				"lists",
																				":list_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "board_id"
																				},
																				{
																					"key": "list_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"id\": \"sit velit consequat\",\n \"label\": {\n  \"color\": \"dolor cupidatat ipsum cillum\",\n  \"description\": \"dolor officia\",\n  \"id\": \"ut irur\",\n  \"name\": \"do id officia occaecat\"\n },\n \"position\": \"id\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get the lists of a project board",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/boards/:board_id/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"boards",
																":board_id",
																"lists"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "board_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a board"
																}
															]
														},
														"description": "Does not include `backlog` and `done` lists. This feature was introduced in 8.13"
													},
													"response": [
														{
															"name": "Get the lists of a project board",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/boards/:board_id/lists?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"boards",
																		":board_id",
																		"lists"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "board_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": \"sit velit consequat\",\n \"label\": {\n  \"color\": \"dolor cupidatat ipsum cillum\",\n  \"description\": \"dolor officia\",\n  \"id\": \"ut irur\",\n  \"name\": \"do id officia occaecat\"\n },\n \"position\": \"id\"\n}"
														}
													]
												},
												{
													"name": "Create a new board list",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "label_id",
																	"value": "<integer>",
																	"description": "The ID of an existing label"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/boards/:board_id/lists",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"boards",
																":board_id",
																"lists"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "board_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a board"
																}
															]
														},
														"description": "This feature was introduced in 8.13"
													},
													"response": [
														{
															"name": "Create a new board list",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "label_id",
																			"value": "<integer>",
																			"description": {
																				"content": "The ID of an existing label",
																				"type": "text/plain"
																			}
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/boards/:board_id/lists?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"boards",
																		":board_id",
																		"lists"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "board_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"id\": \"sit velit consequat\",\n \"label\": {\n  \"color\": \"dolor cupidatat ipsum cillum\",\n  \"description\": \"dolor officia\",\n  \"id\": \"ut irur\",\n  \"name\": \"do id officia occaecat\"\n },\n \"position\": \"id\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get all project boards",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/boards",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"boards"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "This feature was introduced in 8.13"
											},
											"response": [
												{
													"name": "Get all project boards",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/boards?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"boards"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"voluptate ad Ut eu\",\n \"lists\": {\n  \"id\": \"Ut elit\",\n  \"label\": {\n   \"color\": \"e\",\n   \"description\": \"tempor velit\",\n   \"id\": \"labore\",\n   \"name\": \"eiusmod et sint ullamco dolor\"\n  },\n  \"position\": \"dolore nostrud consectetur\"\n }\n}"
												}
											]
										}
									]
								},
								{
									"name": "builds",
									"item": [
										{
											"name": "{build id}",
											"item": [
												{
													"name": "artifacts",
													"item": [
														{
															"name": "Download the artifacts file from build",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/artifacts",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"builds",
																		":build_id",
																		"artifacts"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "build_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a build"
																		}
																	]
																},
																"description": "This feature was introduced in GitLab 8.5"
															},
															"response": [
																{
																	"name": "Download the artifacts file from build",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/artifacts?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"builds",
																				":build_id",
																				"artifacts"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "build_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Keep the artifacts to prevent them from being deleted",
															"request": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/artifacts/keep",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"builds",
																		":build_id",
																		"artifacts",
																		"keep"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "build_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a build"
																		}
																	]
																},
																"description": "Keep the artifacts to prevent them from being deleted"
															},
															"response": [
																{
																	"name": "Keep the artifacts to prevent them from being deleted",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/artifacts/keep?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"builds",
																				":build_id",
																				"artifacts",
																				"keep"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "build_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"artifacts_file\": {\n  \"filename\": \"eiusmod\",\n  \"size\": \"Ut\"\n },\n \"commit\": {\n  \"author_email\": \"si\",\n  \"author_name\": \"fugiat aliquip\",\n  \"committer_email\": \"aliquip incididunt\",\n  \"committer_name\": \"est reprehenderit\",\n  \"created_at\": \"Excepteur\",\n  \"id\": \"incididunt consequat enim\",\n  \"message\": \"eu cillum minim\",\n  \"short_id\": \"labore voluptate sint occaecat deserunt\",\n  \"title\": \"proident cillum tempor\"\n },\n \"coverage\": \"enim Ut ut minim\",\n \"created_at\": \"commodo aute amet dolore\",\n \"finished_at\": \"cupida\",\n \"id\": \"reprehenderit magna\",\n \"name\": \"laborum cillum\",\n \"pipeline\": {\n  \"id\": \"sunt Ut non labore\",\n  \"ref\": \"dolor cillum irure\",\n  \"sha\": \"aliquip reprehenderit est laborum consectetur\",\n  \"status\": \"ullamco minim fugiat velit ut\"\n },\n \"ref\": \"sunt aute\",\n \"runner\": {\n  \"active\": \"et\",\n  \"description\": \"enim dolor occaecat in\",\n  \"id\": \"nulla eu minim\",\n  \"is_shared\": \"voluptate aliqua officia veniam Duis\",\n  \"name\": \"magna officia laboris i\"\n },\n \"stage\": \"magna velit dolor\",\n \"started_at\": \"elit commodo in occaecat\",\n \"status\": \"sunt ipsum velit ullamco enim\",\n \"tag\": \"nostrud elit sit\",\n \"user\": {\n  \"avatar_url\": \"non do sunt velit cupidatat\",\n  \"bio\": \"occaecat in\",\n  \"created_at\": \"dolore dolor consectetur in pariatur\",\n  \"id\": \"officia sint\",\n  \"is_admin\": \"do laborum\",\n  \"linkedin\": \"non elit\",\n  \"location\": \"ullamco\",\n  \"name\": \"do ullamco ex reprehenderit\",\n  \"organization\": \"Excepteur sit\",\n  \"skype\": \"est qui in irure amet\",\n  \"state\": \"do voluptate sint\",\n  \"twitter\": \"reprehenderit dolor quis cillum\",\n  \"username\": \"est nisi ea\",\n  \"web_url\": \"enim\",\n  \"website_url\": \"labore exercitation voluptate eu\"\n }\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get a specific build of a project",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"builds",
																":build_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "build_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a build"
																}
															]
														},
														"description": "Get a specific build of a project"
													},
													"response": [
														{
															"name": "Get a specific build of a project",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"builds",
																		":build_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "build_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"artifacts_file\": {\n  \"filename\": \"eiusmod\",\n  \"size\": \"Ut\"\n },\n \"commit\": {\n  \"author_email\": \"si\",\n  \"author_name\": \"fugiat aliquip\",\n  \"committer_email\": \"aliquip incididunt\",\n  \"committer_name\": \"est reprehenderit\",\n  \"created_at\": \"Excepteur\",\n  \"id\": \"incididunt consequat enim\",\n  \"message\": \"eu cillum minim\",\n  \"short_id\": \"labore voluptate sint occaecat deserunt\",\n  \"title\": \"proident cillum tempor\"\n },\n \"coverage\": \"enim Ut ut minim\",\n \"created_at\": \"commodo aute amet dolore\",\n \"finished_at\": \"cupida\",\n \"id\": \"reprehenderit magna\",\n \"name\": \"laborum cillum\",\n \"pipeline\": {\n  \"id\": \"sunt Ut non labore\",\n  \"ref\": \"dolor cillum irure\",\n  \"sha\": \"aliquip reprehenderit est laborum consectetur\",\n  \"status\": \"ullamco minim fugiat velit ut\"\n },\n \"ref\": \"sunt aute\",\n \"runner\": {\n  \"active\": \"et\",\n  \"description\": \"enim dolor occaecat in\",\n  \"id\": \"nulla eu minim\",\n  \"is_shared\": \"voluptate aliqua officia veniam Duis\",\n  \"name\": \"magna officia laboris i\"\n },\n \"stage\": \"magna velit dolor\",\n \"started_at\": \"elit commodo in occaecat\",\n \"status\": \"sunt ipsum velit ullamco enim\",\n \"tag\": \"nostrud elit sit\",\n \"user\": {\n  \"avatar_url\": \"non do sunt velit cupidatat\",\n  \"bio\": \"occaecat in\",\n  \"created_at\": \"dolore dolor consectetur in pariatur\",\n  \"id\": \"officia sint\",\n  \"is_admin\": \"do laborum\",\n  \"linkedin\": \"non elit\",\n  \"location\": \"ullamco\",\n  \"name\": \"do ullamco ex reprehenderit\",\n  \"organization\": \"Excepteur sit\",\n  \"skype\": \"est qui in irure amet\",\n  \"state\": \"do voluptate sint\",\n  \"twitter\": \"reprehenderit dolor quis cillum\",\n  \"username\": \"est nisi ea\",\n  \"web_url\": \"enim\",\n  \"website_url\": \"labore exercitation voluptate eu\"\n }\n}"
														}
													]
												},
												{
													"name": "Cancel a specific build of a project",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"builds",
																":build_id",
																"cancel"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "build_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a build"
																}
															]
														},
														"description": "Cancel a specific build of a project"
													},
													"response": [
														{
															"name": "Cancel a specific build of a project",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/cancel?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"builds",
																		":build_id",
																		"cancel"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "build_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"artifacts_file\": {\n  \"filename\": \"eiusmod\",\n  \"size\": \"Ut\"\n },\n \"commit\": {\n  \"author_email\": \"si\",\n  \"author_name\": \"fugiat aliquip\",\n  \"committer_email\": \"aliquip incididunt\",\n  \"committer_name\": \"est reprehenderit\",\n  \"created_at\": \"Excepteur\",\n  \"id\": \"incididunt consequat enim\",\n  \"message\": \"eu cillum minim\",\n  \"short_id\": \"labore voluptate sint occaecat deserunt\",\n  \"title\": \"proident cillum tempor\"\n },\n \"coverage\": \"enim Ut ut minim\",\n \"created_at\": \"commodo aute amet dolore\",\n \"finished_at\": \"cupida\",\n \"id\": \"reprehenderit magna\",\n \"name\": \"laborum cillum\",\n \"pipeline\": {\n  \"id\": \"sunt Ut non labore\",\n  \"ref\": \"dolor cillum irure\",\n  \"sha\": \"aliquip reprehenderit est laborum consectetur\",\n  \"status\": \"ullamco minim fugiat velit ut\"\n },\n \"ref\": \"sunt aute\",\n \"runner\": {\n  \"active\": \"et\",\n  \"description\": \"enim dolor occaecat in\",\n  \"id\": \"nulla eu minim\",\n  \"is_shared\": \"voluptate aliqua officia veniam Duis\",\n  \"name\": \"magna officia laboris i\"\n },\n \"stage\": \"magna velit dolor\",\n \"started_at\": \"elit commodo in occaecat\",\n \"status\": \"sunt ipsum velit ullamco enim\",\n \"tag\": \"nostrud elit sit\",\n \"user\": {\n  \"avatar_url\": \"non do sunt velit cupidatat\",\n  \"bio\": \"occaecat in\",\n  \"created_at\": \"dolore dolor consectetur in pariatur\",\n  \"id\": \"officia sint\",\n  \"is_admin\": \"do laborum\",\n  \"linkedin\": \"non elit\",\n  \"location\": \"ullamco\",\n  \"name\": \"do ullamco ex reprehenderit\",\n  \"organization\": \"Excepteur sit\",\n  \"skype\": \"est qui in irure amet\",\n  \"state\": \"do voluptate sint\",\n  \"twitter\": \"reprehenderit dolor quis cillum\",\n  \"username\": \"est nisi ea\",\n  \"web_url\": \"enim\",\n  \"website_url\": \"labore exercitation voluptate eu\"\n }\n}"
														}
													]
												},
												{
													"name": "Erase build (remove artifacts and build trace)",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/erase",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"builds",
																":build_id",
																"erase"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "build_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a build"
																}
															]
														},
														"description": "Erase build (remove artifacts and build trace)"
													},
													"response": [
														{
															"name": "Erase build (remove artifacts and build trace)",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/erase?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"builds",
																		":build_id",
																		"erase"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "build_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"artifacts_file\": {\n  \"filename\": \"eiusmod\",\n  \"size\": \"Ut\"\n },\n \"commit\": {\n  \"author_email\": \"si\",\n  \"author_name\": \"fugiat aliquip\",\n  \"committer_email\": \"aliquip incididunt\",\n  \"committer_name\": \"est reprehenderit\",\n  \"created_at\": \"Excepteur\",\n  \"id\": \"incididunt consequat enim\",\n  \"message\": \"eu cillum minim\",\n  \"short_id\": \"labore voluptate sint occaecat deserunt\",\n  \"title\": \"proident cillum tempor\"\n },\n \"coverage\": \"enim Ut ut minim\",\n \"created_at\": \"commodo aute amet dolore\",\n \"finished_at\": \"cupida\",\n \"id\": \"reprehenderit magna\",\n \"name\": \"laborum cillum\",\n \"pipeline\": {\n  \"id\": \"sunt Ut non labore\",\n  \"ref\": \"dolor cillum irure\",\n  \"sha\": \"aliquip reprehenderit est laborum consectetur\",\n  \"status\": \"ullamco minim fugiat velit ut\"\n },\n \"ref\": \"sunt aute\",\n \"runner\": {\n  \"active\": \"et\",\n  \"description\": \"enim dolor occaecat in\",\n  \"id\": \"nulla eu minim\",\n  \"is_shared\": \"voluptate aliqua officia veniam Duis\",\n  \"name\": \"magna officia laboris i\"\n },\n \"stage\": \"magna velit dolor\",\n \"started_at\": \"elit commodo in occaecat\",\n \"status\": \"sunt ipsum velit ullamco enim\",\n \"tag\": \"nostrud elit sit\",\n \"user\": {\n  \"avatar_url\": \"non do sunt velit cupidatat\",\n  \"bio\": \"occaecat in\",\n  \"created_at\": \"dolore dolor consectetur in pariatur\",\n  \"id\": \"officia sint\",\n  \"is_admin\": \"do laborum\",\n  \"linkedin\": \"non elit\",\n  \"location\": \"ullamco\",\n  \"name\": \"do ullamco ex reprehenderit\",\n  \"organization\": \"Excepteur sit\",\n  \"skype\": \"est qui in irure amet\",\n  \"state\": \"do voluptate sint\",\n  \"twitter\": \"reprehenderit dolor quis cillum\",\n  \"username\": \"est nisi ea\",\n  \"web_url\": \"enim\",\n  \"website_url\": \"labore exercitation voluptate eu\"\n }\n}"
														}
													]
												},
												{
													"name": "Trigger a manual build",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/play",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"builds",
																":build_id",
																"play"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "build_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a Build"
																}
															]
														},
														"description": "This feature was added in GitLab 8.11"
													},
													"response": [
														{
															"name": "Trigger a manual build",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/play?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"builds",
																		":build_id",
																		"play"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "build_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"artifacts_file\": {\n  \"filename\": \"eiusmod\",\n  \"size\": \"Ut\"\n },\n \"commit\": {\n  \"author_email\": \"si\",\n  \"author_name\": \"fugiat aliquip\",\n  \"committer_email\": \"aliquip incididunt\",\n  \"committer_name\": \"est reprehenderit\",\n  \"created_at\": \"Excepteur\",\n  \"id\": \"incididunt consequat enim\",\n  \"message\": \"eu cillum minim\",\n  \"short_id\": \"labore voluptate sint occaecat deserunt\",\n  \"title\": \"proident cillum tempor\"\n },\n \"coverage\": \"enim Ut ut minim\",\n \"created_at\": \"commodo aute amet dolore\",\n \"finished_at\": \"cupida\",\n \"id\": \"reprehenderit magna\",\n \"name\": \"laborum cillum\",\n \"pipeline\": {\n  \"id\": \"sunt Ut non labore\",\n  \"ref\": \"dolor cillum irure\",\n  \"sha\": \"aliquip reprehenderit est laborum consectetur\",\n  \"status\": \"ullamco minim fugiat velit ut\"\n },\n \"ref\": \"sunt aute\",\n \"runner\": {\n  \"active\": \"et\",\n  \"description\": \"enim dolor occaecat in\",\n  \"id\": \"nulla eu minim\",\n  \"is_shared\": \"voluptate aliqua officia veniam Duis\",\n  \"name\": \"magna officia laboris i\"\n },\n \"stage\": \"magna velit dolor\",\n \"started_at\": \"elit commodo in occaecat\",\n \"status\": \"sunt ipsum velit ullamco enim\",\n \"tag\": \"nostrud elit sit\",\n \"user\": {\n  \"avatar_url\": \"non do sunt velit cupidatat\",\n  \"bio\": \"occaecat in\",\n  \"created_at\": \"dolore dolor consectetur in pariatur\",\n  \"id\": \"officia sint\",\n  \"is_admin\": \"do laborum\",\n  \"linkedin\": \"non elit\",\n  \"location\": \"ullamco\",\n  \"name\": \"do ullamco ex reprehenderit\",\n  \"organization\": \"Excepteur sit\",\n  \"skype\": \"est qui in irure amet\",\n  \"state\": \"do voluptate sint\",\n  \"twitter\": \"reprehenderit dolor quis cillum\",\n  \"username\": \"est nisi ea\",\n  \"web_url\": \"enim\",\n  \"website_url\": \"labore exercitation voluptate eu\"\n }\n}"
														}
													]
												},
												{
													"name": "Retry a specific build of a project",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/retry",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"builds",
																":build_id",
																"retry"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "build_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a build"
																}
															]
														},
														"description": "Retry a specific build of a project"
													},
													"response": [
														{
															"name": "Retry a specific build of a project",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/retry?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"builds",
																		":build_id",
																		"retry"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "build_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"artifacts_file\": {\n  \"filename\": \"eiusmod\",\n  \"size\": \"Ut\"\n },\n \"commit\": {\n  \"author_email\": \"si\",\n  \"author_name\": \"fugiat aliquip\",\n  \"committer_email\": \"aliquip incididunt\",\n  \"committer_name\": \"est reprehenderit\",\n  \"created_at\": \"Excepteur\",\n  \"id\": \"incididunt consequat enim\",\n  \"message\": \"eu cillum minim\",\n  \"short_id\": \"labore voluptate sint occaecat deserunt\",\n  \"title\": \"proident cillum tempor\"\n },\n \"coverage\": \"enim Ut ut minim\",\n \"created_at\": \"commodo aute amet dolore\",\n \"finished_at\": \"cupida\",\n \"id\": \"reprehenderit magna\",\n \"name\": \"laborum cillum\",\n \"pipeline\": {\n  \"id\": \"sunt Ut non labore\",\n  \"ref\": \"dolor cillum irure\",\n  \"sha\": \"aliquip reprehenderit est laborum consectetur\",\n  \"status\": \"ullamco minim fugiat velit ut\"\n },\n \"ref\": \"sunt aute\",\n \"runner\": {\n  \"active\": \"et\",\n  \"description\": \"enim dolor occaecat in\",\n  \"id\": \"nulla eu minim\",\n  \"is_shared\": \"voluptate aliqua officia veniam Duis\",\n  \"name\": \"magna officia laboris i\"\n },\n \"stage\": \"magna velit dolor\",\n \"started_at\": \"elit commodo in occaecat\",\n \"status\": \"sunt ipsum velit ullamco enim\",\n \"tag\": \"nostrud elit sit\",\n \"user\": {\n  \"avatar_url\": \"non do sunt velit cupidatat\",\n  \"bio\": \"occaecat in\",\n  \"created_at\": \"dolore dolor consectetur in pariatur\",\n  \"id\": \"officia sint\",\n  \"is_admin\": \"do laborum\",\n  \"linkedin\": \"non elit\",\n  \"location\": \"ullamco\",\n  \"name\": \"do ullamco ex reprehenderit\",\n  \"organization\": \"Excepteur sit\",\n  \"skype\": \"est qui in irure amet\",\n  \"state\": \"do voluptate sint\",\n  \"twitter\": \"reprehenderit dolor quis cillum\",\n  \"username\": \"est nisi ea\",\n  \"web_url\": \"enim\",\n  \"website_url\": \"labore exercitation voluptate eu\"\n }\n}"
														}
													]
												},
												{
													"name": "Get a trace of a specific build of a project",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/trace",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"builds",
																":build_id",
																"trace"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "build_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a build"
																}
															]
														},
														"description": "Get a trace of a specific build of a project"
													},
													"response": [
														{
															"name": "Get a trace of a specific build of a project",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/builds/:build_id/trace?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"builds",
																		":build_id",
																		"trace"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "build_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Get a project builds",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/builds?scope=<string>&page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"builds"
													],
													"query": [
														{
															"key": "scope",
															"value": "<string>",
															"description": "The scope of builds to show"
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Get a project builds"
											},
											"response": [
												{
													"name": "Get a project builds",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/builds?scope=<string>&page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"builds"
															],
															"query": [
																{
																	"key": "scope",
																	"value": "<string>"
																},
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"artifacts_file\": {\n  \"filename\": \"eiusmod\",\n  \"size\": \"Ut\"\n },\n \"commit\": {\n  \"author_email\": \"si\",\n  \"author_name\": \"fugiat aliquip\",\n  \"committer_email\": \"aliquip incididunt\",\n  \"committer_name\": \"est reprehenderit\",\n  \"created_at\": \"Excepteur\",\n  \"id\": \"incididunt consequat enim\",\n  \"message\": \"eu cillum minim\",\n  \"short_id\": \"labore voluptate sint occaecat deserunt\",\n  \"title\": \"proident cillum tempor\"\n },\n \"coverage\": \"enim Ut ut minim\",\n \"created_at\": \"commodo aute amet dolore\",\n \"finished_at\": \"cupida\",\n \"id\": \"reprehenderit magna\",\n \"name\": \"laborum cillum\",\n \"pipeline\": {\n  \"id\": \"sunt Ut non labore\",\n  \"ref\": \"dolor cillum irure\",\n  \"sha\": \"aliquip reprehenderit est laborum consectetur\",\n  \"status\": \"ullamco minim fugiat velit ut\"\n },\n \"ref\": \"sunt aute\",\n \"runner\": {\n  \"active\": \"et\",\n  \"description\": \"enim dolor occaecat in\",\n  \"id\": \"nulla eu minim\",\n  \"is_shared\": \"voluptate aliqua officia veniam Duis\",\n  \"name\": \"magna officia laboris i\"\n },\n \"stage\": \"magna velit dolor\",\n \"started_at\": \"elit commodo in occaecat\",\n \"status\": \"sunt ipsum velit ullamco enim\",\n \"tag\": \"nostrud elit sit\",\n \"user\": {\n  \"avatar_url\": \"non do sunt velit cupidatat\",\n  \"bio\": \"occaecat in\",\n  \"created_at\": \"dolore dolor consectetur in pariatur\",\n  \"id\": \"officia sint\",\n  \"is_admin\": \"do laborum\",\n  \"linkedin\": \"non elit\",\n  \"location\": \"ullamco\",\n  \"name\": \"do ullamco ex reprehenderit\",\n  \"organization\": \"Excepteur sit\",\n  \"skype\": \"est qui in irure amet\",\n  \"state\": \"do voluptate sint\",\n  \"twitter\": \"reprehenderit dolor quis cillum\",\n  \"username\": \"est nisi ea\",\n  \"web_url\": \"enim\",\n  \"website_url\": \"labore exercitation voluptate eu\"\n }\n}"
												}
											]
										},
										{
											"name": "Download the artifacts file from build",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/builds/artifacts/:ref_name/download?job=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"builds",
														"artifacts",
														":ref_name",
														"download"
													],
													"query": [
														{
															"key": "job",
															"value": "<string>",
															"description": "(Required) The name for the build"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														},
														{
															"key": "ref_name",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ref from repository"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.10"
											},
											"response": [
												{
													"name": "Download the artifacts file from build",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/builds/artifacts/:ref_name/download?job=<string>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"builds",
																"artifacts",
																":ref_name",
																"download"
															],
															"query": [
																{
																	"key": "job",
																	"value": "<string>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "ref_name"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "deploy keys",
									"item": [
										{
											"name": "{key id}",
											"item": [
												{
													"name": "Delete deploy key for a project",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/deploy_keys/:key_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"deploy_keys",
																":key_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the project"
																},
																{
																	"key": "key_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the deploy key"
																}
															]
														},
														"description": "Delete deploy key for a project"
													},
													"response": [
														{
															"name": "Delete deploy key for a project",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/deploy_keys/:key_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"deploy_keys",
																		":key_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "key_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
														}
													]
												},
												{
													"name": "Get single deploy key",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/deploy_keys/:key_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"deploy_keys",
																":key_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the project"
																},
																{
																	"key": "key_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the deploy key"
																}
															]
														},
														"description": "Get single deploy key"
													},
													"response": [
														{
															"name": "Get single deploy key",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/deploy_keys/:key_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"deploy_keys",
																		":key_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "key_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
														}
													]
												},
												{
													"name": "Disable a deploy key for a project",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/deploy_keys/:key_id/disable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"deploy_keys",
																":key_id",
																"disable"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the project"
																},
																{
																	"key": "key_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the deploy key"
																}
															]
														},
														"description": "This feature was added in GitLab 8.11"
													},
													"response": [
														{
															"name": "Disable a deploy key for a project",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/deploy_keys/:key_id/disable?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"deploy_keys",
																		":key_id",
																		"disable"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "key_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
														}
													]
												},
												{
													"name": "Enable a deploy key for a project",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/deploy_keys/:key_id/enable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"deploy_keys",
																":key_id",
																"enable"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the project"
																},
																{
																	"key": "key_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the deploy key"
																}
															]
														},
														"description": "This feature was added in GitLab 8.11"
													},
													"response": [
														{
															"name": "Enable a deploy key for a project",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/deploy_keys/:key_id/enable?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"deploy_keys",
																		":key_id",
																		"enable"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "key_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get a specific project's deploy keys",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/deploy_keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"deploy_keys"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the project"
														}
													]
												},
												"description": "Get a specific project's deploy keys"
											},
											"response": [
												{
													"name": "Get a specific project's deploy keys",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/deploy_keys?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"deploy_keys"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
												}
											]
										},
										{
											"name": "Add new deploy key to currently authenticated user",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "key",
															"value": "<string>",
															"description": "The new deploy key"
														},
														{
															"key": "title",
															"value": "<string>",
															"description": "The name of the deploy key"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/deploy_keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"deploy_keys"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the project"
														}
													]
												},
												"description": "Add new deploy key to currently authenticated user"
											},
											"response": [
												{
													"name": "Add new deploy key to currently authenticated user",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/deploy_keys?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"deploy_keys"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "deployments",
									"item": [
										{
											"name": "Get all deployments of the project",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/deployments?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"deployments"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": [
												{
													"name": "Get all deployments of the project",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/deployments?page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"deployments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"created_at\": \"occaecat sint officia\",\n \"deployable\": {\n  \"artifacts_file\": {\n   \"filename\": \"labore do\",\n   \"size\": \"ut\"\n  },\n  \"commit\": {\n   \"author_email\": \"aliquip in ullamco velit\",\n   \"author_name\": \"in minim culpa\",\n   \"committer_email\": \"ipsum Duis\",\n   \"committer_name\": \"ex proident elit nulla in\",\n   \"created_at\": \"esse do aliquip ut\",\n   \"id\": \"labore enim\",\n   \"message\": \"sint tempor\",\n   \"short_id\": \"Duis aliquip proident\",\n   \"title\": \"Ut veniam ad tempor cupidatat\"\n  },\n  \"coverage\": \"aliqua dolor pariatur\",\n  \"created_at\": \"ullamco id\",\n  \"finished_at\": \"irure Duis\",\n  \"id\": \"sunt mollit Lorem\",\n  \"name\": \"ea incididunt quis \",\n  \"pipeline\": {\n   \"id\": \"sit\",\n   \"ref\": \"officia sunt sit fugiat\",\n   \"sha\": \"cillum tempor culpa sit\",\n   \"status\": \"quis tempor\"\n  },\n  \"ref\": \"fugiat cillum Lorem\",\n  \"runner\": {\n   \"active\": \"veniam ut ex\",\n   \"description\": \"in\",\n   \"id\": \"ex\",\n   \"is_shared\": \"sed deserunt do\",\n   \"name\": \"est\"\n  },\n  \"stage\": \"labore cillum fugiat elit commodo\",\n  \"started_at\": \"laboris aliqui\",\n  \"status\": \"Ut enim incididunt tempor\",\n  \"tag\": \"veniam in elit in\",\n  \"user\": {\n   \"avatar_url\": \"ipsum ex incididunt\",\n   \"bio\": \"laborum laboris quis culpa\",\n   \"created_at\": \"aliq\",\n   \"id\": \"nulla enim\",\n   \"is_admin\": \"ut Duis\",\n   \"linkedin\": \"tempor pariatur Lorem dolor ex\",\n   \"location\": \"ad\",\n   \"name\": \"magna Duis qui exercitation\",\n   \"organization\": \"culpa esse\",\n   \"skype\": \"adipisicing pariatur irure\",\n   \"state\": \"occaecat ad velit i\",\n   \"twitter\": \"elit\",\n   \"username\": \"occaecat dolore consequat\",\n   \"web_url\": \"anim ullamco et est\",\n   \"website_url\": \"labore in consequat\"\n  }\n },\n \"environment\": {\n  \"external_url\": \"velit adipisicing ullamco aliqua ut\",\n  \"id\": \"esse dolor enim in laboris\",\n  \"name\": \"veniam ea sunt\",\n  \"slug\": \"exercitation\"\n },\n \"id\": \"minim cillum\",\n \"iid\": \"nostrud\",\n \"ref\": \"irure cupidatat enim\",\n \"sha\": \"mollit aliqua incididunt\",\n \"user\": {\n  \"avatar_url\": \"dolor velit\",\n  \"id\": \"enim pariatur minim\",\n  \"name\": \"ullamco Ut\",\n  \"state\": \"quis veniam consequat et\",\n  \"username\": \"cillum nulla sit\",\n  \"web_url\": \"dolor commodo Duis tempor\"\n }\n}"
												}
											]
										},
										{
											"name": "Gets a specific deployment",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/deployments/:deployment_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"deployments",
														":deployment_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID"
														},
														{
															"key": "deployment_id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The deployment ID"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": [
												{
													"name": "Gets a specific deployment",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/deployments/:deployment_id?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"deployments",
																":deployment_id"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "deployment_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"created_at\": \"occaecat sint officia\",\n \"deployable\": {\n  \"artifacts_file\": {\n   \"filename\": \"labore do\",\n   \"size\": \"ut\"\n  },\n  \"commit\": {\n   \"author_email\": \"aliquip in ullamco velit\",\n   \"author_name\": \"in minim culpa\",\n   \"committer_email\": \"ipsum Duis\",\n   \"committer_name\": \"ex proident elit nulla in\",\n   \"created_at\": \"esse do aliquip ut\",\n   \"id\": \"labore enim\",\n   \"message\": \"sint tempor\",\n   \"short_id\": \"Duis aliquip proident\",\n   \"title\": \"Ut veniam ad tempor cupidatat\"\n  },\n  \"coverage\": \"aliqua dolor pariatur\",\n  \"created_at\": \"ullamco id\",\n  \"finished_at\": \"irure Duis\",\n  \"id\": \"sunt mollit Lorem\",\n  \"name\": \"ea incididunt quis \",\n  \"pipeline\": {\n   \"id\": \"sit\",\n   \"ref\": \"officia sunt sit fugiat\",\n   \"sha\": \"cillum tempor culpa sit\",\n   \"status\": \"quis tempor\"\n  },\n  \"ref\": \"fugiat cillum Lorem\",\n  \"runner\": {\n   \"active\": \"veniam ut ex\",\n   \"description\": \"in\",\n   \"id\": \"ex\",\n   \"is_shared\": \"sed deserunt do\",\n   \"name\": \"est\"\n  },\n  \"stage\": \"labore cillum fugiat elit commodo\",\n  \"started_at\": \"laboris aliqui\",\n  \"status\": \"Ut enim incididunt tempor\",\n  \"tag\": \"veniam in elit in\",\n  \"user\": {\n   \"avatar_url\": \"ipsum ex incididunt\",\n   \"bio\": \"laborum laboris quis culpa\",\n   \"created_at\": \"aliq\",\n   \"id\": \"nulla enim\",\n   \"is_admin\": \"ut Duis\",\n   \"linkedin\": \"tempor pariatur Lorem dolor ex\",\n   \"location\": \"ad\",\n   \"name\": \"magna Duis qui exercitation\",\n   \"organization\": \"culpa esse\",\n   \"skype\": \"adipisicing pariatur irure\",\n   \"state\": \"occaecat ad velit i\",\n   \"twitter\": \"elit\",\n   \"username\": \"occaecat dolore consequat\",\n   \"web_url\": \"anim ullamco et est\",\n   \"website_url\": \"labore in consequat\"\n  }\n },\n \"environment\": {\n  \"external_url\": \"velit adipisicing ullamco aliqua ut\",\n  \"id\": \"esse dolor enim in laboris\",\n  \"name\": \"veniam ea sunt\",\n  \"slug\": \"exercitation\"\n },\n \"id\": \"minim cillum\",\n \"iid\": \"nostrud\",\n \"ref\": \"irure cupidatat enim\",\n \"sha\": \"mollit aliqua incididunt\",\n \"user\": {\n  \"avatar_url\": \"dolor velit\",\n  \"id\": \"enim pariatur minim\",\n  \"name\": \"ullamco Ut\",\n  \"state\": \"quis veniam consequat et\",\n  \"username\": \"cillum nulla sit\",\n  \"web_url\": \"dolor commodo Duis tempor\"\n }\n}"
												}
											]
										}
									]
								},
								{
									"name": "environments",
									"item": [
										{
											"name": "{environment id}",
											"item": [
												{
													"name": "Deletes an existing environment",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/environments/:environment_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"environments",
																":environment_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																},
																{
																	"key": "environment_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The environment ID"
																}
															]
														},
														"description": "This feature was introduced in GitLab 8.11."
													},
													"response": [
														{
															"name": "Deletes an existing environment",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/environments/:environment_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"environments",
																		":environment_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "environment_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"external_url\": \"tempor esse\",\n \"id\": \"est\",\n \"name\": \"ut adipisicing\",\n \"project\": {\n  \"archived\": \"dolor nulla sunt ut cupidatat\",\n  \"avatar_url\": \"mollit quis dolor\",\n  \"builds_enabled\": \"mollit sit incididunt nulla\",\n  \"container_registry_enabled\": \"adipisicing tempor\",\n  \"created_at\": \"sunt velit Lorem ut mollit\",\n  \"creator_id\": \"consequat\",\n  \"default_branch\": \"nostrud in\",\n  \"description\": \"laboris\",\n  \"forked_from_project\": {\n   \"http_url_to_repo\": \"eu adipisicing ad\",\n   \"id\": \"mollit laboris laborum anim\",\n   \"name\": \"irure\",\n   \"name_with_namespace\": \"dolore\",\n   \"path\": \"labore ut\",\n   \"path_with_namespace\": \"consectetur\",\n   \"web_url\": \"Duis labore aute sit occaecat\"\n  },\n  \"forks_count\": \"mollit\",\n  \"http_url_to_repo\": \"reprehenderit laborum do est\",\n  \"id\": \"fugiat dolore Duis est\",\n  \"issues_enabled\": \"dolore veniam Duis commodo\",\n  \"last_activity_at\": \"sit ipsum minim ut\",\n  \"lfs_enabled\": \"Excepteur et\",\n  \"merge_requests_enabled\": \"consequat occaecat dolore\",\n  \"name\": \"minim sed\",\n  \"name_with_namespace\": \"minim consequat Excepteur\",\n  \"namespace\": {\n   \"id\": \"id eu\",\n   \"kind\": \"non qui in\",\n   \"name\": \"reprehenderit ex proident\",\n   \"path\": \"culpa commodo in\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"occaecat et esse\",\n  \"only_allow_merge_if_build_succeeds\": \"sit reprehenderit eu\",\n  \"open_issues_count\": \"occaecat in\",\n  \"owner\": {\n   \"avatar_url\": \"voluptate cillum deserunt\",\n   \"id\": \"in aliqua\",\n   \"name\": \"aute laborum\",\n   \"state\": \"adipisicing ipsum nisi tempor do\",\n   \"username\": \"fugiat Excepteur proident in\",\n   \"web_url\": \"est\"\n  },\n  \"path\": \"quis sunt officia\",\n  \"path_with_namespace\": \"ullamco adipisicing\",\n  \"public\": \"proident culp\",\n  \"public_builds\": \"incididunt\",\n  \"request_access_enabled\": \"laboris qui sint dolore aliquip\",\n  \"runners_token\": \"ullamco\",\n  \"shared_runners_enabled\": \"adipisicing\",\n  \"shared_with_groups\": \"cupidatat Duis adipisicing\",\n  \"snippets_enabled\": \"Ut qui mollit enim\",\n  \"ssh_url_to_repo\": \"eiusmod veniam\",\n  \"star_count\": \"Ut dolor\",\n  \"statistics\": {\n   \"build_artifacts_size\": \"exercitation\",\n   \"commit_count\": \"in do consequat elit\",\n   \"lfs_objects_size\": \"ipsum laboris Ut irure\",\n   \"repository_size\": \"sed anim mollit\",\n   \"storage_size\": \"pariatur mollit in enim\"\n  },\n  \"tag_list\": \"occaecat commodo ut\",\n  \"visibility_level\": \"labore est sit anim\",\n  \"web_url\": \"mollit la\",\n  \"wiki_enabled\": \"ex\"\n },\n \"slug\": \"in\"\n}"
														}
													]
												},
												{
													"name": "Updates an existing environment",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": "The new environment name"
																},
																{
																	"key": "external_url",
																	"value": "<string>",
																	"description": "The new URL on which this deployment is viewable"
																},
																{
																	"key": "slug",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/environments/:environment_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"environments",
																":environment_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																},
																{
																	"key": "environment_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The environment ID"
																}
															]
														},
														"description": "This feature was introduced in GitLab 8.11."
													},
													"response": [
														{
															"name": "Updates an existing environment",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": {
																				"content": "The new environment name",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "external_url",
																			"value": "<string>",
																			"description": {
																				"content": "The new URL on which this deployment is viewable",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "slug",
																			"value": "<string>",
																			"description": {
																				"content": "",
																				"type": "text/plain"
																			}
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/environments/:environment_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"environments",
																		":environment_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "environment_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"external_url\": \"tempor esse\",\n \"id\": \"est\",\n \"name\": \"ut adipisicing\",\n \"project\": {\n  \"archived\": \"dolor nulla sunt ut cupidatat\",\n  \"avatar_url\": \"mollit quis dolor\",\n  \"builds_enabled\": \"mollit sit incididunt nulla\",\n  \"container_registry_enabled\": \"adipisicing tempor\",\n  \"created_at\": \"sunt velit Lorem ut mollit\",\n  \"creator_id\": \"consequat\",\n  \"default_branch\": \"nostrud in\",\n  \"description\": \"laboris\",\n  \"forked_from_project\": {\n   \"http_url_to_repo\": \"eu adipisicing ad\",\n   \"id\": \"mollit laboris laborum anim\",\n   \"name\": \"irure\",\n   \"name_with_namespace\": \"dolore\",\n   \"path\": \"labore ut\",\n   \"path_with_namespace\": \"consectetur\",\n   \"web_url\": \"Duis labore aute sit occaecat\"\n  },\n  \"forks_count\": \"mollit\",\n  \"http_url_to_repo\": \"reprehenderit laborum do est\",\n  \"id\": \"fugiat dolore Duis est\",\n  \"issues_enabled\": \"dolore veniam Duis commodo\",\n  \"last_activity_at\": \"sit ipsum minim ut\",\n  \"lfs_enabled\": \"Excepteur et\",\n  \"merge_requests_enabled\": \"consequat occaecat dolore\",\n  \"name\": \"minim sed\",\n  \"name_with_namespace\": \"minim consequat Excepteur\",\n  \"namespace\": {\n   \"id\": \"id eu\",\n   \"kind\": \"non qui in\",\n   \"name\": \"reprehenderit ex proident\",\n   \"path\": \"culpa commodo in\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"occaecat et esse\",\n  \"only_allow_merge_if_build_succeeds\": \"sit reprehenderit eu\",\n  \"open_issues_count\": \"occaecat in\",\n  \"owner\": {\n   \"avatar_url\": \"voluptate cillum deserunt\",\n   \"id\": \"in aliqua\",\n   \"name\": \"aute laborum\",\n   \"state\": \"adipisicing ipsum nisi tempor do\",\n   \"username\": \"fugiat Excepteur proident in\",\n   \"web_url\": \"est\"\n  },\n  \"path\": \"quis sunt officia\",\n  \"path_with_namespace\": \"ullamco adipisicing\",\n  \"public\": \"proident culp\",\n  \"public_builds\": \"incididunt\",\n  \"request_access_enabled\": \"laboris qui sint dolore aliquip\",\n  \"runners_token\": \"ullamco\",\n  \"shared_runners_enabled\": \"adipisicing\",\n  \"shared_with_groups\": \"cupidatat Duis adipisicing\",\n  \"snippets_enabled\": \"Ut qui mollit enim\",\n  \"ssh_url_to_repo\": \"eiusmod veniam\",\n  \"star_count\": \"Ut dolor\",\n  \"statistics\": {\n   \"build_artifacts_size\": \"exercitation\",\n   \"commit_count\": \"in do consequat elit\",\n   \"lfs_objects_size\": \"ipsum laboris Ut irure\",\n   \"repository_size\": \"sed anim mollit\",\n   \"storage_size\": \"pariatur mollit in enim\"\n  },\n  \"tag_list\": \"occaecat commodo ut\",\n  \"visibility_level\": \"labore est sit anim\",\n  \"web_url\": \"mollit la\",\n  \"wiki_enabled\": \"ex\"\n },\n \"slug\": \"in\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get all environments of the project",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/environments?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"environments"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": [
												{
													"name": "Get all environments of the project",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/environments?page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"environments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"external_url\": \"tempor esse\",\n \"id\": \"est\",\n \"name\": \"ut adipisicing\",\n \"project\": {\n  \"archived\": \"dolor nulla sunt ut cupidatat\",\n  \"avatar_url\": \"mollit quis dolor\",\n  \"builds_enabled\": \"mollit sit incididunt nulla\",\n  \"container_registry_enabled\": \"adipisicing tempor\",\n  \"created_at\": \"sunt velit Lorem ut mollit\",\n  \"creator_id\": \"consequat\",\n  \"default_branch\": \"nostrud in\",\n  \"description\": \"laboris\",\n  \"forked_from_project\": {\n   \"http_url_to_repo\": \"eu adipisicing ad\",\n   \"id\": \"mollit laboris laborum anim\",\n   \"name\": \"irure\",\n   \"name_with_namespace\": \"dolore\",\n   \"path\": \"labore ut\",\n   \"path_with_namespace\": \"consectetur\",\n   \"web_url\": \"Duis labore aute sit occaecat\"\n  },\n  \"forks_count\": \"mollit\",\n  \"http_url_to_repo\": \"reprehenderit laborum do est\",\n  \"id\": \"fugiat dolore Duis est\",\n  \"issues_enabled\": \"dolore veniam Duis commodo\",\n  \"last_activity_at\": \"sit ipsum minim ut\",\n  \"lfs_enabled\": \"Excepteur et\",\n  \"merge_requests_enabled\": \"consequat occaecat dolore\",\n  \"name\": \"minim sed\",\n  \"name_with_namespace\": \"minim consequat Excepteur\",\n  \"namespace\": {\n   \"id\": \"id eu\",\n   \"kind\": \"non qui in\",\n   \"name\": \"reprehenderit ex proident\",\n   \"path\": \"culpa commodo in\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"occaecat et esse\",\n  \"only_allow_merge_if_build_succeeds\": \"sit reprehenderit eu\",\n  \"open_issues_count\": \"occaecat in\",\n  \"owner\": {\n   \"avatar_url\": \"voluptate cillum deserunt\",\n   \"id\": \"in aliqua\",\n   \"name\": \"aute laborum\",\n   \"state\": \"adipisicing ipsum nisi tempor do\",\n   \"username\": \"fugiat Excepteur proident in\",\n   \"web_url\": \"est\"\n  },\n  \"path\": \"quis sunt officia\",\n  \"path_with_namespace\": \"ullamco adipisicing\",\n  \"public\": \"proident culp\",\n  \"public_builds\": \"incididunt\",\n  \"request_access_enabled\": \"laboris qui sint dolore aliquip\",\n  \"runners_token\": \"ullamco\",\n  \"shared_runners_enabled\": \"adipisicing\",\n  \"shared_with_groups\": \"cupidatat Duis adipisicing\",\n  \"snippets_enabled\": \"Ut qui mollit enim\",\n  \"ssh_url_to_repo\": \"eiusmod veniam\",\n  \"star_count\": \"Ut dolor\",\n  \"statistics\": {\n   \"build_artifacts_size\": \"exercitation\",\n   \"commit_count\": \"in do consequat elit\",\n   \"lfs_objects_size\": \"ipsum laboris Ut irure\",\n   \"repository_size\": \"sed anim mollit\",\n   \"storage_size\": \"pariatur mollit in enim\"\n  },\n  \"tag_list\": \"occaecat commodo ut\",\n  \"visibility_level\": \"labore est sit anim\",\n  \"web_url\": \"mollit la\",\n  \"wiki_enabled\": \"ex\"\n },\n \"slug\": \"in\"\n}"
												}
											]
										},
										{
											"name": "Creates a new environment",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "name",
															"value": "<string>",
															"description": "The name of the environment to be created"
														},
														{
															"key": "external_url",
															"value": "<string>",
															"description": "URL on which this deployment is viewable"
														},
														{
															"key": "slug",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/environments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"environments"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": [
												{
													"name": "Creates a new environment",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": {
																		"content": "The name of the environment to be created",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "external_url",
																	"value": "<string>",
																	"description": {
																		"content": "URL on which this deployment is viewable",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "slug",
																	"value": "<string>",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/environments?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"environments"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"external_url\": \"tempor esse\",\n \"id\": \"est\",\n \"name\": \"ut adipisicing\",\n \"project\": {\n  \"archived\": \"dolor nulla sunt ut cupidatat\",\n  \"avatar_url\": \"mollit quis dolor\",\n  \"builds_enabled\": \"mollit sit incididunt nulla\",\n  \"container_registry_enabled\": \"adipisicing tempor\",\n  \"created_at\": \"sunt velit Lorem ut mollit\",\n  \"creator_id\": \"consequat\",\n  \"default_branch\": \"nostrud in\",\n  \"description\": \"laboris\",\n  \"forked_from_project\": {\n   \"http_url_to_repo\": \"eu adipisicing ad\",\n   \"id\": \"mollit laboris laborum anim\",\n   \"name\": \"irure\",\n   \"name_with_namespace\": \"dolore\",\n   \"path\": \"labore ut\",\n   \"path_with_namespace\": \"consectetur\",\n   \"web_url\": \"Duis labore aute sit occaecat\"\n  },\n  \"forks_count\": \"mollit\",\n  \"http_url_to_repo\": \"reprehenderit laborum do est\",\n  \"id\": \"fugiat dolore Duis est\",\n  \"issues_enabled\": \"dolore veniam Duis commodo\",\n  \"last_activity_at\": \"sit ipsum minim ut\",\n  \"lfs_enabled\": \"Excepteur et\",\n  \"merge_requests_enabled\": \"consequat occaecat dolore\",\n  \"name\": \"minim sed\",\n  \"name_with_namespace\": \"minim consequat Excepteur\",\n  \"namespace\": {\n   \"id\": \"id eu\",\n   \"kind\": \"non qui in\",\n   \"name\": \"reprehenderit ex proident\",\n   \"path\": \"culpa commodo in\"\n  },\n  \"only_allow_merge_if_all_discussions_are_resolved\": \"occaecat et esse\",\n  \"only_allow_merge_if_build_succeeds\": \"sit reprehenderit eu\",\n  \"open_issues_count\": \"occaecat in\",\n  \"owner\": {\n   \"avatar_url\": \"voluptate cillum deserunt\",\n   \"id\": \"in aliqua\",\n   \"name\": \"aute laborum\",\n   \"state\": \"adipisicing ipsum nisi tempor do\",\n   \"username\": \"fugiat Excepteur proident in\",\n   \"web_url\": \"est\"\n  },\n  \"path\": \"quis sunt officia\",\n  \"path_with_namespace\": \"ullamco adipisicing\",\n  \"public\": \"proident culp\",\n  \"public_builds\": \"incididunt\",\n  \"request_access_enabled\": \"laboris qui sint dolore aliquip\",\n  \"runners_token\": \"ullamco\",\n  \"shared_runners_enabled\": \"adipisicing\",\n  \"shared_with_groups\": \"cupidatat Duis adipisicing\",\n  \"snippets_enabled\": \"Ut qui mollit enim\",\n  \"ssh_url_to_repo\": \"eiusmod veniam\",\n  \"star_count\": \"Ut dolor\",\n  \"statistics\": {\n   \"build_artifacts_size\": \"exercitation\",\n   \"commit_count\": \"in do consequat elit\",\n   \"lfs_objects_size\": \"ipsum laboris Ut irure\",\n   \"repository_size\": \"sed anim mollit\",\n   \"storage_size\": \"pariatur mollit in enim\"\n  },\n  \"tag_list\": \"occaecat commodo ut\",\n  \"visibility_level\": \"labore est sit anim\",\n  \"web_url\": \"mollit la\",\n  \"wiki_enabled\": \"ex\"\n },\n \"slug\": \"in\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "fork",
									"item": [
										{
											"name": "Remove a forked_from relationship",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/fork",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"fork"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Remove a forked_from relationship"
											},
											"response": [
												{
													"name": "Remove a forked_from relationship",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/fork?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"fork"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Mark this project as forked from another",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/fork/:forked_from_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"fork",
														":forked_from_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														},
														{
															"key": "forked_from_id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the project it was forked from"
														}
													]
												},
												"description": "Mark this project as forked from another"
											},
											"response": [
												{
													"name": "Mark this project as forked from another",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/fork/:forked_from_id?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"fork",
																":forked_from_id"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "forked_from_id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "hooks",
									"item": [
										{
											"name": "{hook id}",
											"item": [
												{
													"name": "Deletes project hook",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/hooks/:hook_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"hooks",
																":hook_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "hook_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the hook to delete"
																}
															]
														},
														"description": "Deletes project hook"
													},
													"response": [
														{
															"name": "Deletes project hook",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/hooks/:hook_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"hooks",
																		":hook_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "hook_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"build_events\": \"sint\",\n \"created_at\": \"in Duis ull\",\n \"enable_ssl_verification\": \"dolor pariatur ut esse\",\n \"id\": \"elit\",\n \"issues_events\": \"Excepteur ut\",\n \"merge_requests_events\": \"cillum do velit\",\n \"note_events\": \"irure in commodo ad\",\n \"pipeline_events\": \"deserunt exercitation ut voluptate\",\n \"project_id\": \"magna\",\n \"push_events\": \"irure\",\n \"tag_push_events\": \"dolore exercitation\",\n \"url\": \"minim consectetur sit\",\n \"wiki_page_events\": \"qui\"\n}"
														}
													]
												},
												{
													"name": "Get a project hook",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/hooks/:hook_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"hooks",
																":hook_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "hook_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project hook"
																}
															]
														},
														"description": "Get a project hook"
													},
													"response": [
														{
															"name": "Get a project hook",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/hooks/:hook_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"hooks",
																		":hook_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "hook_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"build_events\": \"sint\",\n \"created_at\": \"in Duis ull\",\n \"enable_ssl_verification\": \"dolor pariatur ut esse\",\n \"id\": \"elit\",\n \"issues_events\": \"Excepteur ut\",\n \"merge_requests_events\": \"cillum do velit\",\n \"note_events\": \"irure in commodo ad\",\n \"pipeline_events\": \"deserunt exercitation ut voluptate\",\n \"project_id\": \"magna\",\n \"push_events\": \"irure\",\n \"tag_push_events\": \"dolore exercitation\",\n \"url\": \"minim consectetur sit\",\n \"wiki_page_events\": \"qui\"\n}"
														}
													]
												},
												{
													"name": "Update an existing project hook",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "url",
																	"value": "<string>",
																	"description": "The URL to send the request to"
																},
																{
																	"key": "push_events",
																	"value": "<boolean>",
																	"description": "Trigger hook on push events"
																},
																{
																	"key": "issues_events",
																	"value": "<boolean>",
																	"description": "Trigger hook on issues events"
																},
																{
																	"key": "merge_requests_events",
																	"value": "<boolean>",
																	"description": "Trigger hook on merge request events"
																},
																{
																	"key": "tag_push_events",
																	"value": "<boolean>",
																	"description": "Trigger hook on tag push events"
																},
																{
																	"key": "note_events",
																	"value": "<boolean>",
																	"description": "Trigger hook on note(comment) events"
																},
																{
																	"key": "build_events",
																	"value": "<boolean>",
																	"description": "Trigger hook on build events"
																},
																{
																	"key": "pipeline_events",
																	"value": "<boolean>",
																	"description": "Trigger hook on pipeline events"
																},
																{
																	"key": "wiki_page_events",
																	"value": "<boolean>",
																	"description": "Trigger hook on wiki events"
																},
																{
																	"key": "enable_ssl_verification",
																	"value": "<boolean>",
																	"description": "Do SSL verification when triggering the hook"
																},
																{
																	"key": "token",
																	"value": "<string>",
																	"description": "Secret token to validate received payloads; this will not be returned in the response"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/hooks/:hook_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"hooks",
																":hook_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "hook_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the hook to update"
																}
															]
														},
														"description": "Update an existing project hook"
													},
													"response": [
														{
															"name": "Update an existing project hook",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/hooks/:hook_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"hooks",
																		":hook_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "hook_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"build_events\": \"sint\",\n \"created_at\": \"in Duis ull\",\n \"enable_ssl_verification\": \"dolor pariatur ut esse\",\n \"id\": \"elit\",\n \"issues_events\": \"Excepteur ut\",\n \"merge_requests_events\": \"cillum do velit\",\n \"note_events\": \"irure in commodo ad\",\n \"pipeline_events\": \"deserunt exercitation ut voluptate\",\n \"project_id\": \"magna\",\n \"push_events\": \"irure\",\n \"tag_push_events\": \"dolore exercitation\",\n \"url\": \"minim consectetur sit\",\n \"wiki_page_events\": \"qui\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get project hooks",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/hooks?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"hooks"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Get project hooks"
											},
											"response": [
												{
													"name": "Get project hooks",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/hooks?page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"hooks"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"build_events\": \"sint\",\n \"created_at\": \"in Duis ull\",\n \"enable_ssl_verification\": \"dolor pariatur ut esse\",\n \"id\": \"elit\",\n \"issues_events\": \"Excepteur ut\",\n \"merge_requests_events\": \"cillum do velit\",\n \"note_events\": \"irure in commodo ad\",\n \"pipeline_events\": \"deserunt exercitation ut voluptate\",\n \"project_id\": \"magna\",\n \"push_events\": \"irure\",\n \"tag_push_events\": \"dolore exercitation\",\n \"url\": \"minim consectetur sit\",\n \"wiki_page_events\": \"qui\"\n}"
												}
											]
										},
										{
											"name": "Add hook to project",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "url",
															"value": "<string>",
															"description": "The URL to send the request to"
														},
														{
															"key": "push_events",
															"value": "<boolean>",
															"description": "Trigger hook on push events"
														},
														{
															"key": "issues_events",
															"value": "<boolean>",
															"description": "Trigger hook on issues events"
														},
														{
															"key": "merge_requests_events",
															"value": "<boolean>",
															"description": "Trigger hook on merge request events"
														},
														{
															"key": "tag_push_events",
															"value": "<boolean>",
															"description": "Trigger hook on tag push events"
														},
														{
															"key": "note_events",
															"value": "<boolean>",
															"description": "Trigger hook on note(comment) events"
														},
														{
															"key": "build_events",
															"value": "<boolean>",
															"description": "Trigger hook on build events"
														},
														{
															"key": "pipeline_events",
															"value": "<boolean>",
															"description": "Trigger hook on pipeline events"
														},
														{
															"key": "wiki_page_events",
															"value": "<boolean>",
															"description": "Trigger hook on wiki events"
														},
														{
															"key": "enable_ssl_verification",
															"value": "<boolean>",
															"description": "Do SSL verification when triggering the hook"
														},
														{
															"key": "token",
															"value": "<string>",
															"description": "Secret token to validate received payloads; this will not be returned in the response"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/hooks",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"hooks"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Add hook to project"
											},
											"response": [
												{
													"name": "Add hook to project",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/hooks?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"hooks"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"build_events\": \"sint\",\n \"created_at\": \"in Duis ull\",\n \"enable_ssl_verification\": \"dolor pariatur ut esse\",\n \"id\": \"elit\",\n \"issues_events\": \"Excepteur ut\",\n \"merge_requests_events\": \"cillum do velit\",\n \"note_events\": \"irure in commodo ad\",\n \"pipeline_events\": \"deserunt exercitation ut voluptate\",\n \"project_id\": \"magna\",\n \"push_events\": \"irure\",\n \"tag_push_events\": \"dolore exercitation\",\n \"url\": \"minim consectetur sit\",\n \"wiki_page_events\": \"qui\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "issues",
									"item": [
										{
											"name": "{issue id}",
											"item": [
												{
													"name": "award emoji",
													"item": [
														{
															"name": "{award id}",
															"item": [
																{
																	"name": "Delete a +awardables+ award emoji",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/award_emoji/:award_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"issues",
																				":issue_id",
																				"award_emoji",
																				":award_id"
																			],
																			"variable": [
																				{
																					"key": "award_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) The ID of an award emoji"
																				},
																				{
																					"key": "id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "issue_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "This feature was introduced in 8.9"
																	},
																	"response": [
																		{
																			"name": "Delete a +awardables+ award emoji",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/award_emoji/:award_id?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"issues",
																						":issue_id",
																						"award_emoji",
																						":award_id"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "issue_id"
																						},
																						{
																							"key": "award_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																		}
																	]
																},
																{
																	"name": "Get a specific award emoji",
																	"request": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/award_emoji/:award_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"issues",
																				":issue_id",
																				"award_emoji",
																				":award_id"
																			],
																			"variable": [
																				{
																					"key": "award_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) The ID of the award"
																				},
																				{
																					"key": "id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "issue_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "This feature was introduced in 8.9"
																	},
																	"response": [
																		{
																			"name": "Get a specific award emoji",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/award_emoji/:award_id?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"issues",
																						":issue_id",
																						"award_emoji",
																						":award_id"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "issue_id"
																						},
																						{
																							"key": "award_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get a list of project +awardable+ award emoji",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/award_emoji?page=<integer>&per_page=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id",
																		"award_emoji"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>",
																			"description": "Current page number"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>",
																			"description": "Number of items per page"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "issue_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of an Issue, Merge Request or Snippet"
																		}
																	]
																},
																"description": "This feature was introduced in 8.9"
															},
															"response": [
																{
																	"name": "Get a list of project +awardable+ award emoji",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/award_emoji?page=<integer>&per_page=<integer>&private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"issues",
																				":issue_id",
																				"award_emoji"
																			],
																			"query": [
																				{
																					"key": "page",
																					"value": "<integer>"
																				},
																				{
																					"key": "per_page",
																					"value": "<integer>"
																				},
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "issue_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																}
															]
														},
														{
															"name": "Award a new Emoji",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "The name of a award_emoji (without colons)"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/award_emoji",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id",
																		"award_emoji"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "issue_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This feature was introduced in 8.9"
															},
															"response": [
																{
																	"name": "Award a new Emoji",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/award_emoji?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"issues",
																				":issue_id",
																				"award_emoji"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "issue_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																}
															]
														}
													]
												},
												{
													"name": "notes/{note id}/award emoji",
													"item": [
														{
															"name": "{award id}",
															"item": [
																{
																	"name": "Delete a +awardables+ award emoji",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/notes/:note_id/award_emoji/:award_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"issues",
																				":issue_id",
																				"notes",
																				":note_id",
																				"award_emoji",
																				":award_id"
																			],
																			"variable": [
																				{
																					"key": "award_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) The ID of an award emoji"
																				},
																				{
																					"key": "id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "issue_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "note_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "This feature was introduced in 8.9"
																	},
																	"response": [
																		{
																			"name": "Delete a +awardables+ award emoji",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/notes/:note_id/award_emoji/:award_id?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"issues",
																						":issue_id",
																						"notes",
																						":note_id",
																						"award_emoji",
																						":award_id"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "issue_id"
																						},
																						{
																							"key": "note_id"
																						},
																						{
																							"key": "award_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																		}
																	]
																},
																{
																	"name": "Get a specific award emoji",
																	"request": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/notes/:note_id/award_emoji/:award_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"issues",
																				":issue_id",
																				"notes",
																				":note_id",
																				"award_emoji",
																				":award_id"
																			],
																			"variable": [
																				{
																					"key": "award_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) The ID of the award"
																				},
																				{
																					"key": "id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "issue_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "note_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "This feature was introduced in 8.9"
																	},
																	"response": [
																		{
																			"name": "Get a specific award emoji",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/notes/:note_id/award_emoji/:award_id?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"issues",
																						":issue_id",
																						"notes",
																						":note_id",
																						"award_emoji",
																						":award_id"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "issue_id"
																						},
																						{
																							"key": "note_id"
																						},
																						{
																							"key": "award_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get a list of project +awardable+ award emoji",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/notes/:note_id/award_emoji?page=<integer>&per_page=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id",
																		"notes",
																		":note_id",
																		"award_emoji"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>",
																			"description": "Current page number"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>",
																			"description": "Number of items per page"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "issue_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This feature was introduced in 8.9"
															},
															"response": [
																{
																	"name": "Get a list of project +awardable+ award emoji",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/notes/:note_id/award_emoji?page=<integer>&per_page=<integer>&private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"issues",
																				":issue_id",
																				"notes",
																				":note_id",
																				"award_emoji"
																			],
																			"query": [
																				{
																					"key": "page",
																					"value": "<integer>"
																				},
																				{
																					"key": "per_page",
																					"value": "<integer>"
																				},
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "issue_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																}
															]
														},
														{
															"name": "Award a new Emoji",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "The name of a award_emoji (without colons)"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/notes/:note_id/award_emoji",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id",
																		"notes",
																		":note_id",
																		"award_emoji"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "issue_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This feature was introduced in 8.9"
															},
															"response": [
																{
																	"name": "Award a new Emoji",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/notes/:note_id/award_emoji?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"issues",
																				":issue_id",
																				"notes",
																				":note_id",
																				"award_emoji"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "issue_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																}
															]
														}
													]
												},
												{
													"name": "Delete a project issue",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":issue_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "issue_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project issue"
																}
															]
														},
														"description": "Delete a project issue"
													},
													"response": [
														{
															"name": "Delete a project issue",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "issue_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get a single project issue",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":issue_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "issue_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project issue"
																}
															]
														},
														"description": "Get a single project issue"
													},
													"response": [
														{
															"name": "Get a single project issue",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "issue_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"minim labore consectet\",\n  \"id\": \"Excepteur ipsum ut in laborum\",\n  \"name\": \"dolore nostrud ut mollit\",\n  \"state\": \"ea officia mollit\",\n  \"username\": \"Ut Lorem reprehenderit\",\n  \"web_url\": \"eu ex sint nisi\"\n },\n \"author\": {\n  \"avatar_url\": \"dolore eu\",\n  \"id\": \"aute nulla\",\n  \"name\": \"dolor exercitation elit consequat\",\n  \"state\": \"laborum deserunt\",\n  \"username\": \"dolor cup\",\n  \"web_url\": \"qui adipisicing ullamco\"\n },\n \"confidential\": \"deserunt in\",\n \"created_at\": \"cupidatat consequat proident q\",\n \"description\": \"dolor esse Lorem\",\n \"downvotes\": \"exercitation\",\n \"due_date\": \"sint\",\n \"id\": \"non minim nisi\",\n \"iid\": \"irure\",\n \"labels\": \"tempor\",\n \"milestone\": {\n  \"created_at\": \"in do\",\n  \"description\": \"et\",\n  \"due_date\": \"labore nostrud\",\n  \"id\": \"labore ipsum culpa Lorem reprehenderit\",\n  \"iid\": \"dolor qui\",\n  \"project_id\": \"ad\",\n  \"start_date\": \"proident dolor mollit in ullamco\",\n  \"state\": \"in aute pariatur\",\n  \"title\": \"id\",\n  \"updated_at\": \"irure fugiat qui adipisicing id\"\n },\n \"project_id\": \"es\",\n \"state\": \"elit irure sed\",\n \"subscribed\": \"Excepteur voluptate dolore in\",\n \"title\": \"dolore irure laborum fugiat\",\n \"updated_at\": \"id laborum\",\n \"upvotes\": \"reprehenderit exercitation sit\",\n \"user_notes_count\": \"reprehenderit sit aliquip do\",\n \"web_url\": \"dolore in voluptate in\"\n}"
														}
													]
												},
												{
													"name": "Update an existing issue",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "title",
																	"value": "<string>",
																	"description": "The title of an issue"
																},
																{
																	"key": "updated_at",
																	"value": "<dateTime>",
																	"description": "Date time when the issue was updated. Available only for admins and project owners."
																},
																{
																	"key": "state_event",
																	"value": "<string>",
																	"description": "State of the issue (This can only be one of reopen,close)"
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": "The description of an issue"
																},
																{
																	"key": "assignee_id",
																	"value": "<integer>",
																	"description": "The ID of a user to assign issue"
																},
																{
																	"key": "milestone_id",
																	"value": "<integer>",
																	"description": "The ID of a milestone to assign issue"
																},
																{
																	"key": "labels",
																	"value": "<string>",
																	"description": "Comma-separated list of label names"
																},
																{
																	"key": "due_date",
																	"value": "<string>",
																	"description": "Date time string in the format YEAR-MONTH-DAY"
																},
																{
																	"key": "confidential",
																	"value": "<boolean>",
																	"description": "Boolean parameter if the issue should be confidential"
																},
																{
																	"key": "created_at",
																	"value": "<string>"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":issue_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "issue_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project issue"
																}
															]
														},
														"description": "Update an existing issue"
													},
													"response": [
														{
															"name": "Update an existing issue",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "title",
																			"value": "<string>",
																			"description": {
																				"content": "The title of an issue",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "updated_at",
																			"value": "<dateTime>",
																			"description": {
																				"content": "Date time when the issue was updated. Available only for admins and project owners.",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "state_event",
																			"value": "<string>",
																			"description": {
																				"content": "State of the issue (This can only be one of reopen,close)",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "description",
																			"value": "<string>",
																			"description": {
																				"content": "The description of an issue",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "assignee_id",
																			"value": "<integer>",
																			"description": {
																				"content": "The ID of a user to assign issue",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "milestone_id",
																			"value": "<integer>",
																			"description": {
																				"content": "The ID of a milestone to assign issue",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "labels",
																			"value": "<string>",
																			"description": {
																				"content": "Comma-separated list of label names",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "due_date",
																			"value": "<string>",
																			"description": {
																				"content": "Date time string in the format YEAR-MONTH-DAY",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "confidential",
																			"value": "<boolean>",
																			"description": {
																				"content": "Boolean parameter if the issue should be confidential",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "created_at",
																			"value": "<string>",
																			"description": {
																				"content": "",
																				"type": "text/plain"
																			}
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "issue_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"minim labore consectet\",\n  \"id\": \"Excepteur ipsum ut in laborum\",\n  \"name\": \"dolore nostrud ut mollit\",\n  \"state\": \"ea officia mollit\",\n  \"username\": \"Ut Lorem reprehenderit\",\n  \"web_url\": \"eu ex sint nisi\"\n },\n \"author\": {\n  \"avatar_url\": \"dolore eu\",\n  \"id\": \"aute nulla\",\n  \"name\": \"dolor exercitation elit consequat\",\n  \"state\": \"laborum deserunt\",\n  \"username\": \"dolor cup\",\n  \"web_url\": \"qui adipisicing ullamco\"\n },\n \"confidential\": \"deserunt in\",\n \"created_at\": \"cupidatat consequat proident q\",\n \"description\": \"dolor esse Lorem\",\n \"downvotes\": \"exercitation\",\n \"due_date\": \"sint\",\n \"id\": \"non minim nisi\",\n \"iid\": \"irure\",\n \"labels\": \"tempor\",\n \"milestone\": {\n  \"created_at\": \"in do\",\n  \"description\": \"et\",\n  \"due_date\": \"labore nostrud\",\n  \"id\": \"labore ipsum culpa Lorem reprehenderit\",\n  \"iid\": \"dolor qui\",\n  \"project_id\": \"ad\",\n  \"start_date\": \"proident dolor mollit in ullamco\",\n  \"state\": \"in aute pariatur\",\n  \"title\": \"id\",\n  \"updated_at\": \"irure fugiat qui adipisicing id\"\n },\n \"project_id\": \"es\",\n \"state\": \"elit irure sed\",\n \"subscribed\": \"Excepteur voluptate dolore in\",\n \"title\": \"dolore irure laborum fugiat\",\n \"updated_at\": \"id laborum\",\n \"upvotes\": \"reprehenderit exercitation sit\",\n \"user_notes_count\": \"reprehenderit sit aliquip do\",\n \"web_url\": \"dolore in voluptate in\"\n}"
														}
													]
												},
												{
													"name": "Add spent time for a project issue",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "duration",
																	"value": "<string>",
																	"description": "The duration to be parsed"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/add_spent_time",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":issue_id",
																"add_spent_time"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "issue_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project issue"
																}
															]
														},
														"description": "Add spent time for a project issue"
													},
													"response": [
														{
															"name": "Add spent time for a project issue",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/add_spent_time?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id",
																		"add_spent_time"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "issue_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Move an existing issue",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "to_project_id",
																	"value": "<integer>",
																	"description": "The ID of the new project"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/move",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":issue_id",
																"move"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "issue_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project issue"
																}
															]
														},
														"description": "Move an existing issue"
													},
													"response": [
														{
															"name": "Move an existing issue",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "to_project_id",
																			"value": "<integer>",
																			"description": {
																				"content": "The ID of the new project",
																				"type": "text/plain"
																			}
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/move?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id",
																		"move"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "issue_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"minim labore consectet\",\n  \"id\": \"Excepteur ipsum ut in laborum\",\n  \"name\": \"dolore nostrud ut mollit\",\n  \"state\": \"ea officia mollit\",\n  \"username\": \"Ut Lorem reprehenderit\",\n  \"web_url\": \"eu ex sint nisi\"\n },\n \"author\": {\n  \"avatar_url\": \"dolore eu\",\n  \"id\": \"aute nulla\",\n  \"name\": \"dolor exercitation elit consequat\",\n  \"state\": \"laborum deserunt\",\n  \"username\": \"dolor cup\",\n  \"web_url\": \"qui adipisicing ullamco\"\n },\n \"confidential\": \"deserunt in\",\n \"created_at\": \"cupidatat consequat proident q\",\n \"description\": \"dolor esse Lorem\",\n \"downvotes\": \"exercitation\",\n \"due_date\": \"sint\",\n \"id\": \"non minim nisi\",\n \"iid\": \"irure\",\n \"labels\": \"tempor\",\n \"milestone\": {\n  \"created_at\": \"in do\",\n  \"description\": \"et\",\n  \"due_date\": \"labore nostrud\",\n  \"id\": \"labore ipsum culpa Lorem reprehenderit\",\n  \"iid\": \"dolor qui\",\n  \"project_id\": \"ad\",\n  \"start_date\": \"proident dolor mollit in ullamco\",\n  \"state\": \"in aute pariatur\",\n  \"title\": \"id\",\n  \"updated_at\": \"irure fugiat qui adipisicing id\"\n },\n \"project_id\": \"es\",\n \"state\": \"elit irure sed\",\n \"subscribed\": \"Excepteur voluptate dolore in\",\n \"title\": \"dolore irure laborum fugiat\",\n \"updated_at\": \"id laborum\",\n \"upvotes\": \"reprehenderit exercitation sit\",\n \"user_notes_count\": \"reprehenderit sit aliquip do\",\n \"web_url\": \"dolore in voluptate in\"\n}"
														}
													]
												},
												{
													"name": "Reset spent time for a project issue",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/reset_spent_time",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":issue_id",
																"reset_spent_time"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "issue_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project issue"
																}
															]
														},
														"description": "Reset spent time for a project issue"
													},
													"response": [
														{
															"name": "Reset spent time for a project issue",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/reset_spent_time?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id",
																		"reset_spent_time"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "issue_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Reset the time estimate for a project issue",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/reset_time_estimate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":issue_id",
																"reset_time_estimate"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "issue_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project issue"
																}
															]
														},
														"description": "Reset the time estimate for a project issue"
													},
													"response": [
														{
															"name": "Reset the time estimate for a project issue",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/reset_time_estimate?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id",
																		"reset_time_estimate"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "issue_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Set a time estimate for a project issue",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "duration",
																	"value": "<string>",
																	"description": "The duration to be parsed"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/time_estimate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":issue_id",
																"time_estimate"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "issue_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project issue"
																}
															]
														},
														"description": "Set a time estimate for a project issue"
													},
													"response": [
														{
															"name": "Set a time estimate for a project issue",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/time_estimate?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id",
																		"time_estimate"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "issue_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Show time stats for a project issue",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/time_stats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":issue_id",
																"time_stats"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "issue_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project issue"
																}
															]
														},
														"description": "Show time stats for a project issue"
													},
													"response": [
														{
															"name": "Show time stats for a project issue",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/time_stats?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id",
																		"time_stats"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "issue_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Create a todo on an issuable",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/todo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":issue_id",
																"todo"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "issue_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of an issuable"
																}
															]
														},
														"description": "Create a todo on an issuable"
													},
													"response": [
														{
															"name": "Create a todo on an issuable",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:issue_id/todo?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":issue_id",
																		"todo"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "issue_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"action_name\": \"est enim\",\n \"author\": {\n  \"avatar_url\": \"minim veniam\",\n  \"id\": \"sed aliqua Ut\",\n  \"name\": \"exercitation\",\n  \"state\": \"nisi dolor pariatur Ut\",\n  \"username\": \"veniam deserunt id eu Ut\",\n  \"web_url\": \"et sint\"\n },\n \"body\": \"adipisi\",\n \"created_at\": \"ad irure quis in in\",\n \"id\": \"nisi laborum est ad\",\n \"project\": {\n  \"http_url_to_repo\": \"elit voluptate ipsum in\",\n  \"id\": \"Duis dolor\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"anim occaecat deserunt dolore\",\n  \"path\": \"nostrud elit\",\n  \"path_with_namespace\": \"nostrud ipsum consectetur mollit\",\n  \"web_url\": \"do\"\n },\n \"state\": \"nostrud Duis magna\",\n \"target\": \"consectetur dolor exercitation\",\n \"target_type\": \"in\",\n \"target_url\": \"in enim\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "{noteable id}/notes",
											"item": [
												{
													"name": "{note id}",
													"item": [
														{
															"name": "Delete a +noteable+ note",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:noteable_id/notes/:note_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":noteable_id",
																		"notes",
																		":note_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "noteable_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the noteable"
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a note"
																		}
																	]
																},
																"description": "Delete a +noteable+ note"
															},
															"response": [
																{
																	"name": "Delete a +noteable+ note",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/issues/:noteable_id/notes/:note_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"issues",
																				":noteable_id",
																				"notes",
																				":note_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "noteable_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
																}
															]
														},
														{
															"name": "Get a single +noteable+ note",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:noteable_id/notes/:note_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":noteable_id",
																		"notes",
																		":note_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a note"
																		},
																		{
																			"key": "noteable_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the noteable"
																		}
																	]
																},
																"description": "Get a single +noteable+ note"
															},
															"response": [
																{
																	"name": "Get a single +noteable+ note",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/issues/:noteable_id/notes/:note_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"issues",
																				":noteable_id",
																				"notes",
																				":note_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "noteable_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
																}
															]
														},
														{
															"name": "Update an existing +noteable+ note",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "body",
																			"value": "<string>",
																			"description": "The content of a note"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:noteable_id/notes/:note_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":noteable_id",
																		"notes",
																		":note_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "noteable_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the noteable"
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a note"
																		}
																	]
																},
																"description": "Update an existing +noteable+ note"
															},
															"response": [
																{
																	"name": "Update an existing +noteable+ note",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/issues/:noteable_id/notes/:note_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"issues",
																				":noteable_id",
																				"notes",
																				":note_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "noteable_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get a list of project +noteable+ notes",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:noteable_id/notes?page=<integer>&per_page=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":noteable_id",
																"notes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<integer>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "noteable_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the noteable"
																}
															]
														},
														"description": "Get a list of project +noteable+ notes"
													},
													"response": [
														{
															"name": "Get a list of project +noteable+ notes",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:noteable_id/notes?page=<integer>&per_page=<integer>&private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":noteable_id",
																		"notes"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>"
																		},
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "noteable_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
														}
													]
												},
												{
													"name": "Create a new +noteable+ note",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "body",
																	"value": "<string>",
																	"description": "The content of a note"
																},
																{
																	"key": "created_at",
																	"value": "<string>",
																	"description": "The creation date of the note"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:noteable_id/notes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":noteable_id",
																"notes"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "noteable_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the noteable"
																}
															]
														},
														"description": "Create a new +noteable+ note"
													},
													"response": [
														{
															"name": "Create a new +noteable+ note",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:noteable_id/notes?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":noteable_id",
																		"notes"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "noteable_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "{subscribable id}/subscription",
											"item": [
												{
													"name": "Unsubscribe from a resource",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:subscribable_id/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":subscribable_id",
																"subscription"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "subscribable_id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a resource"
																}
															]
														},
														"description": "Unsubscribe from a resource"
													},
													"response": [
														{
															"name": "Unsubscribe from a resource",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:subscribable_id/subscription?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":subscribable_id",
																		"subscription"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "subscribable_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"minim labore consectet\",\n  \"id\": \"Excepteur ipsum ut in laborum\",\n  \"name\": \"dolore nostrud ut mollit\",\n  \"state\": \"ea officia mollit\",\n  \"username\": \"Ut Lorem reprehenderit\",\n  \"web_url\": \"eu ex sint nisi\"\n },\n \"author\": {\n  \"avatar_url\": \"dolore eu\",\n  \"id\": \"aute nulla\",\n  \"name\": \"dolor exercitation elit consequat\",\n  \"state\": \"laborum deserunt\",\n  \"username\": \"dolor cup\",\n  \"web_url\": \"qui adipisicing ullamco\"\n },\n \"confidential\": \"deserunt in\",\n \"created_at\": \"cupidatat consequat proident q\",\n \"description\": \"dolor esse Lorem\",\n \"downvotes\": \"exercitation\",\n \"due_date\": \"sint\",\n \"id\": \"non minim nisi\",\n \"iid\": \"irure\",\n \"labels\": \"tempor\",\n \"milestone\": {\n  \"created_at\": \"in do\",\n  \"description\": \"et\",\n  \"due_date\": \"labore nostrud\",\n  \"id\": \"labore ipsum culpa Lorem reprehenderit\",\n  \"iid\": \"dolor qui\",\n  \"project_id\": \"ad\",\n  \"start_date\": \"proident dolor mollit in ullamco\",\n  \"state\": \"in aute pariatur\",\n  \"title\": \"id\",\n  \"updated_at\": \"irure fugiat qui adipisicing id\"\n },\n \"project_id\": \"es\",\n \"state\": \"elit irure sed\",\n \"subscribed\": \"Excepteur voluptate dolore in\",\n \"title\": \"dolore irure laborum fugiat\",\n \"updated_at\": \"id laborum\",\n \"upvotes\": \"reprehenderit exercitation sit\",\n \"user_notes_count\": \"reprehenderit sit aliquip do\",\n \"web_url\": \"dolore in voluptate in\"\n}"
														}
													]
												},
												{
													"name": "Subscribe to a resource",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues/:subscribable_id/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues",
																":subscribable_id",
																"subscription"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "subscribable_id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a resource"
																}
															]
														},
														"description": "Subscribe to a resource"
													},
													"response": [
														{
															"name": "Subscribe to a resource",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/issues/:subscribable_id/subscription?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"issues",
																		":subscribable_id",
																		"subscription"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "subscribable_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"minim labore consectet\",\n  \"id\": \"Excepteur ipsum ut in laborum\",\n  \"name\": \"dolore nostrud ut mollit\",\n  \"state\": \"ea officia mollit\",\n  \"username\": \"Ut Lorem reprehenderit\",\n  \"web_url\": \"eu ex sint nisi\"\n },\n \"author\": {\n  \"avatar_url\": \"dolore eu\",\n  \"id\": \"aute nulla\",\n  \"name\": \"dolor exercitation elit consequat\",\n  \"state\": \"laborum deserunt\",\n  \"username\": \"dolor cup\",\n  \"web_url\": \"qui adipisicing ullamco\"\n },\n \"confidential\": \"deserunt in\",\n \"created_at\": \"cupidatat consequat proident q\",\n \"description\": \"dolor esse Lorem\",\n \"downvotes\": \"exercitation\",\n \"due_date\": \"sint\",\n \"id\": \"non minim nisi\",\n \"iid\": \"irure\",\n \"labels\": \"tempor\",\n \"milestone\": {\n  \"created_at\": \"in do\",\n  \"description\": \"et\",\n  \"due_date\": \"labore nostrud\",\n  \"id\": \"labore ipsum culpa Lorem reprehenderit\",\n  \"iid\": \"dolor qui\",\n  \"project_id\": \"ad\",\n  \"start_date\": \"proident dolor mollit in ullamco\",\n  \"state\": \"in aute pariatur\",\n  \"title\": \"id\",\n  \"updated_at\": \"irure fugiat qui adipisicing id\"\n },\n \"project_id\": \"es\",\n \"state\": \"elit irure sed\",\n \"subscribed\": \"Excepteur voluptate dolore in\",\n \"title\": \"dolore irure laborum fugiat\",\n \"updated_at\": \"id laborum\",\n \"upvotes\": \"reprehenderit exercitation sit\",\n \"user_notes_count\": \"reprehenderit sit aliquip do\",\n \"web_url\": \"dolore in voluptate in\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get a list of project issues",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/issues?state=all&iid=<integer>&labels=<string>&milestone=<string>&order_by=created_at&sort=desc&page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"issues"
													],
													"query": [
														{
															"key": "state",
															"value": "all",
															"description": "Return opened, closed, or all issues"
														},
														{
															"key": "iid",
															"value": "<integer>",
															"description": "Return the issue having the given `iid`"
														},
														{
															"key": "labels",
															"value": "<string>",
															"description": "Comma-separated list of label names"
														},
														{
															"key": "milestone",
															"value": "<string>",
															"description": "Return issues for a specific milestone"
														},
														{
															"key": "order_by",
															"value": "created_at",
															"description": "Return issues ordered by `created_at` or `updated_at` fields."
														},
														{
															"key": "sort",
															"value": "desc",
															"description": "Return issues sorted in `asc` or `desc` order."
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Get a list of project issues"
											},
											"response": [
												{
													"name": "Get a list of project issues",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues?state=all&iid=<integer>&labels=<string>&milestone=<string>&order_by=created_at&sort=desc&page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues"
															],
															"query": [
																{
																	"key": "state",
																	"value": "all"
																},
																{
																	"key": "iid",
																	"value": "<integer>"
																},
																{
																	"key": "labels",
																	"value": "<string>"
																},
																{
																	"key": "milestone",
																	"value": "<string>"
																},
																{
																	"key": "order_by",
																	"value": "created_at"
																},
																{
																	"key": "sort",
																	"value": "desc"
																},
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"assignee\": {\n  \"avatar_url\": \"minim labore consectet\",\n  \"id\": \"Excepteur ipsum ut in laborum\",\n  \"name\": \"dolore nostrud ut mollit\",\n  \"state\": \"ea officia mollit\",\n  \"username\": \"Ut Lorem reprehenderit\",\n  \"web_url\": \"eu ex sint nisi\"\n },\n \"author\": {\n  \"avatar_url\": \"dolore eu\",\n  \"id\": \"aute nulla\",\n  \"name\": \"dolor exercitation elit consequat\",\n  \"state\": \"laborum deserunt\",\n  \"username\": \"dolor cup\",\n  \"web_url\": \"qui adipisicing ullamco\"\n },\n \"confidential\": \"deserunt in\",\n \"created_at\": \"cupidatat consequat proident q\",\n \"description\": \"dolor esse Lorem\",\n \"downvotes\": \"exercitation\",\n \"due_date\": \"sint\",\n \"id\": \"non minim nisi\",\n \"iid\": \"irure\",\n \"labels\": \"tempor\",\n \"milestone\": {\n  \"created_at\": \"in do\",\n  \"description\": \"et\",\n  \"due_date\": \"labore nostrud\",\n  \"id\": \"labore ipsum culpa Lorem reprehenderit\",\n  \"iid\": \"dolor qui\",\n  \"project_id\": \"ad\",\n  \"start_date\": \"proident dolor mollit in ullamco\",\n  \"state\": \"in aute pariatur\",\n  \"title\": \"id\",\n  \"updated_at\": \"irure fugiat qui adipisicing id\"\n },\n \"project_id\": \"es\",\n \"state\": \"elit irure sed\",\n \"subscribed\": \"Excepteur voluptate dolore in\",\n \"title\": \"dolore irure laborum fugiat\",\n \"updated_at\": \"id laborum\",\n \"upvotes\": \"reprehenderit exercitation sit\",\n \"user_notes_count\": \"reprehenderit sit aliquip do\",\n \"web_url\": \"dolore in voluptate in\"\n}"
												}
											]
										},
										{
											"name": "Create a new project issue",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "title",
															"value": "<string>",
															"description": "The title of an issue"
														},
														{
															"key": "created_at",
															"value": "<dateTime>",
															"description": "Date time when the issue was created. Available only for admins and project owners."
														},
														{
															"key": "merge_request_for_resolving_discussions",
															"value": "<integer>",
															"description": "The IID of a merge request for which to resolve discussions"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "The description of an issue"
														},
														{
															"key": "assignee_id",
															"value": "<integer>",
															"description": "The ID of a user to assign issue"
														},
														{
															"key": "milestone_id",
															"value": "<integer>",
															"description": "The ID of a milestone to assign issue"
														},
														{
															"key": "labels",
															"value": "<string>",
															"description": "Comma-separated list of label names"
														},
														{
															"key": "due_date",
															"value": "<string>",
															"description": "Date time string in the format YEAR-MONTH-DAY"
														},
														{
															"key": "confidential",
															"value": "<boolean>",
															"description": "Boolean parameter if the issue should be confidential"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/issues",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"issues"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Create a new project issue"
											},
											"response": [
												{
													"name": "Create a new project issue",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "title",
																	"value": "<string>",
																	"description": {
																		"content": "The title of an issue",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "created_at",
																	"value": "<dateTime>",
																	"description": {
																		"content": "Date time when the issue was created. Available only for admins and project owners.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "merge_request_for_resolving_discussions",
																	"value": "<integer>",
																	"description": {
																		"content": "The IID of a merge request for which to resolve discussions",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": {
																		"content": "The description of an issue",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "assignee_id",
																	"value": "<integer>",
																	"description": {
																		"content": "The ID of a user to assign issue",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "milestone_id",
																	"value": "<integer>",
																	"description": {
																		"content": "The ID of a milestone to assign issue",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "labels",
																	"value": "<string>",
																	"description": {
																		"content": "Comma-separated list of label names",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "due_date",
																	"value": "<string>",
																	"description": {
																		"content": "Date time string in the format YEAR-MONTH-DAY",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "confidential",
																	"value": "<boolean>",
																	"description": {
																		"content": "Boolean parameter if the issue should be confidential",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/issues?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"issues"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"assignee\": {\n  \"avatar_url\": \"minim labore consectet\",\n  \"id\": \"Excepteur ipsum ut in laborum\",\n  \"name\": \"dolore nostrud ut mollit\",\n  \"state\": \"ea officia mollit\",\n  \"username\": \"Ut Lorem reprehenderit\",\n  \"web_url\": \"eu ex sint nisi\"\n },\n \"author\": {\n  \"avatar_url\": \"dolore eu\",\n  \"id\": \"aute nulla\",\n  \"name\": \"dolor exercitation elit consequat\",\n  \"state\": \"laborum deserunt\",\n  \"username\": \"dolor cup\",\n  \"web_url\": \"qui adipisicing ullamco\"\n },\n \"confidential\": \"deserunt in\",\n \"created_at\": \"cupidatat consequat proident q\",\n \"description\": \"dolor esse Lorem\",\n \"downvotes\": \"exercitation\",\n \"due_date\": \"sint\",\n \"id\": \"non minim nisi\",\n \"iid\": \"irure\",\n \"labels\": \"tempor\",\n \"milestone\": {\n  \"created_at\": \"in do\",\n  \"description\": \"et\",\n  \"due_date\": \"labore nostrud\",\n  \"id\": \"labore ipsum culpa Lorem reprehenderit\",\n  \"iid\": \"dolor qui\",\n  \"project_id\": \"ad\",\n  \"start_date\": \"proident dolor mollit in ullamco\",\n  \"state\": \"in aute pariatur\",\n  \"title\": \"id\",\n  \"updated_at\": \"irure fugiat qui adipisicing id\"\n },\n \"project_id\": \"es\",\n \"state\": \"elit irure sed\",\n \"subscribed\": \"Excepteur voluptate dolore in\",\n \"title\": \"dolore irure laborum fugiat\",\n \"updated_at\": \"id laborum\",\n \"upvotes\": \"reprehenderit exercitation sit\",\n \"user_notes_count\": \"reprehenderit sit aliquip do\",\n \"web_url\": \"dolore in voluptate in\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "keys",
									"item": [
										{
											"name": "{key id}",
											"item": [
												{
													"name": "Delete deploy key for a project",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/keys/:key_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"keys",
																":key_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the project"
																},
																{
																	"key": "key_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the deploy key"
																}
															]
														},
														"description": "Delete deploy key for a project"
													},
													"response": [
														{
															"name": "Delete deploy key for a project",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/keys/:key_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"keys",
																		":key_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "key_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
														}
													]
												},
												{
													"name": "Get single deploy key",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/keys/:key_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"keys",
																":key_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the project"
																},
																{
																	"key": "key_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the deploy key"
																}
															]
														},
														"description": "Get single deploy key"
													},
													"response": [
														{
															"name": "Get single deploy key",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/keys/:key_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"keys",
																		":key_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "key_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
														}
													]
												},
												{
													"name": "Disable a deploy key for a project",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/keys/:key_id/disable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"keys",
																":key_id",
																"disable"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the project"
																},
																{
																	"key": "key_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the deploy key"
																}
															]
														},
														"description": "This feature was added in GitLab 8.11"
													},
													"response": [
														{
															"name": "Disable a deploy key for a project",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/keys/:key_id/disable?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"keys",
																		":key_id",
																		"disable"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "key_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
														}
													]
												},
												{
													"name": "Enable a deploy key for a project",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/keys/:key_id/enable",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"keys",
																":key_id",
																"enable"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of the project"
																},
																{
																	"key": "key_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the deploy key"
																}
															]
														},
														"description": "This feature was added in GitLab 8.11"
													},
													"response": [
														{
															"name": "Enable a deploy key for a project",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/keys/:key_id/enable?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"keys",
																		":key_id",
																		"enable"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "key_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get a specific project's deploy keys",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"keys"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the project"
														}
													]
												},
												"description": "Get a specific project's deploy keys"
											},
											"response": [
												{
													"name": "Get a specific project's deploy keys",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/keys?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"keys"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
												}
											]
										},
										{
											"name": "Add new deploy key to currently authenticated user",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "key",
															"value": "<string>",
															"description": "The new deploy key"
														},
														{
															"key": "title",
															"value": "<string>",
															"description": "The name of the deploy key"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"keys"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of the project"
														}
													]
												},
												"description": "Add new deploy key to currently authenticated user"
											},
											"response": [
												{
													"name": "Add new deploy key to currently authenticated user",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/keys?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"keys"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "labels",
									"item": [
										{
											"name": "{subscribable id}/subscription",
											"item": [
												{
													"name": "Unsubscribe from a resource",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/labels/:subscribable_id/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"labels",
																":subscribable_id",
																"subscription"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "subscribable_id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a resource"
																}
															]
														},
														"description": "Unsubscribe from a resource"
													},
													"response": [
														{
															"name": "Unsubscribe from a resource",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/labels/:subscribable_id/subscription?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"labels",
																		":subscribable_id",
																		"subscription"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "subscribable_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"closed_issues_count\": \"irure laboris in cupidatat nostrud\",\n \"color\": \"aliqua sint commodo\",\n \"description\": \"est nisi ut nost\",\n \"id\": \"anim quis ex\",\n \"name\": \"Excepteur\",\n \"open_issues_count\": \"tempor non voluptate aute pr\",\n \"open_merge_requests_count\": \"anim nisi in elit\",\n \"priority\": \"dolore ad sit\",\n \"subscribed\": \"amet do\"\n}"
														}
													]
												},
												{
													"name": "Subscribe to a resource",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/labels/:subscribable_id/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"labels",
																":subscribable_id",
																"subscription"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "subscribable_id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a resource"
																}
															]
														},
														"description": "Subscribe to a resource"
													},
													"response": [
														{
															"name": "Subscribe to a resource",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/labels/:subscribable_id/subscription?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"labels",
																		":subscribable_id",
																		"subscription"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "subscribable_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"closed_issues_count\": \"irure laboris in cupidatat nostrud\",\n \"color\": \"aliqua sint commodo\",\n \"description\": \"est nisi ut nost\",\n \"id\": \"anim quis ex\",\n \"name\": \"Excepteur\",\n \"open_issues_count\": \"tempor non voluptate aute pr\",\n \"open_merge_requests_count\": \"anim nisi in elit\",\n \"priority\": \"dolore ad sit\",\n \"subscribed\": \"amet do\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Delete an existing label",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/labels?name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"labels"
													],
													"query": [
														{
															"key": "name",
															"value": "<string>",
															"description": "(Required) The name of the label to be deleted"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Delete an existing label"
											},
											"response": [
												{
													"name": "Delete an existing label",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/labels?name=<string>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"labels"
															],
															"query": [
																{
																	"key": "name",
																	"value": "<string>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"closed_issues_count\": \"irure laboris in cupidatat nostrud\",\n \"color\": \"aliqua sint commodo\",\n \"description\": \"est nisi ut nost\",\n \"id\": \"anim quis ex\",\n \"name\": \"Excepteur\",\n \"open_issues_count\": \"tempor non voluptate aute pr\",\n \"open_merge_requests_count\": \"anim nisi in elit\",\n \"priority\": \"dolore ad sit\",\n \"subscribed\": \"amet do\"\n}"
												}
											]
										},
										{
											"name": "Get all labels of the project",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"labels"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Get all labels of the project"
											},
											"response": [
												{
													"name": "Get all labels of the project",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/labels?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"labels"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"closed_issues_count\": \"irure laboris in cupidatat nostrud\",\n \"color\": \"aliqua sint commodo\",\n \"description\": \"est nisi ut nost\",\n \"id\": \"anim quis ex\",\n \"name\": \"Excepteur\",\n \"open_issues_count\": \"tempor non voluptate aute pr\",\n \"open_merge_requests_count\": \"anim nisi in elit\",\n \"priority\": \"dolore ad sit\",\n \"subscribed\": \"amet do\"\n}"
												}
											]
										},
										{
											"name": "Create a new label",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "name",
															"value": "<string>",
															"description": "The name of the label to be created"
														},
														{
															"key": "color",
															"value": "<string>",
															"description": "The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "The description of label to be created"
														},
														{
															"key": "priority",
															"value": "<integer>",
															"description": "The priority of the label"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"labels"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Create a new label"
											},
											"response": [
												{
													"name": "Create a new label",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": {
																		"content": "The name of the label to be created",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "color",
																	"value": "<string>",
																	"description": {
																		"content": "The color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": {
																		"content": "The description of label to be created",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "priority",
																	"value": "<integer>",
																	"description": {
																		"content": "The priority of the label",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/labels?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"labels"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"closed_issues_count\": \"irure laboris in cupidatat nostrud\",\n \"color\": \"aliqua sint commodo\",\n \"description\": \"est nisi ut nost\",\n \"id\": \"anim quis ex\",\n \"name\": \"Excepteur\",\n \"open_issues_count\": \"tempor non voluptate aute pr\",\n \"open_merge_requests_count\": \"anim nisi in elit\",\n \"priority\": \"dolore ad sit\",\n \"subscribed\": \"amet do\"\n}"
												}
											]
										},
										{
											"name": "Update an existing label. At least one optional parameter is required.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "name",
															"value": "<string>",
															"description": "The name of the label to be updated"
														},
														{
															"key": "new_name",
															"value": "<string>",
															"description": "The new name of the label"
														},
														{
															"key": "color",
															"value": "<string>",
															"description": "The new color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "The new description of label"
														},
														{
															"key": "priority",
															"value": "<integer>",
															"description": "The priority of the label"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/labels",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"labels"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Update an existing label. At least one optional parameter is required."
											},
											"response": [
												{
													"name": "Update an existing label. At least one optional parameter is required.",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "name",
																	"value": "<string>",
																	"description": {
																		"content": "The name of the label to be updated",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "new_name",
																	"value": "<string>",
																	"description": {
																		"content": "The new name of the label",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "color",
																	"value": "<string>",
																	"description": {
																		"content": "The new color of the label given in 6-digit hex notation with leading '#' sign (e.g. #FFAABB)",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": {
																		"content": "The new description of label",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "priority",
																	"value": "<integer>",
																	"description": {
																		"content": "The priority of the label",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/labels?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"labels"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"closed_issues_count\": \"irure laboris in cupidatat nostrud\",\n \"color\": \"aliqua sint commodo\",\n \"description\": \"est nisi ut nost\",\n \"id\": \"anim quis ex\",\n \"name\": \"Excepteur\",\n \"open_issues_count\": \"tempor non voluptate aute pr\",\n \"open_merge_requests_count\": \"anim nisi in elit\",\n \"priority\": \"dolore ad sit\",\n \"subscribed\": \"amet do\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "members",
									"item": [
										{
											"name": "{user id}",
											"item": [
												{
													"name": "Removes a user from a group or project.",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/members/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"members",
																":user_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																},
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The user ID of the member"
																}
															]
														},
														"description": "Removes a user from a group or project."
													},
													"response": [
														{
															"name": "Removes a user from a group or project.",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/members/:user_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"members",
																		":user_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Gets a member of a group or project.",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/members/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"members",
																":user_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																},
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The user ID of the member"
																}
															]
														},
														"description": "Gets a member of a group or project."
													},
													"response": [
														{
															"name": "Gets a member of a group or project.",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/members/:user_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"members",
																		":user_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"access_level\": \"irure Ut dolore sed\",\n \"avatar_url\": \"nisi cupidatat\",\n \"expires_at\": \"Ut ut sint et\",\n \"id\": \"anim ut esse ad\",\n \"name\": \"aliqua aliquip nostrud cillum nulla\",\n \"state\": \"Lorem sint minim\",\n \"username\": \"aute dolor laboris\",\n \"web_url\": \"aliquip exercitation ipsum\"\n}"
														}
													]
												},
												{
													"name": "Updates a member of a group or project.",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "access_level",
																	"value": "<integer>",
																	"description": "A valid access level"
																},
																{
																	"key": "expires_at",
																	"value": "<dateTime>",
																	"description": "Date string in the format YEAR-MONTH-DAY"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/members/:user_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"members",
																":user_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																},
																{
																	"key": "user_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The user ID of the new member"
																}
															]
														},
														"description": "Updates a member of a group or project."
													},
													"response": [
														{
															"name": "Updates a member of a group or project.",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/members/:user_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"members",
																		":user_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "user_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"access_level\": \"irure Ut dolore sed\",\n \"avatar_url\": \"nisi cupidatat\",\n \"expires_at\": \"Ut ut sint et\",\n \"id\": \"anim ut esse ad\",\n \"name\": \"aliqua aliquip nostrud cillum nulla\",\n \"state\": \"Lorem sint minim\",\n \"username\": \"aute dolor laboris\",\n \"web_url\": \"aliquip exercitation ipsum\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Gets a list of group or project members viewable by the authenticated user.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/members?query=<string>&page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"members"
													],
													"query": [
														{
															"key": "query",
															"value": "<string>",
															"description": "A query string to search for members"
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID"
														}
													]
												},
												"description": "Gets a list of group or project members viewable by the authenticated user."
											},
											"response": [
												{
													"name": "Gets a list of group or project members viewable by the authenticated user.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/members?query=<string>&page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"members"
															],
															"query": [
																{
																	"key": "query",
																	"value": "<string>"
																},
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"access_level\": \"irure Ut dolore sed\",\n \"avatar_url\": \"nisi cupidatat\",\n \"expires_at\": \"Ut ut sint et\",\n \"id\": \"anim ut esse ad\",\n \"name\": \"aliqua aliquip nostrud cillum nulla\",\n \"state\": \"Lorem sint minim\",\n \"username\": \"aute dolor laboris\",\n \"web_url\": \"aliquip exercitation ipsum\"\n}"
												}
											]
										},
										{
											"name": "Adds a member to a group or project.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "user_id",
															"value": "<integer>",
															"description": "The user ID of the new member"
														},
														{
															"key": "access_level",
															"value": "<integer>",
															"description": "A valid access level (defaults: `30`, developer access level)"
														},
														{
															"key": "expires_at",
															"value": "<dateTime>",
															"description": "Date string in the format YEAR-MONTH-DAY"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/members",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"members"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID"
														}
													]
												},
												"description": "Adds a member to a group or project."
											},
											"response": [
												{
													"name": "Adds a member to a group or project.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/members?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"members"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"access_level\": \"irure Ut dolore sed\",\n \"avatar_url\": \"nisi cupidatat\",\n \"expires_at\": \"Ut ut sint et\",\n \"id\": \"anim ut esse ad\",\n \"name\": \"aliqua aliquip nostrud cillum nulla\",\n \"state\": \"Lorem sint minim\",\n \"username\": \"aute dolor laboris\",\n \"web_url\": \"aliquip exercitation ipsum\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "merge request",
									"item": [
										{
											"name": "{merge request id}",
											"item": [
												{
													"name": "comments",
													"item": [
														{
															"name": "Get the comments of a merge request",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/comments?page=<integer>&per_page=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_request",
																		":merge_request_id",
																		"comments"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>",
																			"description": "Current page number"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>",
																			"description": "Number of items per page"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "merge_request_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Duplicate. DEPRECATED and WILL BE REMOVED in 9.0"
															},
															"response": [
																{
																	"name": "Get the comments of a merge request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/comments?page=<integer>&per_page=<integer>&private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_request",
																				":merge_request_id",
																				"comments"
																			],
																			"query": [
																				{
																					"key": "page",
																					"value": "<integer>"
																				},
																				{
																					"key": "per_page",
																					"value": "<integer>"
																				},
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "merge_request_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"author\": {\n  \"avatar_url\": \"in\",\n  \"id\": \"veniam\",\n  \"name\": \"tempor\",\n  \"state\": \"reprehenderit\",\n  \"username\": \"voluptate qui consequat exercitation\",\n  \"web_url\": \"magna aliquip minim\"\n },\n \"note\": \"velit do\"\n}"
																}
															]
														},
														{
															"name": "Post a comment to a merge request",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "note",
																			"value": "<string>",
																			"description": "The text of the comment"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/comments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_request",
																		":merge_request_id",
																		"comments"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "merge_request_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Duplicate. DEPRECATED and WILL BE REMOVED in 9.0"
															},
															"response": [
																{
																	"name": "Post a comment to a merge request",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/comments?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_request",
																				":merge_request_id",
																				"comments"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "merge_request_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"author\": {\n  \"avatar_url\": \"in\",\n  \"id\": \"veniam\",\n  \"name\": \"tempor\",\n  \"state\": \"reprehenderit\",\n  \"username\": \"voluptate qui consequat exercitation\",\n  \"web_url\": \"magna aliquip minim\"\n },\n \"note\": \"velit do\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get a single merge request",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_request",
																":merge_request_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a merge request"
																}
															]
														},
														"description": "This endpoint is deprecated and will be removed in GitLab 9.0."
													},
													"response": [
														{
															"name": "Get a single merge request",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_request",
																		":merge_request_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
														}
													]
												},
												{
													"name": "Update a merge request",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "title",
																	"value": "<string>",
																	"description": "The title of the merge request"
																},
																{
																	"key": "target_branch",
																	"value": "<string>",
																	"description": "The target branch"
																},
																{
																	"key": "state_event",
																	"value": "<string>",
																	"description": "Status of the merge request (This can only be one of close,reopen,merge)"
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": "The description of the merge request"
																},
																{
																	"key": "assignee_id",
																	"value": "<integer>",
																	"description": "The ID of a user to assign the merge request"
																},
																{
																	"key": "milestone_id",
																	"value": "<integer>",
																	"description": "The ID of a milestone to assign the merge request"
																},
																{
																	"key": "labels",
																	"value": "<string>",
																	"description": "Comma-separated list of label names"
																},
																{
																	"key": "remove_source_branch",
																	"value": "<boolean>",
																	"description": "Remove source branch when merging"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_request",
																":merge_request_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Update a merge request"
													},
													"response": [
														{
															"name": "Update a merge request",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_request",
																		":merge_request_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
														}
													]
												},
												{
													"name": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/cancel_merge_when_build_succeeds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_request",
																":merge_request_id",
																"cancel_merge_when_build_succeeds"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled"
													},
													"response": [
														{
															"name": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/cancel_merge_when_build_succeeds?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_request",
																		":merge_request_id",
																		"cancel_merge_when_build_succeeds"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
														}
													]
												},
												{
													"name": "Show the merge request changes",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/changes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_request",
																":merge_request_id",
																"changes"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Show the merge request changes"
													},
													"response": [
														{
															"name": "Show the merge request changes",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/changes?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_request",
																		":merge_request_id",
																		"changes"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"pariatur dolor labore ut culpa\",\n  \"id\": \"id nisi ex in\",\n  \"name\": \"voluptate dolor\",\n  \"state\": \"do sunt dolore in\",\n  \"username\": \"minim dolore fugiat\",\n  \"web_url\": \"Excepteur enim esse\"\n },\n \"author\": {\n  \"avatar_url\": \"dolor \",\n  \"id\": \"dolore sint nisi ullamco aute\",\n  \"name\": \"et laborum\",\n  \"state\": \"irure\",\n  \"username\": \"sint\",\n  \"web_url\": \"consectetur quis ve\"\n },\n \"changes\": {\n  \"a_mode\": \"quis ut fugiat in\",\n  \"b_mode\": \"sit fugiat ex exercitation\",\n  \"deleted_file\": \"cillum nostrud in\",\n  \"diff\": \"ipsum\",\n  \"new_file\": \"nisi sit dolor enim Excepteur\",\n  \"new_path\": \"sunt nisi laboris reprehenderit enim\",\n  \"old_path\": \"sunt dolore pariatur\",\n  \"renamed_file\": \"magna cupidatat est nulla\"\n },\n \"created_at\": \"voluptate\",\n \"description\": \"eiusmod veniam deserun\",\n \"downvotes\": \"aliquip aliqua proident\",\n \"force_remove_source_branch\": \"officia mollit ea elit\",\n \"id\": \"off\",\n \"iid\": \"occaecat in adipisicing et\",\n \"labels\": \"esse reprehenderit eu ullamco\",\n \"merge_commit_sha\": \"exercitation id occaecat\",\n \"merge_status\": \"aute Duis ea sed\",\n \"merge_when_build_succeeds\": \"qui irure\",\n \"milestone\": {\n  \"created_at\": \"nisi incididunt nulla amet\",\n  \"description\": \"minim in occaecat\",\n  \"due_date\": \"mollit ad ex\",\n  \"id\": \"culpa esse n\",\n  \"iid\": \"Ut officia pariatur\",\n  \"project_id\": \"incididunt cillu\",\n  \"start_date\": \"officia nisi\",\n  \"state\": \"dolore in esse do\",\n  \"title\": \"tempor nulla\",\n  \"updated_at\": \"cillum ni\"\n },\n \"project_id\": \"sed esse\",\n \"sha\": \"elit ut reprehenderit dolor\",\n \"should_remove_source_branch\": \"sint s\",\n \"source_branch\": \"consequat id minim\",\n \"source_project_id\": \"elit enim reprehenderit\",\n \"state\": \"magna non ex aliquip\",\n \"subscribed\": \"deserunt pariatur labore\",\n \"target_branch\": \"anim ipsum laborum eiusmod\",\n \"target_project_id\": \"pariatur velit Excepteur\",\n \"title\": \"ad rep\",\n \"updated_at\": \"non dolore reprehenderit exercitation\",\n \"upvotes\": \"cupidatat qui sed a\",\n \"user_notes_count\": \"anim elit officia\",\n \"web_url\": \"cupidatat voluptate sed quis\",\n \"work_in_progress\": \"dolor ut nulla\"\n}"
														}
													]
												},
												{
													"name": "List issues that will be closed on merge",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/closes_issues?page=<integer>&per_page=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_request",
																":merge_request_id",
																"closes_issues"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<integer>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "List issues that will be closed on merge"
													},
													"response": [
														{
															"name": "List issues that will be closed on merge",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/closes_issues?page=<integer>&per_page=<integer>&private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_request",
																		":merge_request_id",
																		"closes_issues"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>"
																		},
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"author\": {\n  \"avatar_url\": \"in\",\n  \"id\": \"veniam\",\n  \"name\": \"tempor\",\n  \"state\": \"reprehenderit\",\n  \"username\": \"voluptate qui consequat exercitation\",\n  \"web_url\": \"magna aliquip minim\"\n },\n \"note\": \"velit do\"\n}"
														}
													]
												},
												{
													"name": "Get the commits of a merge request",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/commits",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_request",
																":merge_request_id",
																"commits"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get the commits of a merge request"
													},
													"response": [
														{
															"name": "Get the commits of a merge request",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/commits?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_request",
																		":merge_request_id",
																		"commits"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"author_email\": \"laborum nostrud in\",\n \"author_name\": \"veniam aliquip amet\",\n \"committer_email\": \"ad amet labore irure\",\n \"committer_name\": \"id occ\",\n \"created_at\": \"deserunt fugiat mollit\",\n \"id\": \"reprehenderit officia sunt incid\",\n \"message\": \"amet nostrud dolore non id\",\n \"short_id\": \"incididunt commodo sed enim consequat\",\n \"title\": \"est proident\"\n}"
														}
													]
												},
												{
													"name": "Merge a merge request",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "merge_commit_message",
																	"value": "<string>",
																	"description": "Custom merge commit message"
																},
																{
																	"key": "should_remove_source_branch",
																	"value": "<boolean>",
																	"description": "When true, the source branch will be deleted if possible"
																},
																{
																	"key": "merge_when_build_succeeds",
																	"value": "<boolean>",
																	"description": "When true, this merge request will be merged when the pipeline succeeds"
																},
																{
																	"key": "sha",
																	"value": "<string>",
																	"description": "When present, must have the HEAD SHA of the source branch"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/merge",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_request",
																":merge_request_id",
																"merge"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Merge a merge request"
													},
													"response": [
														{
															"name": "Merge a merge request",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:merge_request_id/merge?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_request",
																		":merge_request_id",
																		"merge"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "{subscribable id}/subscription",
											"item": [
												{
													"name": "Unsubscribe from a resource",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:subscribable_id/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_request",
																":subscribable_id",
																"subscription"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "subscribable_id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a resource"
																}
															]
														},
														"description": "Unsubscribe from a resource"
													},
													"response": [
														{
															"name": "Unsubscribe from a resource",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:subscribable_id/subscription?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_request",
																		":subscribable_id",
																		"subscription"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "subscribable_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
														}
													]
												},
												{
													"name": "Subscribe to a resource",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:subscribable_id/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_request",
																":subscribable_id",
																"subscription"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "subscribable_id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a resource"
																}
															]
														},
														"description": "Subscribe to a resource"
													},
													"response": [
														{
															"name": "Subscribe to a resource",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_request/:subscribable_id/subscription?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_request",
																		":subscribable_id",
																		"subscription"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "subscribable_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "merge requests",
									"item": [
										{
											"name": "{merge request id}",
											"item": [
												{
													"name": "award emoji",
													"item": [
														{
															"name": "{award id}",
															"item": [
																{
																	"name": "Delete a +awardables+ award emoji",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/award_emoji/:award_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":merge_request_id",
																				"award_emoji",
																				":award_id"
																			],
																			"variable": [
																				{
																					"key": "award_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) The ID of an award emoji"
																				},
																				{
																					"key": "id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "merge_request_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "This feature was introduced in 8.9"
																	},
																	"response": [
																		{
																			"name": "Delete a +awardables+ award emoji",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/award_emoji/:award_id?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"merge_requests",
																						":merge_request_id",
																						"award_emoji",
																						":award_id"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "merge_request_id"
																						},
																						{
																							"key": "award_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																		}
																	]
																},
																{
																	"name": "Get a specific award emoji",
																	"request": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/award_emoji/:award_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":merge_request_id",
																				"award_emoji",
																				":award_id"
																			],
																			"variable": [
																				{
																					"key": "award_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) The ID of the award"
																				},
																				{
																					"key": "id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "merge_request_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "This feature was introduced in 8.9"
																	},
																	"response": [
																		{
																			"name": "Get a specific award emoji",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/award_emoji/:award_id?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"merge_requests",
																						":merge_request_id",
																						"award_emoji",
																						":award_id"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "merge_request_id"
																						},
																						{
																							"key": "award_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get a list of project +awardable+ award emoji",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/award_emoji?page=<integer>&per_page=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"award_emoji"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>",
																			"description": "Current page number"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>",
																			"description": "Number of items per page"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "merge_request_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of an Issue, Merge Request or Snippet"
																		}
																	]
																},
																"description": "This feature was introduced in 8.9"
															},
															"response": [
																{
																	"name": "Get a list of project +awardable+ award emoji",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/award_emoji?page=<integer>&per_page=<integer>&private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":merge_request_id",
																				"award_emoji"
																			],
																			"query": [
																				{
																					"key": "page",
																					"value": "<integer>"
																				},
																				{
																					"key": "per_page",
																					"value": "<integer>"
																				},
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "merge_request_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																}
															]
														},
														{
															"name": "Award a new Emoji",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "The name of a award_emoji (without colons)"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/award_emoji",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"award_emoji"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "merge_request_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This feature was introduced in 8.9"
															},
															"response": [
																{
																	"name": "Award a new Emoji",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/award_emoji?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":merge_request_id",
																				"award_emoji"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "merge_request_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																}
															]
														}
													]
												},
												{
													"name": "comments",
													"item": [
														{
															"name": "Get the comments of a merge request",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/comments?page=<integer>&per_page=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"comments"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>",
																			"description": "Current page number"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>",
																			"description": "Number of items per page"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "merge_request_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Duplicate. DEPRECATED and WILL BE REMOVED in 9.0"
															},
															"response": [
																{
																	"name": "Get the comments of a merge request",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/comments?page=<integer>&per_page=<integer>&private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":merge_request_id",
																				"comments"
																			],
																			"query": [
																				{
																					"key": "page",
																					"value": "<integer>"
																				},
																				{
																					"key": "per_page",
																					"value": "<integer>"
																				},
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "merge_request_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"author\": {\n  \"avatar_url\": \"in\",\n  \"id\": \"veniam\",\n  \"name\": \"tempor\",\n  \"state\": \"reprehenderit\",\n  \"username\": \"voluptate qui consequat exercitation\",\n  \"web_url\": \"magna aliquip minim\"\n },\n \"note\": \"velit do\"\n}"
																}
															]
														},
														{
															"name": "Post a comment to a merge request",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "note",
																			"value": "<string>",
																			"description": "The text of the comment"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/comments",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"comments"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "merge_request_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "Duplicate. DEPRECATED and WILL BE REMOVED in 9.0"
															},
															"response": [
																{
																	"name": "Post a comment to a merge request",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/comments?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":merge_request_id",
																				"comments"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "merge_request_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"author\": {\n  \"avatar_url\": \"in\",\n  \"id\": \"veniam\",\n  \"name\": \"tempor\",\n  \"state\": \"reprehenderit\",\n  \"username\": \"voluptate qui consequat exercitation\",\n  \"web_url\": \"magna aliquip minim\"\n },\n \"note\": \"velit do\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "notes/{note id}/award emoji",
													"item": [
														{
															"name": "{award id}",
															"item": [
																{
																	"name": "Delete a +awardables+ award emoji",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji/:award_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":merge_request_id",
																				"notes",
																				":note_id",
																				"award_emoji",
																				":award_id"
																			],
																			"variable": [
																				{
																					"key": "award_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) The ID of an award emoji"
																				},
																				{
																					"key": "id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "merge_request_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "note_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "This feature was introduced in 8.9"
																	},
																	"response": [
																		{
																			"name": "Delete a +awardables+ award emoji",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji/:award_id?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"merge_requests",
																						":merge_request_id",
																						"notes",
																						":note_id",
																						"award_emoji",
																						":award_id"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "merge_request_id"
																						},
																						{
																							"key": "note_id"
																						},
																						{
																							"key": "award_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																		}
																	]
																},
																{
																	"name": "Get a specific award emoji",
																	"request": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji/:award_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":merge_request_id",
																				"notes",
																				":note_id",
																				"award_emoji",
																				":award_id"
																			],
																			"variable": [
																				{
																					"key": "award_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) The ID of the award"
																				},
																				{
																					"key": "id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "merge_request_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "note_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "This feature was introduced in 8.9"
																	},
																	"response": [
																		{
																			"name": "Get a specific award emoji",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji/:award_id?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"merge_requests",
																						":merge_request_id",
																						"notes",
																						":note_id",
																						"award_emoji",
																						":award_id"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "merge_request_id"
																						},
																						{
																							"key": "note_id"
																						},
																						{
																							"key": "award_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get a list of project +awardable+ award emoji",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji?page=<integer>&per_page=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"notes",
																		":note_id",
																		"award_emoji"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>",
																			"description": "Current page number"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>",
																			"description": "Number of items per page"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "merge_request_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This feature was introduced in 8.9"
															},
															"response": [
																{
																	"name": "Get a list of project +awardable+ award emoji",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji?page=<integer>&per_page=<integer>&private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":merge_request_id",
																				"notes",
																				":note_id",
																				"award_emoji"
																			],
																			"query": [
																				{
																					"key": "page",
																					"value": "<integer>"
																				},
																				{
																					"key": "per_page",
																					"value": "<integer>"
																				},
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "merge_request_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																}
															]
														},
														{
															"name": "Award a new Emoji",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "The name of a award_emoji (without colons)"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"notes",
																		":note_id",
																		"award_emoji"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "merge_request_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This feature was introduced in 8.9"
															},
															"response": [
																{
																	"name": "Award a new Emoji",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":merge_request_id",
																				"notes",
																				":note_id",
																				"award_emoji"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "merge_request_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																}
															]
														}
													]
												},
												{
													"name": "versions",
													"item": [
														{
															"name": "Get a list of merge request diff versions",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/versions",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"versions"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "merge_request_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a merge request"
																		}
																	]
																},
																"description": "This feature was introduced in GitLab 8.12."
															},
															"response": [
																{
																	"name": "Get a list of merge request diff versions",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/versions?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":merge_request_id",
																				"versions"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "merge_request_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"base_commit_sha\": \"ea qui cupidatat\",\n \"created_at\": \"id dolore\",\n \"head_commit_sha\": \"nisi\",\n \"id\": \"in magna aliquip sed\",\n \"merge_request_id\": \"dolore reprehenderit nisi eu\",\n \"real_size\": \"amet\",\n \"start_commit_sha\": \"laborum\",\n \"state\": \"reprehenderit nisi laboris Lorem\"\n}"
																}
															]
														},
														{
															"name": "Get a single merge request diff version",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/versions/:version_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"versions",
																		":version_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "merge_request_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a merge request"
																		},
																		{
																			"key": "version_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a merge request diff version"
																		}
																	]
																},
																"description": "This feature was introduced in GitLab 8.12."
															},
															"response": [
																{
																	"name": "Get a single merge request diff version",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/versions/:version_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":merge_request_id",
																				"versions",
																				":version_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "merge_request_id"
																				},
																				{
																					"key": "version_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"base_commit_sha\": \"nostrud minim\",\n \"commits\": {\n  \"author_email\": \"dolor es\",\n  \"author_name\": \"in in sint incididunt ut\",\n  \"committer_email\": \"cupidatat nulla qui Ut aute\",\n  \"committer_name\": \"fugiat ullamco\",\n  \"created_at\": \"consectetur dolore occaecat enim\",\n  \"id\": \"eiusmod anim Lorem ex\",\n  \"message\": \"est eiusmod laborum dolore\",\n  \"short_id\": \"ut adipisicing irure ad exercit\",\n  \"title\": \"consectetur officia in nulla\"\n },\n \"created_at\": \"velit\",\n \"diffs\": {\n  \"a_mode\": \"in si\",\n  \"b_mode\": \"laborum et reprehenderit\",\n  \"deleted_file\": \"Lorem pariatur adipisicing in\",\n  \"diff\": \"Lore\",\n  \"new_file\": \"ut elit dolor irure fugiat\",\n  \"new_path\": \"magna esse id\",\n  \"old_path\": \"elit in\",\n  \"renamed_file\": \"enim adipisicing ut culpa\"\n },\n \"head_commit_sha\": \"ex est cillum id anim\",\n \"id\": \"nostrud ut velit nisi dolore\",\n \"merge_request_id\": \"id qui deserunt ea\",\n \"real_size\": \"dolore irure in dese\",\n \"start_commit_sha\": \"laborum irure non labore\",\n \"state\": \"fugiat occaecat nulla Lorem\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Delete a merge request",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a merge request"
																}
															]
														},
														"description": "Delete a merge request"
													},
													"response": [
														{
															"name": "Delete a merge request",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get a single merge request",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get a single merge request"
													},
													"response": [
														{
															"name": "Get a single merge request",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
														}
													]
												},
												{
													"name": "Update a merge request",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "title",
																	"value": "<string>",
																	"description": "The title of the merge request"
																},
																{
																	"key": "target_branch",
																	"value": "<string>",
																	"description": "The target branch"
																},
																{
																	"key": "state_event",
																	"value": "<string>",
																	"description": "Status of the merge request (This can only be one of close,reopen,merge)"
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": "The description of the merge request"
																},
																{
																	"key": "assignee_id",
																	"value": "<integer>",
																	"description": "The ID of a user to assign the merge request"
																},
																{
																	"key": "milestone_id",
																	"value": "<integer>",
																	"description": "The ID of a milestone to assign the merge request"
																},
																{
																	"key": "labels",
																	"value": "<string>",
																	"description": "Comma-separated list of label names"
																},
																{
																	"key": "remove_source_branch",
																	"value": "<boolean>",
																	"description": "Remove source branch when merging"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Update a merge request"
													},
													"response": [
														{
															"name": "Update a merge request",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
														}
													]
												},
												{
													"name": "Add spent time for a project merge_request",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "duration",
																	"value": "<string>",
																	"description": "The duration to be parsed"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/add_spent_time",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"add_spent_time"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project merge_request"
																}
															]
														},
														"description": "Add spent time for a project merge_request"
													},
													"response": [
														{
															"name": "Add spent time for a project merge_request",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/add_spent_time?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"add_spent_time"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/cancel_merge_when_build_succeeds",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"cancel_merge_when_build_succeeds"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled"
													},
													"response": [
														{
															"name": "Cancel merge if \"Merge When Pipeline Succeeds\" is enabled",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/cancel_merge_when_build_succeeds?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"cancel_merge_when_build_succeeds"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
														}
													]
												},
												{
													"name": "Show the merge request changes",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/changes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"changes"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Show the merge request changes"
													},
													"response": [
														{
															"name": "Show the merge request changes",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/changes?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"changes"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"pariatur dolor labore ut culpa\",\n  \"id\": \"id nisi ex in\",\n  \"name\": \"voluptate dolor\",\n  \"state\": \"do sunt dolore in\",\n  \"username\": \"minim dolore fugiat\",\n  \"web_url\": \"Excepteur enim esse\"\n },\n \"author\": {\n  \"avatar_url\": \"dolor \",\n  \"id\": \"dolore sint nisi ullamco aute\",\n  \"name\": \"et laborum\",\n  \"state\": \"irure\",\n  \"username\": \"sint\",\n  \"web_url\": \"consectetur quis ve\"\n },\n \"changes\": {\n  \"a_mode\": \"quis ut fugiat in\",\n  \"b_mode\": \"sit fugiat ex exercitation\",\n  \"deleted_file\": \"cillum nostrud in\",\n  \"diff\": \"ipsum\",\n  \"new_file\": \"nisi sit dolor enim Excepteur\",\n  \"new_path\": \"sunt nisi laboris reprehenderit enim\",\n  \"old_path\": \"sunt dolore pariatur\",\n  \"renamed_file\": \"magna cupidatat est nulla\"\n },\n \"created_at\": \"voluptate\",\n \"description\": \"eiusmod veniam deserun\",\n \"downvotes\": \"aliquip aliqua proident\",\n \"force_remove_source_branch\": \"officia mollit ea elit\",\n \"id\": \"off\",\n \"iid\": \"occaecat in adipisicing et\",\n \"labels\": \"esse reprehenderit eu ullamco\",\n \"merge_commit_sha\": \"exercitation id occaecat\",\n \"merge_status\": \"aute Duis ea sed\",\n \"merge_when_build_succeeds\": \"qui irure\",\n \"milestone\": {\n  \"created_at\": \"nisi incididunt nulla amet\",\n  \"description\": \"minim in occaecat\",\n  \"due_date\": \"mollit ad ex\",\n  \"id\": \"culpa esse n\",\n  \"iid\": \"Ut officia pariatur\",\n  \"project_id\": \"incididunt cillu\",\n  \"start_date\": \"officia nisi\",\n  \"state\": \"dolore in esse do\",\n  \"title\": \"tempor nulla\",\n  \"updated_at\": \"cillum ni\"\n },\n \"project_id\": \"sed esse\",\n \"sha\": \"elit ut reprehenderit dolor\",\n \"should_remove_source_branch\": \"sint s\",\n \"source_branch\": \"consequat id minim\",\n \"source_project_id\": \"elit enim reprehenderit\",\n \"state\": \"magna non ex aliquip\",\n \"subscribed\": \"deserunt pariatur labore\",\n \"target_branch\": \"anim ipsum laborum eiusmod\",\n \"target_project_id\": \"pariatur velit Excepteur\",\n \"title\": \"ad rep\",\n \"updated_at\": \"non dolore reprehenderit exercitation\",\n \"upvotes\": \"cupidatat qui sed a\",\n \"user_notes_count\": \"anim elit officia\",\n \"web_url\": \"cupidatat voluptate sed quis\",\n \"work_in_progress\": \"dolor ut nulla\"\n}"
														}
													]
												},
												{
													"name": "List issues that will be closed on merge",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/closes_issues?page=<integer>&per_page=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"closes_issues"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<integer>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "List issues that will be closed on merge"
													},
													"response": [
														{
															"name": "List issues that will be closed on merge",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/closes_issues?page=<integer>&per_page=<integer>&private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"closes_issues"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>"
																		},
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"author\": {\n  \"avatar_url\": \"in\",\n  \"id\": \"veniam\",\n  \"name\": \"tempor\",\n  \"state\": \"reprehenderit\",\n  \"username\": \"voluptate qui consequat exercitation\",\n  \"web_url\": \"magna aliquip minim\"\n },\n \"note\": \"velit do\"\n}"
														}
													]
												},
												{
													"name": "Get the commits of a merge request",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/commits",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"commits"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get the commits of a merge request"
													},
													"response": [
														{
															"name": "Get the commits of a merge request",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/commits?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"commits"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"author_email\": \"laborum nostrud in\",\n \"author_name\": \"veniam aliquip amet\",\n \"committer_email\": \"ad amet labore irure\",\n \"committer_name\": \"id occ\",\n \"created_at\": \"deserunt fugiat mollit\",\n \"id\": \"reprehenderit officia sunt incid\",\n \"message\": \"amet nostrud dolore non id\",\n \"short_id\": \"incididunt commodo sed enim consequat\",\n \"title\": \"est proident\"\n}"
														}
													]
												},
												{
													"name": "Merge a merge request",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "merge_commit_message",
																	"value": "<string>",
																	"description": "Custom merge commit message"
																},
																{
																	"key": "should_remove_source_branch",
																	"value": "<boolean>",
																	"description": "When true, the source branch will be deleted if possible"
																},
																{
																	"key": "merge_when_build_succeeds",
																	"value": "<boolean>",
																	"description": "When true, this merge request will be merged when the pipeline succeeds"
																},
																{
																	"key": "sha",
																	"value": "<string>",
																	"description": "When present, must have the HEAD SHA of the source branch"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/merge",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"merge"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Merge a merge request"
													},
													"response": [
														{
															"name": "Merge a merge request",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/merge?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"merge"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
														}
													]
												},
												{
													"name": "Reset spent time for a project merge_request",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/reset_spent_time",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"reset_spent_time"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project merge_request"
																}
															]
														},
														"description": "Reset spent time for a project merge_request"
													},
													"response": [
														{
															"name": "Reset spent time for a project merge_request",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/reset_spent_time?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"reset_spent_time"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Reset the time estimate for a project merge_request",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/reset_time_estimate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"reset_time_estimate"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project merge_request"
																}
															]
														},
														"description": "Reset the time estimate for a project merge_request"
													},
													"response": [
														{
															"name": "Reset the time estimate for a project merge_request",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/reset_time_estimate?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"reset_time_estimate"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Set a time estimate for a project merge_request",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "duration",
																	"value": "<string>",
																	"description": "The duration to be parsed"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/time_estimate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"time_estimate"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project merge_request"
																}
															]
														},
														"description": "Set a time estimate for a project merge_request"
													},
													"response": [
														{
															"name": "Set a time estimate for a project merge_request",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/time_estimate?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"time_estimate"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Show time stats for a project merge_request",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/time_stats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"time_stats"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project merge_request"
																}
															]
														},
														"description": "Show time stats for a project merge_request"
													},
													"response": [
														{
															"name": "Show time stats for a project merge_request",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/time_stats?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"time_stats"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Create a todo on an issuable",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/todo",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"todo"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "merge_request_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of an issuable"
																}
															]
														},
														"description": "Create a todo on an issuable"
													},
													"response": [
														{
															"name": "Create a todo on an issuable",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:merge_request_id/todo?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":merge_request_id",
																		"todo"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "merge_request_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"action_name\": \"est enim\",\n \"author\": {\n  \"avatar_url\": \"minim veniam\",\n  \"id\": \"sed aliqua Ut\",\n  \"name\": \"exercitation\",\n  \"state\": \"nisi dolor pariatur Ut\",\n  \"username\": \"veniam deserunt id eu Ut\",\n  \"web_url\": \"et sint\"\n },\n \"body\": \"adipisi\",\n \"created_at\": \"ad irure quis in in\",\n \"id\": \"nisi laborum est ad\",\n \"project\": {\n  \"http_url_to_repo\": \"elit voluptate ipsum in\",\n  \"id\": \"Duis dolor\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"anim occaecat deserunt dolore\",\n  \"path\": \"nostrud elit\",\n  \"path_with_namespace\": \"nostrud ipsum consectetur mollit\",\n  \"web_url\": \"do\"\n },\n \"state\": \"nostrud Duis magna\",\n \"target\": \"consectetur dolor exercitation\",\n \"target_type\": \"in\",\n \"target_url\": \"in enim\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "{noteable id}/notes",
											"item": [
												{
													"name": "{note id}",
													"item": [
														{
															"name": "Delete a +noteable+ note",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:noteable_id/notes/:note_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":noteable_id",
																		"notes",
																		":note_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "noteable_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the noteable"
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a note"
																		}
																	]
																},
																"description": "Delete a +noteable+ note"
															},
															"response": [
																{
																	"name": "Delete a +noteable+ note",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:noteable_id/notes/:note_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":noteable_id",
																				"notes",
																				":note_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "noteable_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
																}
															]
														},
														{
															"name": "Get a single +noteable+ note",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:noteable_id/notes/:note_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":noteable_id",
																		"notes",
																		":note_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a note"
																		},
																		{
																			"key": "noteable_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the noteable"
																		}
																	]
																},
																"description": "Get a single +noteable+ note"
															},
															"response": [
																{
																	"name": "Get a single +noteable+ note",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:noteable_id/notes/:note_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":noteable_id",
																				"notes",
																				":note_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "noteable_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
																}
															]
														},
														{
															"name": "Update an existing +noteable+ note",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "body",
																			"value": "<string>",
																			"description": "The content of a note"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:noteable_id/notes/:note_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":noteable_id",
																		"notes",
																		":note_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "noteable_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the noteable"
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a note"
																		}
																	]
																},
																"description": "Update an existing +noteable+ note"
															},
															"response": [
																{
																	"name": "Update an existing +noteable+ note",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:noteable_id/notes/:note_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"merge_requests",
																				":noteable_id",
																				"notes",
																				":note_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "noteable_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get a list of project +noteable+ notes",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:noteable_id/notes?page=<integer>&per_page=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":noteable_id",
																"notes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<integer>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "noteable_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the noteable"
																}
															]
														},
														"description": "Get a list of project +noteable+ notes"
													},
													"response": [
														{
															"name": "Get a list of project +noteable+ notes",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:noteable_id/notes?page=<integer>&per_page=<integer>&private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":noteable_id",
																		"notes"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>"
																		},
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "noteable_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
														}
													]
												},
												{
													"name": "Create a new +noteable+ note",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "body",
																	"value": "<string>",
																	"description": "The content of a note"
																},
																{
																	"key": "created_at",
																	"value": "<string>",
																	"description": "The creation date of the note"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:noteable_id/notes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":noteable_id",
																"notes"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "noteable_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the noteable"
																}
															]
														},
														"description": "Create a new +noteable+ note"
													},
													"response": [
														{
															"name": "Create a new +noteable+ note",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:noteable_id/notes?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":noteable_id",
																		"notes"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "noteable_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "{subscribable id}/subscription",
											"item": [
												{
													"name": "Unsubscribe from a resource",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:subscribable_id/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":subscribable_id",
																"subscription"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "subscribable_id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a resource"
																}
															]
														},
														"description": "Unsubscribe from a resource"
													},
													"response": [
														{
															"name": "Unsubscribe from a resource",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:subscribable_id/subscription?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":subscribable_id",
																		"subscription"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "subscribable_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
														}
													]
												},
												{
													"name": "Subscribe to a resource",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:subscribable_id/subscription",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests",
																":subscribable_id",
																"subscription"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "subscribable_id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a resource"
																}
															]
														},
														"description": "Subscribe to a resource"
													},
													"response": [
														{
															"name": "Subscribe to a resource",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/merge_requests/:subscribable_id/subscription?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"merge_requests",
																		":subscribable_id",
																		"subscription"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "subscribable_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "List merge requests",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "iid",
															"value": "[\"<integer>\",\"<integer>\"]",
															"description": "The IID of the merge requests"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/merge_requests?state=all&order_by=created_at&sort=desc&page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"merge_requests"
													],
													"query": [
														{
															"key": "state",
															"value": "all",
															"description": "Return opened, closed, merged, or all merge requests"
														},
														{
															"key": "order_by",
															"value": "created_at",
															"description": "Return merge requests ordered by `created_at` or `updated_at` fields."
														},
														{
															"key": "sort",
															"value": "desc",
															"description": "Return merge requests sorted in `asc` or `desc` order."
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "List merge requests"
											},
											"response": [
												{
													"name": "List merge requests",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "iid",
																	"value": "[\"<integer>\",\"<integer>\"]",
																	"description": {
																		"content": "The IID of the merge requests",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests?state=all&order_by=created_at&sort=desc&page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests"
															],
															"query": [
																{
																	"key": "state",
																	"value": "all"
																},
																{
																	"key": "order_by",
																	"value": "created_at"
																},
																{
																	"key": "sort",
																	"value": "desc"
																},
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
												}
											]
										},
										{
											"name": "Create a merge request",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "title",
															"value": "<string>",
															"description": "The title of the merge request"
														},
														{
															"key": "source_branch",
															"value": "<string>",
															"description": "The source branch"
														},
														{
															"key": "target_branch",
															"value": "<string>",
															"description": "The target branch"
														},
														{
															"key": "target_project_id",
															"value": "<integer>",
															"description": "The target project of the merge request defaults to the :id of the project"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "The description of the merge request"
														},
														{
															"key": "assignee_id",
															"value": "<integer>",
															"description": "The ID of a user to assign the merge request"
														},
														{
															"key": "milestone_id",
															"value": "<integer>",
															"description": "The ID of a milestone to assign the merge request"
														},
														{
															"key": "labels",
															"value": "<string>",
															"description": "Comma-separated list of label names"
														},
														{
															"key": "remove_source_branch",
															"value": "<boolean>",
															"description": "Remove source branch when merging"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/merge_requests",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"merge_requests"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Create a merge request"
											},
											"response": [
												{
													"name": "Create a merge request",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "title",
																	"value": "<string>",
																	"description": {
																		"content": "The title of the merge request",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "source_branch",
																	"value": "<string>",
																	"description": {
																		"content": "The source branch",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "target_branch",
																	"value": "<string>",
																	"description": {
																		"content": "The target branch",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "target_project_id",
																	"value": "<integer>",
																	"description": {
																		"content": "The target project of the merge request defaults to the :id of the project",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": {
																		"content": "The description of the merge request",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "assignee_id",
																	"value": "<integer>",
																	"description": {
																		"content": "The ID of a user to assign the merge request",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "milestone_id",
																	"value": "<integer>",
																	"description": {
																		"content": "The ID of a milestone to assign the merge request",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "labels",
																	"value": "<string>",
																	"description": {
																		"content": "Comma-separated list of label names",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "remove_source_branch",
																	"value": "<boolean>",
																	"description": {
																		"content": "Remove source branch when merging",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/merge_requests?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"merge_requests"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"assignee\": {\n  \"avatar_url\": \"Duis cupidatat in\",\n  \"id\": \"irure\",\n  \"name\": \"anim dolor irure\",\n  \"state\": \"mollit aute\",\n  \"username\": \"Excepteur dolore sint\",\n  \"web_url\": \"\"\n },\n \"author\": {\n  \"avatar_url\": \"ut ad\",\n  \"id\": \"ut\",\n  \"name\": \"sint est laborum do\",\n  \"state\": \"Lorem do ullamco reprehenderit\",\n  \"username\": \"et\",\n  \"web_url\": \"in\"\n },\n \"created_at\": \"ipsum ad\",\n \"description\": \"sint\",\n \"downvotes\": \"deserunt exercitation pariatur Ut\",\n \"force_remove_source_branch\": \"ex\",\n \"id\": \"dolore reprehenderit\",\n \"iid\": \"nisi enim Lorem pariatur\",\n \"labels\": \"pariatur nisi\",\n \"merge_commit_sha\": \"sunt dolore\",\n \"merge_status\": \"aute deserunt qui ip\",\n \"merge_when_build_succeeds\": \"quis\",\n \"milestone\": {\n  \"created_at\": \"aliqua aute amet ipsum\",\n  \"description\": \"officia a\",\n  \"due_date\": \"cillum\",\n  \"id\": \"culpa labore ex\",\n  \"iid\": \"esse fugiat officia\",\n  \"project_id\": \"dolor ut\",\n  \"start_date\": \"qui id irure\",\n  \"state\": \"nisi exercitation adipisici\",\n  \"title\": \"Excepteur\",\n  \"updated_at\": \"nulla consequat\"\n },\n \"project_id\": \"Lorem ad nisi sit\",\n \"sha\": \"sed adipisicing ut\",\n \"should_remove_source_branch\": \"voluptate\",\n \"source_branch\": \"commodo dolor\",\n \"source_project_id\": \"in sed voluptate dolore\",\n \"state\": \"sunt consectetur sint\",\n \"subscribed\": \"et\",\n \"target_branch\": \"id dolor ut in ipsum\",\n \"target_project_id\": \"in do Lorem eu\",\n \"title\": \"ullamco qui laboris mollit\",\n \"updated_at\": \"culpa Ut sed\",\n \"upvotes\": \"sint cupidatat\",\n \"user_notes_count\": \"\",\n \"web_url\": \"sed velit\",\n \"work_in_progress\": \"in consequat\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "milestones",
									"item": [
										{
											"name": "{milestone id}",
											"item": [
												{
													"name": "Get a single project milestone",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/milestones/:milestone_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"milestones",
																":milestone_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "milestone_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project milestone"
																}
															]
														},
														"description": "Get a single project milestone"
													},
													"response": [
														{
															"name": "Get a single project milestone",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/milestones/:milestone_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"milestones",
																		":milestone_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "milestone_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"created_at\": \"ad cupidatat Duis exer\",\n \"description\": \"minim \",\n \"due_date\": \"nos\",\n \"id\": \"magna commodo\",\n \"iid\": \"est elit\",\n \"project_id\": \"consequat\",\n \"start_date\": \"laboris ex et\",\n \"state\": \"dolore ullamco minim\",\n \"title\": \"ut in incididunt\",\n \"updated_at\": \"eu magna proident dolore\"\n}"
														}
													]
												},
												{
													"name": "Update an existing project milestone",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "title",
																	"value": "<string>",
																	"description": "The title of the milestone"
																},
																{
																	"key": "state_event",
																	"value": "<string>",
																	"description": "The state event of the milestone  (This can only be one of close,activate)"
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": "The description of the milestone"
																},
																{
																	"key": "due_date",
																	"value": "<string>",
																	"description": "The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
																},
																{
																	"key": "start_date",
																	"value": "<string>",
																	"description": "The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/milestones/:milestone_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"milestones",
																":milestone_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "milestone_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project milestone"
																}
															]
														},
														"description": "Update an existing project milestone"
													},
													"response": [
														{
															"name": "Update an existing project milestone",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "title",
																			"value": "<string>",
																			"description": {
																				"content": "The title of the milestone",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "state_event",
																			"value": "<string>",
																			"description": {
																				"content": "The state event of the milestone  (This can only be one of close,activate)",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "description",
																			"value": "<string>",
																			"description": {
																				"content": "The description of the milestone",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "due_date",
																			"value": "<string>",
																			"description": {
																				"content": "The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "start_date",
																			"value": "<string>",
																			"description": {
																				"content": "The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)",
																				"type": "text/plain"
																			}
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/milestones/:milestone_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"milestones",
																		":milestone_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "milestone_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"created_at\": \"ad cupidatat Duis exer\",\n \"description\": \"minim \",\n \"due_date\": \"nos\",\n \"id\": \"magna commodo\",\n \"iid\": \"est elit\",\n \"project_id\": \"consequat\",\n \"start_date\": \"laboris ex et\",\n \"state\": \"dolore ullamco minim\",\n \"title\": \"ut in incididunt\",\n \"updated_at\": \"eu magna proident dolore\"\n}"
														}
													]
												},
												{
													"name": "Get all issues for a single project milestone",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/milestones/:milestone_id/issues?page=<integer>&per_page=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"milestones",
																":milestone_id",
																"issues"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<integer>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "milestone_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project milestone"
																}
															]
														},
														"description": "Get all issues for a single project milestone"
													},
													"response": [
														{
															"name": "Get all issues for a single project milestone",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/milestones/:milestone_id/issues?page=<integer>&per_page=<integer>&private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"milestones",
																		":milestone_id",
																		"issues"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>"
																		},
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "milestone_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"assignee\": {\n  \"avatar_url\": \"minim labore consectet\",\n  \"id\": \"Excepteur ipsum ut in laborum\",\n  \"name\": \"dolore nostrud ut mollit\",\n  \"state\": \"ea officia mollit\",\n  \"username\": \"Ut Lorem reprehenderit\",\n  \"web_url\": \"eu ex sint nisi\"\n },\n \"author\": {\n  \"avatar_url\": \"dolore eu\",\n  \"id\": \"aute nulla\",\n  \"name\": \"dolor exercitation elit consequat\",\n  \"state\": \"laborum deserunt\",\n  \"username\": \"dolor cup\",\n  \"web_url\": \"qui adipisicing ullamco\"\n },\n \"confidential\": \"deserunt in\",\n \"created_at\": \"cupidatat consequat proident q\",\n \"description\": \"dolor esse Lorem\",\n \"downvotes\": \"exercitation\",\n \"due_date\": \"sint\",\n \"id\": \"non minim nisi\",\n \"iid\": \"irure\",\n \"labels\": \"tempor\",\n \"milestone\": {\n  \"created_at\": \"in do\",\n  \"description\": \"et\",\n  \"due_date\": \"labore nostrud\",\n  \"id\": \"labore ipsum culpa Lorem reprehenderit\",\n  \"iid\": \"dolor qui\",\n  \"project_id\": \"ad\",\n  \"start_date\": \"proident dolor mollit in ullamco\",\n  \"state\": \"in aute pariatur\",\n  \"title\": \"id\",\n  \"updated_at\": \"irure fugiat qui adipisicing id\"\n },\n \"project_id\": \"es\",\n \"state\": \"elit irure sed\",\n \"subscribed\": \"Excepteur voluptate dolore in\",\n \"title\": \"dolore irure laborum fugiat\",\n \"updated_at\": \"id laborum\",\n \"upvotes\": \"reprehenderit exercitation sit\",\n \"user_notes_count\": \"reprehenderit sit aliquip do\",\n \"web_url\": \"dolore in voluptate in\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get a list of project milestones",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "iid",
															"value": "[\"<integer>\",\"<integer>\"]",
															"description": "The IID of the milestone"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/milestones?state=all&page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"milestones"
													],
													"query": [
														{
															"key": "state",
															"value": "all",
															"description": "Return \"active\", \"closed\", or \"all\" milestones"
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Get a list of project milestones"
											},
											"response": [
												{
													"name": "Get a list of project milestones",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "iid",
																	"value": "[\"<integer>\",\"<integer>\"]",
																	"description": {
																		"content": "The IID of the milestone",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/milestones?state=all&page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"milestones"
															],
															"query": [
																{
																	"key": "state",
																	"value": "all"
																},
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"created_at\": \"ad cupidatat Duis exer\",\n \"description\": \"minim \",\n \"due_date\": \"nos\",\n \"id\": \"magna commodo\",\n \"iid\": \"est elit\",\n \"project_id\": \"consequat\",\n \"start_date\": \"laboris ex et\",\n \"state\": \"dolore ullamco minim\",\n \"title\": \"ut in incididunt\",\n \"updated_at\": \"eu magna proident dolore\"\n}"
												}
											]
										},
										{
											"name": "Create a new project milestone",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "title",
															"value": "<string>",
															"description": "The title of the milestone"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "The description of the milestone"
														},
														{
															"key": "due_date",
															"value": "<string>",
															"description": "The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
														},
														{
															"key": "start_date",
															"value": "<string>",
															"description": "The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/milestones",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"milestones"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Create a new project milestone"
											},
											"response": [
												{
													"name": "Create a new project milestone",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "title",
																	"value": "<string>",
																	"description": {
																		"content": "The title of the milestone",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": {
																		"content": "The description of the milestone",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "due_date",
																	"value": "<string>",
																	"description": {
																		"content": "The due date of the milestone. The ISO 8601 date format (%Y-%m-%d)",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "start_date",
																	"value": "<string>",
																	"description": {
																		"content": "The start date of the milestone. The ISO 8601 date format (%Y-%m-%d)",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/milestones?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"milestones"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"created_at\": \"ad cupidatat Duis exer\",\n \"description\": \"minim \",\n \"due_date\": \"nos\",\n \"id\": \"magna commodo\",\n \"iid\": \"est elit\",\n \"project_id\": \"consequat\",\n \"start_date\": \"laboris ex et\",\n \"state\": \"dolore ullamco minim\",\n \"title\": \"ut in incididunt\",\n \"updated_at\": \"eu magna proident dolore\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "notification settings",
									"item": [
										{
											"name": "Get project level notification level settings, defaults to Global",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/notification_settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"notification_settings"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The group ID or project ID or project NAMESPACE/PROJECT_NAME"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.12"
											},
											"response": [
												{
													"name": "Get project level notification level settings, defaults to Global",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/notification_settings?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"notification_settings"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"events\": \"incididunt amet laborum enim exercitation\",\n \"level\": \"Ut sit\"\n}"
												}
											]
										},
										{
											"name": "Update project level notification level settings, defaults to Global",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "level",
															"value": "<string>",
															"description": "The project notification level"
														},
														{
															"key": "new_note",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "new_issue",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "reopen_issue",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "close_issue",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "reassign_issue",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "new_merge_request",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "reopen_merge_request",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "close_merge_request",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "reassign_merge_request",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "merge_merge_request",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "failed_pipeline",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														},
														{
															"key": "success_pipeline",
															"value": "<boolean>",
															"description": "Enable/disable this notification"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/notification_settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"notification_settings"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The group ID or project ID or project NAMESPACE/PROJECT_NAME"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.12"
											},
											"response": [
												{
													"name": "Update project level notification level settings, defaults to Global",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "level",
																	"value": "<string>",
																	"description": {
																		"content": "The project notification level",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "new_note",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "new_issue",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "reopen_issue",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "close_issue",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "reassign_issue",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "new_merge_request",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "reopen_merge_request",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "close_merge_request",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "reassign_merge_request",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "merge_merge_request",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "failed_pipeline",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "success_pipeline",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable/disable this notification",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/notification_settings?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"notification_settings"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"events\": \"incididunt amet laborum enim exercitation\",\n \"level\": \"Ut sit\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "pipelines",
									"item": [
										{
											"name": "{pipeline id}",
											"item": [
												{
													"name": "Gets a specific pipeline for the project",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/pipelines/:pipeline_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"pipelines",
																":pipeline_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																},
																{
																	"key": "pipeline_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The pipeline ID"
																}
															]
														},
														"description": "This feature was introduced in GitLab 8.11"
													},
													"response": [
														{
															"name": "Gets a specific pipeline for the project",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/pipelines/:pipeline_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"pipelines",
																		":pipeline_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"before_sha\": \"minim sit irure\",\n \"committed_at\": \"velit laboris consectetur\",\n \"coverage\": \"sed id est\",\n \"created_at\": \"fugiat\",\n \"duration\": \"nisi Ut deserunt in\",\n \"finished_at\": \"anim cupidatat\",\n \"id\": \"deserunt Ut ipsum proident\",\n \"ref\": \"sed\",\n \"sha\": \"Lorem veniam\",\n \"started_at\": \"ipsum nulla mollit\",\n \"status\": \"reprehenderit ipsum\",\n \"tag\": \"id in culpa ut\",\n \"updated_at\": \"occaecat irure aliqu\",\n \"user\": {\n  \"avatar_url\": \"dolore exercitation elit\",\n  \"id\": \"non fugiat incididunt laboris nostrud\",\n  \"name\": \"laborum veniam id\",\n  \"state\": \"ut Ut\",\n  \"username\": \"amet aliquip consequat sint\",\n  \"web_url\": \"ipsum aliquip\"\n },\n \"yaml_errors\": \"cillum ut sed aliqua\"\n}"
														}
													]
												},
												{
													"name": "Cancel all builds in the pipeline",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/pipelines/:pipeline_id/cancel",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"pipelines",
																":pipeline_id",
																"cancel"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																},
																{
																	"key": "pipeline_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The pipeline ID"
																}
															]
														},
														"description": "This feature was introduced in GitLab 8.11."
													},
													"response": [
														{
															"name": "Cancel all builds in the pipeline",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/pipelines/:pipeline_id/cancel?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"pipelines",
																		":pipeline_id",
																		"cancel"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"before_sha\": \"minim sit irure\",\n \"committed_at\": \"velit laboris consectetur\",\n \"coverage\": \"sed id est\",\n \"created_at\": \"fugiat\",\n \"duration\": \"nisi Ut deserunt in\",\n \"finished_at\": \"anim cupidatat\",\n \"id\": \"deserunt Ut ipsum proident\",\n \"ref\": \"sed\",\n \"sha\": \"Lorem veniam\",\n \"started_at\": \"ipsum nulla mollit\",\n \"status\": \"reprehenderit ipsum\",\n \"tag\": \"id in culpa ut\",\n \"updated_at\": \"occaecat irure aliqu\",\n \"user\": {\n  \"avatar_url\": \"dolore exercitation elit\",\n  \"id\": \"non fugiat incididunt laboris nostrud\",\n  \"name\": \"laborum veniam id\",\n  \"state\": \"ut Ut\",\n  \"username\": \"amet aliquip consequat sint\",\n  \"web_url\": \"ipsum aliquip\"\n },\n \"yaml_errors\": \"cillum ut sed aliqua\"\n}"
														}
													]
												},
												{
													"name": "Retry failed builds in the pipeline",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/pipelines/:pipeline_id/retry",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"pipelines",
																":pipeline_id",
																"retry"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																},
																{
																	"key": "pipeline_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The pipeline ID"
																}
															]
														},
														"description": "This feature was introduced in GitLab 8.11."
													},
													"response": [
														{
															"name": "Retry failed builds in the pipeline",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/pipelines/:pipeline_id/retry?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"pipelines",
																		":pipeline_id",
																		"retry"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "pipeline_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"before_sha\": \"minim sit irure\",\n \"committed_at\": \"velit laboris consectetur\",\n \"coverage\": \"sed id est\",\n \"created_at\": \"fugiat\",\n \"duration\": \"nisi Ut deserunt in\",\n \"finished_at\": \"anim cupidatat\",\n \"id\": \"deserunt Ut ipsum proident\",\n \"ref\": \"sed\",\n \"sha\": \"Lorem veniam\",\n \"started_at\": \"ipsum nulla mollit\",\n \"status\": \"reprehenderit ipsum\",\n \"tag\": \"id in culpa ut\",\n \"updated_at\": \"occaecat irure aliqu\",\n \"user\": {\n  \"avatar_url\": \"dolore exercitation elit\",\n  \"id\": \"non fugiat incididunt laboris nostrud\",\n  \"name\": \"laborum veniam id\",\n  \"state\": \"ut Ut\",\n  \"username\": \"amet aliquip consequat sint\",\n  \"web_url\": \"ipsum aliquip\"\n },\n \"yaml_errors\": \"cillum ut sed aliqua\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get all Pipelines of the project",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/pipelines?page=<integer>&per_page=<integer>&scope=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"pipelines"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														},
														{
															"key": "scope",
															"value": "<string>",
															"description": "Either running, branches, or tags"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The project ID"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": [
												{
													"name": "Get all Pipelines of the project",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/pipelines?page=<integer>&per_page=<integer>&scope=<string>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"pipelines"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "scope",
																	"value": "<string>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"before_sha\": \"minim sit irure\",\n \"committed_at\": \"velit laboris consectetur\",\n \"coverage\": \"sed id est\",\n \"created_at\": \"fugiat\",\n \"duration\": \"nisi Ut deserunt in\",\n \"finished_at\": \"anim cupidatat\",\n \"id\": \"deserunt Ut ipsum proident\",\n \"ref\": \"sed\",\n \"sha\": \"Lorem veniam\",\n \"started_at\": \"ipsum nulla mollit\",\n \"status\": \"reprehenderit ipsum\",\n \"tag\": \"id in culpa ut\",\n \"updated_at\": \"occaecat irure aliqu\",\n \"user\": {\n  \"avatar_url\": \"dolore exercitation elit\",\n  \"id\": \"non fugiat incididunt laboris nostrud\",\n  \"name\": \"laborum veniam id\",\n  \"state\": \"ut Ut\",\n  \"username\": \"amet aliquip consequat sint\",\n  \"web_url\": \"ipsum aliquip\"\n },\n \"yaml_errors\": \"cillum ut sed aliqua\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "repository",
									"item": [
										{
											"name": "branches",
											"item": [
												{
													"name": "{branch}",
													"item": [
														{
															"name": "Delete a branch",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/branches/:branch",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"branches",
																		":branch"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "branch",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The name of the branch"
																		}
																	]
																},
																"description": "Delete a branch"
															},
															"response": [
																{
																	"name": "Delete a branch",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/branches/:branch?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"branches",
																				":branch"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "branch"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Get a single branch",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/branches/:branch",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"branches",
																		":branch"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "branch",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The name of the branch"
																		}
																	]
																},
																"description": "Get a single branch"
															},
															"response": [
																{
																	"name": "Get a single branch",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/branches/:branch?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"branches",
																				":branch"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "branch"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"commit\": \"magna adipisicing\",\n \"developers_can_merge\": \"minim laborum\",\n \"developers_can_push\": \"officia ullamco et commodo\",\n \"merged\": \"culpa adipisicing dolore proident\",\n \"name\": \"velit cillum Excepteur\",\n \"protected\": \"laborum\"\n}"
																}
															]
														},
														{
															"name": "Protect a single branch",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "developers_can_push",
																			"value": "<boolean>",
																			"description": "Flag if developers can push to that branch"
																		},
																		{
																			"key": "developers_can_merge",
																			"value": "<boolean>",
																			"description": "Flag if developers can merge to that branch"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/branches/:branch/protect",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"branches",
																		":branch",
																		"protect"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "branch",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The name of the branch"
																		}
																	]
																},
																"description": "Protect a single branch"
															},
															"response": [
																{
																	"name": "Protect a single branch",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "urlencoded",
																			"urlencoded": [
																				{
																					"key": "developers_can_push",
																					"value": "<boolean>",
																					"description": {
																						"content": "Flag if developers can push to that branch",
																						"type": "text/plain"
																					}
																				},
																				{
																					"key": "developers_can_merge",
																					"value": "<boolean>",
																					"description": {
																						"content": "Flag if developers can merge to that branch",
																						"type": "text/plain"
																					}
																				}
																			]
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/branches/:branch/protect?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"branches",
																				":branch",
																				"protect"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "branch"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"commit\": \"magna adipisicing\",\n \"developers_can_merge\": \"minim laborum\",\n \"developers_can_push\": \"officia ullamco et commodo\",\n \"merged\": \"culpa adipisicing dolore proident\",\n \"name\": \"velit cillum Excepteur\",\n \"protected\": \"laborum\"\n}"
																}
															]
														},
														{
															"name": "Unprotect a single branch",
															"request": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/branches/:branch/unprotect",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"branches",
																		":branch",
																		"unprotect"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "branch",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The name of the branch"
																		}
																	]
																},
																"description": "Unprotect a single branch"
															},
															"response": [
																{
																	"name": "Unprotect a single branch",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/branches/:branch/unprotect?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"branches",
																				":branch",
																				"unprotect"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "branch"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"commit\": \"magna adipisicing\",\n \"developers_can_merge\": \"minim laborum\",\n \"developers_can_push\": \"officia ullamco et commodo\",\n \"merged\": \"culpa adipisicing dolore proident\",\n \"name\": \"velit cillum Excepteur\",\n \"protected\": \"laborum\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get a project repository branches",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/branches",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"branches"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																}
															]
														},
														"description": "Get a project repository branches"
													},
													"response": [
														{
															"name": "Get a project repository branches",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/branches?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"branches"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"commit\": \"magna adipisicing\",\n \"developers_can_merge\": \"minim laborum\",\n \"developers_can_push\": \"officia ullamco et commodo\",\n \"merged\": \"culpa adipisicing dolore proident\",\n \"name\": \"velit cillum Excepteur\",\n \"protected\": \"laborum\"\n}"
														}
													]
												},
												{
													"name": "Create branch",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "branch_name",
																	"value": "<string>",
																	"description": "The name of the branch"
																},
																{
																	"key": "ref",
																	"value": "<string>",
																	"description": "Create branch from commit sha or existing branch"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/branches",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"branches"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																}
															]
														},
														"description": "Create branch"
													},
													"response": [
														{
															"name": "Create branch",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "branch_name",
																			"value": "<string>",
																			"description": {
																				"content": "The name of the branch",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "ref",
																			"value": "<string>",
																			"description": {
																				"content": "Create branch from commit sha or existing branch",
																				"type": "text/plain"
																			}
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/branches?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"branches"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"commit\": \"magna adipisicing\",\n \"developers_can_merge\": \"minim laborum\",\n \"developers_can_push\": \"officia ullamco et commodo\",\n \"merged\": \"culpa adipisicing dolore proident\",\n \"name\": \"velit cillum Excepteur\",\n \"protected\": \"laborum\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "commits",
											"item": [
												{
													"name": "{sha}",
													"item": [
														{
															"name": "comments",
															"item": [
																{
																	"name": "Get a commit's comments",
																	"request": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/comments?page=<integer>&per_page=<integer>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"commits",
																				":sha",
																				"comments"
																			],
																			"query": [
																				{
																					"key": "page",
																					"value": "<integer>",
																					"description": "Current page number"
																				},
																				{
																					"key": "per_page",
																					"value": "<integer>",
																					"description": "Number of items per page"
																				}
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"type": "string",
																					"description": "(Required) The ID of a project"
																				},
																				{
																					"key": "sha",
																					"value": "<string>",
																					"type": "string",
																					"description": "(Required) A commit sha, or the name of a branch or tag"
																				}
																			]
																		},
																		"description": "Get a commit's comments"
																	},
																	"response": [
																		{
																			"name": "Not Found",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/comments?page=<integer>&per_page=<integer>&private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"repository",
																						"commits",
																						":sha",
																						"comments"
																					],
																					"query": [
																						{
																							"key": "page",
																							"value": "<integer>"
																						},
																						{
																							"key": "per_page",
																							"value": "<integer>"
																						},
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "sha"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "text",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "text/plain"
																				}
																			],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "Get a commit's comments",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/comments?page=<integer>&per_page=<integer>&private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"repository",
																						"commits",
																						":sha",
																						"comments"
																					],
																					"query": [
																						{
																							"key": "page",
																							"value": "<integer>"
																						},
																						{
																							"key": "per_page",
																							"value": "<integer>"
																						},
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "sha"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"author\": {\n  \"avatar_url\": \"aliqua qui ea ex\",\n  \"id\": \"adipisicing aliqua magna reprehe\",\n  \"name\": \"ad consequat sint\",\n  \"state\": \"magna nulla nostrud fugiat\",\n  \"username\": \"nostrud anim quis\",\n  \"web_url\": \"laborum\"\n },\n \"created_at\": \"ex pariatur dolore enim ad\",\n \"line\": \"dolor anim in sint\",\n \"line_type\": \"Excepte\",\n \"note\": \"cillum quis\",\n \"path\": \"irure dolore\"\n}"
																		}
																	]
																},
																{
																	"name": "Post comment to commit",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/x-www-form-urlencoded"
																			}
																		],
																		"body": {
																			"mode": "urlencoded",
																			"urlencoded": [
																				{
																					"key": "note",
																					"value": "<string>",
																					"description": "The text of the comment"
																				},
																				{
																					"key": "line",
																					"value": "<integer>",
																					"description": "The line number"
																				},
																				{
																					"key": "line_type",
																					"value": "new",
																					"description": "The type of the line (This can only be one of new,old)"
																				},
																				{
																					"key": "path",
																					"value": "<string>",
																					"description": "The file path"
																				}
																			]
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/comments",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"commits",
																				":sha",
																				"comments"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"type": "string",
																					"description": "(Required) The ID of a project"
																				},
																				{
																					"key": "sha",
																					"value": "<string>",
																					"type": "string",
																					"description": "(Required) The commit's SHA"
																				}
																			]
																		},
																		"description": "Post comment to commit"
																	},
																	"response": [
																		{
																			"name": "Post comment to commit",
																			"originalRequest": {
																				"method": "POST",
																				"header": [],
																				"body": {
																					"mode": "urlencoded",
																					"urlencoded": [
																						{
																							"key": "note",
																							"value": "<string>",
																							"description": {
																								"content": "The text of the comment",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "line",
																							"value": "<integer>",
																							"description": {
																								"content": "The line number",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "line_type",
																							"value": "new",
																							"description": {
																								"content": "The type of the line (This can only be one of new,old)",
																								"type": "text/plain"
																							}
																						},
																						{
																							"key": "path",
																							"value": "<string>",
																							"description": {
																								"content": "The file path",
																								"type": "text/plain"
																							}
																						}
																					]
																				},
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/comments?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"repository",
																						"commits",
																						":sha",
																						"comments"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "sha"
																						}
																					]
																				}
																			},
																			"status": "Created",
																			"code": 201,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"author\": {\n  \"avatar_url\": \"aliqua qui ea ex\",\n  \"id\": \"adipisicing aliqua magna reprehe\",\n  \"name\": \"ad consequat sint\",\n  \"state\": \"magna nulla nostrud fugiat\",\n  \"username\": \"nostrud anim quis\",\n  \"web_url\": \"laborum\"\n },\n \"created_at\": \"ex pariatur dolore enim ad\",\n \"line\": \"dolor anim in sint\",\n \"line_type\": \"Excepte\",\n \"note\": \"cillum quis\",\n \"path\": \"irure dolore\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get a specific commit of a project",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"commits",
																		":sha"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "sha",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) A commit sha, or the name of a branch or tag"
																		}
																	]
																},
																"description": "Get a specific commit of a project"
															},
															"response": [
																{
																	"name": "Get a specific commit of a project",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"commits",
																				":sha"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "sha"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"author_email\": \"magna Excepteur Ut exercitation\",\n \"author_name\": \"ea Excepteur\",\n \"authored_date\": \"dolore\",\n \"committed_date\": \"proident nulla\",\n \"committer_email\": \"sunt\",\n \"committer_name\": \"et exercita\",\n \"created_at\": \"dolor\",\n \"id\": \"laboris ipsum dolore\",\n \"message\": \"do non\",\n \"parent_ids\": \"aliquip\",\n \"short_id\": \"occaecat deserunt cillum\",\n \"stats\": {\n  \"additions\": \"deserunt\",\n  \"deletions\": \"nisi est irure\",\n  \"total\": \"id ipsum sed\"\n },\n \"status\": \"cillum o\",\n \"title\": \"nisi laboris aliquip\"\n}"
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"commits",
																				":sha"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "sha"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Get a raw file contents",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/blob?filepath=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"commits",
																		":sha",
																		"blob"
																	],
																	"query": [
																		{
																			"key": "filepath",
																			"value": "<string>",
																			"description": "(Required) The path to the file to display"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "sha",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The commit, branch name, or tag name"
																		}
																	]
																},
																"description": "Get a raw file contents"
															},
															"response": [
																{
																	"name": "Get a raw file contents",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/blob?filepath=<string>&private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"commits",
																				":sha",
																				"blob"
																			],
																			"query": [
																				{
																					"key": "filepath",
																					"value": "<string>"
																				},
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "sha"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Get builds for a specific commit of a project",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/builds?scope=<string>&page=<integer>&per_page=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"commits",
																		":sha",
																		"builds"
																	],
																	"query": [
																		{
																			"key": "scope",
																			"value": "<string>",
																			"description": "The scope of builds to show"
																		},
																		{
																			"key": "page",
																			"value": "<integer>",
																			"description": "Current page number"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>",
																			"description": "Number of items per page"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "sha",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The SHA id of a commit"
																		}
																	]
																},
																"description": "Get builds for a specific commit of a project"
															},
															"response": [
																{
																	"name": "Get builds for a specific commit of a project",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/builds?scope=<string>&page=<integer>&per_page=<integer>&private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"commits",
																				":sha",
																				"builds"
																			],
																			"query": [
																				{
																					"key": "scope",
																					"value": "<string>"
																				},
																				{
																					"key": "page",
																					"value": "<integer>"
																				},
																				{
																					"key": "per_page",
																					"value": "<integer>"
																				},
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "sha"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"artifacts_file\": {\n  \"filename\": \"eiusmod\",\n  \"size\": \"Ut\"\n },\n \"commit\": {\n  \"author_email\": \"si\",\n  \"author_name\": \"fugiat aliquip\",\n  \"committer_email\": \"aliquip incididunt\",\n  \"committer_name\": \"est reprehenderit\",\n  \"created_at\": \"Excepteur\",\n  \"id\": \"incididunt consequat enim\",\n  \"message\": \"eu cillum minim\",\n  \"short_id\": \"labore voluptate sint occaecat deserunt\",\n  \"title\": \"proident cillum tempor\"\n },\n \"coverage\": \"enim Ut ut minim\",\n \"created_at\": \"commodo aute amet dolore\",\n \"finished_at\": \"cupida\",\n \"id\": \"reprehenderit magna\",\n \"name\": \"laborum cillum\",\n \"pipeline\": {\n  \"id\": \"sunt Ut non labore\",\n  \"ref\": \"dolor cillum irure\",\n  \"sha\": \"aliquip reprehenderit est laborum consectetur\",\n  \"status\": \"ullamco minim fugiat velit ut\"\n },\n \"ref\": \"sunt aute\",\n \"runner\": {\n  \"active\": \"et\",\n  \"description\": \"enim dolor occaecat in\",\n  \"id\": \"nulla eu minim\",\n  \"is_shared\": \"voluptate aliqua officia veniam Duis\",\n  \"name\": \"magna officia laboris i\"\n },\n \"stage\": \"magna velit dolor\",\n \"started_at\": \"elit commodo in occaecat\",\n \"status\": \"sunt ipsum velit ullamco enim\",\n \"tag\": \"nostrud elit sit\",\n \"user\": {\n  \"avatar_url\": \"non do sunt velit cupidatat\",\n  \"bio\": \"occaecat in\",\n  \"created_at\": \"dolore dolor consectetur in pariatur\",\n  \"id\": \"officia sint\",\n  \"is_admin\": \"do laborum\",\n  \"linkedin\": \"non elit\",\n  \"location\": \"ullamco\",\n  \"name\": \"do ullamco ex reprehenderit\",\n  \"organization\": \"Excepteur sit\",\n  \"skype\": \"est qui in irure amet\",\n  \"state\": \"do voluptate sint\",\n  \"twitter\": \"reprehenderit dolor quis cillum\",\n  \"username\": \"est nisi ea\",\n  \"web_url\": \"enim\",\n  \"website_url\": \"labore exercitation voluptate eu\"\n }\n}"
																}
															]
														},
														{
															"name": "Cherry pick commit into a branch",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "branch",
																			"value": "<string>",
																			"description": "The name of the branch"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/cherry_pick",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"commits",
																		":sha",
																		"cherry_pick"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "sha",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) A commit sha to be cherry picked"
																		}
																	]
																},
																"description": "This feature was introduced in GitLab 8.15"
															},
															"response": [
																{
																	"name": "Cherry pick commit into a branch",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"body": {
																			"mode": "urlencoded",
																			"urlencoded": [
																				{
																					"key": "branch",
																					"value": "<string>",
																					"description": {
																						"content": "The name of the branch",
																						"type": "text/plain"
																					}
																				}
																			]
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/cherry_pick?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"commits",
																				":sha",
																				"cherry_pick"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "sha"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"author_email\": \"laborum nostrud in\",\n \"author_name\": \"veniam aliquip amet\",\n \"committer_email\": \"ad amet labore irure\",\n \"committer_name\": \"id occ\",\n \"created_at\": \"deserunt fugiat mollit\",\n \"id\": \"reprehenderit officia sunt incid\",\n \"message\": \"amet nostrud dolore non id\",\n \"short_id\": \"incididunt commodo sed enim consequat\",\n \"title\": \"est proident\"\n}"
																}
															]
														},
														{
															"name": "Get the diff for a specific commit of a project",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/diff",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"commits",
																		":sha",
																		"diff"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "sha",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) A commit sha, or the name of a branch or tag"
																		}
																	]
																},
																"description": "Get the diff for a specific commit of a project"
															},
															"response": [
																{
																	"name": "Get the diff for a specific commit of a project",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/diff?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"commits",
																				":sha",
																				"diff"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "sha"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/diff?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"commits",
																				":sha",
																				"diff"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "sha"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Get a commit's statuses",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/statuses?ref=<string>&stage=<string>&name=<string>&all=<string>&page=<integer>&per_page=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"commits",
																		":sha",
																		"statuses"
																	],
																	"query": [
																		{
																			"key": "ref",
																			"value": "<string>",
																			"description": "The ref"
																		},
																		{
																			"key": "stage",
																			"value": "<string>",
																			"description": "The stage"
																		},
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "The name"
																		},
																		{
																			"key": "all",
																			"value": "<string>",
																			"description": "Show all statuses, default: false"
																		},
																		{
																			"key": "page",
																			"value": "<integer>",
																			"description": "Current page number"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>",
																			"description": "Number of items per page"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "sha",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The commit hash"
																		}
																	]
																},
																"description": "Get a commit's statuses"
															},
															"response": [
																{
																	"name": "Get a commit's statuses",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/commits/:sha/statuses?ref=<string>&stage=<string>&name=<string>&all=<string>&page=<integer>&per_page=<integer>&private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"commits",
																				":sha",
																				"statuses"
																			],
																			"query": [
																				{
																					"key": "ref",
																					"value": "<string>"
																				},
																				{
																					"key": "stage",
																					"value": "<string>"
																				},
																				{
																					"key": "name",
																					"value": "<string>"
																				},
																				{
																					"key": "all",
																					"value": "<string>"
																				},
																				{
																					"key": "page",
																					"value": "<integer>"
																				},
																				{
																					"key": "per_page",
																					"value": "<integer>"
																				},
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "sha"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"allow_failure\": \"ut mollit\",\n \"author\": {\n  \"avatar_url\": \"elit incididunt\",\n  \"id\": \"amet dolore Excepteur anim\",\n  \"name\": \"eu\",\n  \"state\": \"sint consequat\",\n  \"username\": \"irure cupidatat cillum\",\n  \"web_url\": \"occaecat in enim velit sunt\"\n },\n \"created_at\": \"ipsum c\",\n \"description\": \"irure ut dolore dolor\",\n \"finished_at\": \"eiusmod ex laborum dolor\",\n \"id\": \"laborum minim\",\n \"name\": \"anim enim occaecat ad se\",\n \"ref\": \"off\",\n \"sha\": \"cillum amet\",\n \"started_at\": \"exercitati\",\n \"status\": \"deserunt pariatur Ut ex\",\n \"target_url\": \"elit enim\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get a project repository commits",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/commits?ref_name=<string>&since=<string>&until=<string>&page=0&per_page=20&path=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"commits"
															],
															"query": [
																{
																	"key": "ref_name",
																	"value": "<string>",
																	"description": "The name of a repository branch or tag, if not given the default branch is used"
																},
																{
																	"key": "since",
																	"value": "<string>",
																	"description": "Only commits after or in this date will be returned"
																},
																{
																	"key": "until",
																	"value": "<string>",
																	"description": "Only commits before or in this date will be returned"
																},
																{
																	"key": "page",
																	"value": "0",
																	"description": "The page for pagination"
																},
																{
																	"key": "per_page",
																	"value": "20",
																	"description": "The number of results per page"
																},
																{
																	"key": "path",
																	"value": "<string>",
																	"description": "The file path"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																}
															]
														},
														"description": "Get a project repository commits"
													},
													"response": [
														{
															"name": "Get a project repository commits",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/commits?ref_name=<string>&since=<string>&until=<string>&page=0&per_page=20&path=<string>&private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"commits"
																	],
																	"query": [
																		{
																			"key": "ref_name",
																			"value": "<string>"
																		},
																		{
																			"key": "since",
																			"value": "<string>"
																		},
																		{
																			"key": "until",
																			"value": "<string>"
																		},
																		{
																			"key": "page",
																			"value": "0"
																		},
																		{
																			"key": "per_page",
																			"value": "20"
																		},
																		{
																			"key": "path",
																			"value": "<string>"
																		},
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"author_email\": \"laborum nostrud in\",\n \"author_name\": \"veniam aliquip amet\",\n \"committer_email\": \"ad amet labore irure\",\n \"committer_name\": \"id occ\",\n \"created_at\": \"deserunt fugiat mollit\",\n \"id\": \"reprehenderit officia sunt incid\",\n \"message\": \"amet nostrud dolore non id\",\n \"short_id\": \"incididunt commodo sed enim consequat\",\n \"title\": \"est proident\"\n}"
														}
													]
												},
												{
													"name": "Commit multiple file changes as one commit",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "branch_name",
																	"value": "<string>",
																	"description": "The name of branch"
																},
																{
																	"key": "commit_message",
																	"value": "<string>",
																	"description": "Commit message"
																},
																{
																	"key": "actions",
																	"value": "[]",
																	"description": "Actions to perform in commit"
																},
																{
																	"key": "author_email",
																	"value": "<string>",
																	"description": "Author email for commit"
																},
																{
																	"key": "author_name",
																	"value": "<string>",
																	"description": "Author name for commit"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/commits",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"commits"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																}
															]
														},
														"description": "This feature was introduced in GitLab 8.13"
													},
													"response": [
														{
															"name": "Commit multiple file changes as one commit",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "branch_name",
																			"value": "<string>",
																			"description": {
																				"content": "The name of branch",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "commit_message",
																			"value": "<string>",
																			"description": {
																				"content": "Commit message",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "actions",
																			"value": "[]",
																			"description": {
																				"content": "Actions to perform in commit",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "author_email",
																			"value": "<string>",
																			"description": {
																				"content": "Author email for commit",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "author_name",
																			"value": "<string>",
																			"description": {
																				"content": "Author name for commit",
																				"type": "text/plain"
																			}
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/commits?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"commits"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"author_email\": \"magna Excepteur Ut exercitation\",\n \"author_name\": \"ea Excepteur\",\n \"authored_date\": \"dolore\",\n \"committed_date\": \"proident nulla\",\n \"committer_email\": \"sunt\",\n \"committer_name\": \"et exercita\",\n \"created_at\": \"dolor\",\n \"id\": \"laboris ipsum dolore\",\n \"message\": \"do non\",\n \"parent_ids\": \"aliquip\",\n \"short_id\": \"occaecat deserunt cillum\",\n \"stats\": {\n  \"additions\": \"deserunt\",\n  \"deletions\": \"nisi est irure\",\n  \"total\": \"id ipsum sed\"\n },\n \"status\": \"cillum o\",\n \"title\": \"nisi laboris aliquip\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "files",
											"item": [
												{
													"name": "Delete an existing file in repository",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/files?file_path=<string>&branch_name=<string>&commit_message=<string>&author_email=<string>&author_name=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"files"
															],
															"query": [
																{
																	"key": "file_path",
																	"value": "<string>",
																	"description": "(Required) The path to new file. Ex. lib/class.rb"
																},
																{
																	"key": "branch_name",
																	"value": "<string>",
																	"description": "(Required) The name of branch"
																},
																{
																	"key": "commit_message",
																	"value": "<string>",
																	"description": "(Required) Commit Message"
																},
																{
																	"key": "author_email",
																	"value": "<string>",
																	"description": "The email of the author"
																},
																{
																	"key": "author_name",
																	"value": "<string>",
																	"description": "The name of the author"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																}
															]
														},
														"description": "Delete an existing file in repository"
													},
													"response": [
														{
															"name": "Delete an existing file in repository",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/files?file_path=<string>&branch_name=<string>&commit_message=<string>&author_email=<string>&author_name=<string>&private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"files"
																	],
																	"query": [
																		{
																			"key": "file_path",
																			"value": "<string>"
																		},
																		{
																			"key": "branch_name",
																			"value": "<string>"
																		},
																		{
																			"key": "commit_message",
																			"value": "<string>"
																		},
																		{
																			"key": "author_email",
																			"value": "<string>"
																		},
																		{
																			"key": "author_name",
																			"value": "<string>"
																		},
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get a file from repository",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/files?file_path=<string>&ref=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"files"
															],
															"query": [
																{
																	"key": "file_path",
																	"value": "<string>",
																	"description": "(Required) The path to the file. Ex. lib/class.rb"
																},
																{
																	"key": "ref",
																	"value": "<string>",
																	"description": "(Required) The name of branch, tag, or commit"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																}
															]
														},
														"description": "Get a file from repository"
													},
													"response": [
														{
															"name": "Get a file from repository",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/files?file_path=<string>&ref=<string>&private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"files"
																	],
																	"query": [
																		{
																			"key": "file_path",
																			"value": "<string>"
																		},
																		{
																			"key": "ref",
																			"value": "<string>"
																		},
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Create new file in repository",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "file_path",
																	"value": "<string>",
																	"description": "The path to new file. Ex. lib/class.rb"
																},
																{
																	"key": "branch_name",
																	"value": "<string>",
																	"description": "The name of branch"
																},
																{
																	"key": "commit_message",
																	"value": "<string>",
																	"description": "Commit Message"
																},
																{
																	"key": "content",
																	"value": "<string>",
																	"description": "File content"
																},
																{
																	"key": "author_email",
																	"value": "<string>",
																	"description": "The email of the author"
																},
																{
																	"key": "author_name",
																	"value": "<string>",
																	"description": "The name of the author"
																},
																{
																	"key": "encoding",
																	"value": "<string>",
																	"description": "File encoding (This can only be one of base64)"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"files"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																}
															]
														},
														"description": "Create new file in repository"
													},
													"response": [
														{
															"name": "Create new file in repository",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/files?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"files"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Update existing file in repository",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "file_path",
																	"value": "<string>",
																	"description": "The path to new file. Ex. lib/class.rb"
																},
																{
																	"key": "branch_name",
																	"value": "<string>",
																	"description": "The name of branch"
																},
																{
																	"key": "commit_message",
																	"value": "<string>",
																	"description": "Commit Message"
																},
																{
																	"key": "content",
																	"value": "<string>",
																	"description": "File content"
																},
																{
																	"key": "author_email",
																	"value": "<string>",
																	"description": "The email of the author"
																},
																{
																	"key": "author_name",
																	"value": "<string>",
																	"description": "The name of the author"
																},
																{
																	"key": "encoding",
																	"value": "<string>",
																	"description": "File encoding (This can only be one of base64)"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/files",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"files"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The project ID"
																}
															]
														},
														"description": "Update existing file in repository"
													},
													"response": [
														{
															"name": "Update existing file in repository",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/files?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"files"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "tags",
											"item": [
												{
													"name": "{tag name}",
													"item": [
														{
															"name": "release",
															"item": [
																{
																	"name": "Add a release note to a tag",
																	"request": {
																		"method": "POST",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/x-www-form-urlencoded"
																			}
																		],
																		"body": {
																			"mode": "urlencoded",
																			"urlencoded": [
																				{
																					"key": "description",
																					"value": "<string>",
																					"description": "Release notes with markdown support"
																				}
																			]
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/tags/:tag_name/release",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"tags",
																				":tag_name",
																				"release"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"type": "string",
																					"description": "(Required) The ID of a project"
																				},
																				{
																					"key": "tag_name",
																					"value": "<string>",
																					"type": "string",
																					"description": "(Required) The name of the tag"
																				}
																			]
																		},
																		"description": "Add a release note to a tag"
																	},
																	"response": [
																		{
																			"name": "Add a release note to a tag",
																			"originalRequest": {
																				"method": "POST",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/repository/tags/:tag_name/release?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"repository",
																						"tags",
																						":tag_name",
																						"release"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "tag_name"
																						}
																					]
																				}
																			},
																			"status": "Created",
																			"code": 201,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"description\": \"Duis est adipisicing\",\n \"tag_name\": \"id deserunt anim ipsum\"\n}"
																		}
																	]
																},
																{
																	"name": "Update a tag's release note",
																	"request": {
																		"method": "PUT",
																		"header": [
																			{
																				"key": "Content-Type",
																				"value": "application/x-www-form-urlencoded"
																			}
																		],
																		"body": {
																			"mode": "urlencoded",
																			"urlencoded": [
																				{
																					"key": "description",
																					"value": "<string>",
																					"description": "Release notes with markdown support"
																				}
																			]
																		},
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/tags/:tag_name/release",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"tags",
																				":tag_name",
																				"release"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": "<string>",
																					"type": "string",
																					"description": "(Required) The ID of a project"
																				},
																				{
																					"key": "tag_name",
																					"value": "<string>",
																					"type": "string",
																					"description": "(Required) The name of the tag"
																				}
																			]
																		},
																		"description": "Update a tag's release note"
																	},
																	"response": [
																		{
																			"name": "Update a tag's release note",
																			"originalRequest": {
																				"method": "PUT",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/repository/tags/:tag_name/release?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"repository",
																						"tags",
																						":tag_name",
																						"release"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "tag_name"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"description\": \"Duis est adipisicing\",\n \"tag_name\": \"id deserunt anim ipsum\"\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Delete a repository tag",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/tags/:tag_name",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"tags",
																		":tag_name"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "tag_name",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The name of the tag"
																		}
																	]
																},
																"description": "Delete a repository tag"
															},
															"response": [
																{
																	"name": "Delete a repository tag",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/tags/:tag_name?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"tags",
																				":tag_name"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "tag_name"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Get a single repository tag",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/tags/:tag_name",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"tags",
																		":tag_name"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "tag_name",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The name of the tag"
																		}
																	]
																},
																"description": "Get a single repository tag"
															},
															"response": [
																{
																	"name": "Get a single repository tag",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/repository/tags/:tag_name?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"repository",
																				"tags",
																				":tag_name"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "tag_name"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"commit\": \"dolore exercitation aliqua\",\n \"message\": \"enim esse et\",\n \"name\": \"proident ea consectetur nulla aliqua\",\n \"release\": {\n  \"description\": \"dolore\",\n  \"tag_name\": \"commodo irure\"\n }\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get a project repository tags",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"tags"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																}
															]
														},
														"description": "Get a project repository tags"
													},
													"response": [
														{
															"name": "Get a project repository tags",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/tags?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"tags"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"commit\": \"dolore exercitation aliqua\",\n \"message\": \"enim esse et\",\n \"name\": \"proident ea consectetur nulla aliqua\",\n \"release\": {\n  \"description\": \"dolore\",\n  \"tag_name\": \"commodo irure\"\n }\n}"
														}
													]
												},
												{
													"name": "Create a new repository tag",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "tag_name",
																	"value": "<string>",
																	"description": "The name of the tag"
																},
																{
																	"key": "ref",
																	"value": "<string>",
																	"description": "The commit sha or branch name"
																},
																{
																	"key": "message",
																	"value": "<string>",
																	"description": "Specifying a message creates an annotated tag"
																},
																{
																	"key": "release_description",
																	"value": "<string>",
																	"description": "Specifying release notes stored in the GitLab database"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/tags",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"tags"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																}
															]
														},
														"description": "Create a new repository tag"
													},
													"response": [
														{
															"name": "Create a new repository tag",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "tag_name",
																			"value": "<string>",
																			"description": {
																				"content": "The name of the tag",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "ref",
																			"value": "<string>",
																			"description": {
																				"content": "The commit sha or branch name",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "message",
																			"value": "<string>",
																			"description": {
																				"content": "Specifying a message creates an annotated tag",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "release_description",
																			"value": "<string>",
																			"description": {
																				"content": "Specifying release notes stored in the GitLab database",
																				"type": "text/plain"
																			}
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/repository/tags?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"repository",
																		"tags"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"commit\": \"dolore exercitation aliqua\",\n \"message\": \"enim esse et\",\n \"name\": \"proident ea consectetur nulla aliqua\",\n \"release\": {\n  \"description\": \"dolore\",\n  \"tag_name\": \"commodo irure\"\n }\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get an archive of the repository",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/repository/archive?sha=<string>&format=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"repository",
														"archive"
													],
													"query": [
														{
															"key": "sha",
															"value": "<string>",
															"description": "The commit sha of the archive to be downloaded"
														},
														{
															"key": "format",
															"value": "<string>",
															"description": "The archive format"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Get an archive of the repository"
											},
											"response": [
												{
													"name": "Get an archive of the repository",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/archive?sha=<string>&format=<string>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"archive"
															],
															"query": [
																{
																	"key": "sha",
																	"value": "<string>"
																},
																{
																	"key": "format",
																	"value": "<string>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get a raw file contents",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/repository/blobs/:sha?filepath=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"repository",
														"blobs",
														":sha"
													],
													"query": [
														{
															"key": "filepath",
															"value": "<string>",
															"description": "(Required) The path to the file to display"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														},
														{
															"key": "sha",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The commit, branch name, or tag name"
														}
													]
												},
												"description": "Get a raw file contents"
											},
											"response": [
												{
													"name": "Get a raw file contents",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/blobs/:sha?filepath=<string>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"blobs",
																":sha"
															],
															"query": [
																{
																	"key": "filepath",
																	"value": "<string>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "sha"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Compare two branches, tags, or commits",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/repository/compare?from=<string>&to=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"repository",
														"compare"
													],
													"query": [
														{
															"key": "from",
															"value": "<string>",
															"description": "(Required) The commit, branch name, or tag name to start comparison"
														},
														{
															"key": "to",
															"value": "<string>",
															"description": "(Required) The commit, branch name, or tag name to stop comparison"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Compare two branches, tags, or commits"
											},
											"response": [
												{
													"name": "Compare two branches, tags, or commits",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/compare?from=<string>&to=<string>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"compare"
															],
															"query": [
																{
																	"key": "from",
																	"value": "<string>"
																},
																{
																	"key": "to",
																	"value": "<string>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"commit\": {\n  \"author_email\": \"Ut labore\",\n  \"author_name\": \"ad ipsum veniam dolor quis\",\n  \"committer_email\": \"sunt\",\n  \"committer_name\": \"\",\n  \"created_at\": \"sint in velit\",\n  \"id\": \"ullamco do consequat\",\n  \"message\": \"est deserunt aute\",\n  \"short_id\": \"deserunt \",\n  \"title\": \"occaecat pariatur id laboris\"\n },\n \"commits\": {\n  \"author_email\": \"anim fugiat\",\n  \"author_name\": \"ex cupidatat\",\n  \"committer_email\": \"et esse\",\n  \"committer_name\": \"ad ipsum est mollit\",\n  \"created_at\": \"magna esse in sit\",\n  \"id\": \"elit occaecat\",\n  \"message\": \"in labore aute in ut\",\n  \"short_id\": \"velit elit in\",\n  \"title\": \"sed \"\n },\n \"compare_same_ref\": \"id nisi anim sed\",\n \"compare_timeout\": \"est irure et eiusmod consectetur\",\n \"diffs\": {\n  \"a_mode\": \"nostrud id anim in\",\n  \"b_mode\": \"dolore nostrud ut esse anim\",\n  \"deleted_file\": \"est adipisicing irure deserunt commodo\",\n  \"diff\": \"nisi in proident\",\n  \"new_file\": \"culpa cupidatat non veniam\",\n  \"new_path\": \"officia Ut in veniam\",\n  \"old_path\": \"sunt incididunt proident dolore\",\n  \"renamed_file\": \"nostrud laborum sit re\"\n }\n}"
												}
											]
										},
										{
											"name": "Get repository contributors",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/repository/contributors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"repository",
														"contributors"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Get repository contributors"
											},
											"response": [
												{
													"name": "Get repository contributors",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/contributors?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"contributors"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"additions\": \"anim laborum deserunt\",\n \"commits\": \"sed commodo\",\n \"deletions\": \"ipsum consequat id\",\n \"email\": \"voluptate in con\",\n \"name\": \"velit est et dolore\"\n}"
												}
											]
										},
										{
											"name": "delete V3Projects Id Repository Merged Branches",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/repository/merged_branches",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"repository",
														"merged_branches"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												}
											},
											"response": [
												{
													"name": "deleted MergedBranch",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/merged_branches?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"merged_branches"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get a raw blob contents by blob sha",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/repository/raw_blobs/:sha",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"repository",
														"raw_blobs",
														":sha"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														},
														{
															"key": "sha",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The commit, branch name, or tag name"
														}
													]
												},
												"description": "Get a raw blob contents by blob sha"
											},
											"response": [
												{
													"name": "Get a raw blob contents by blob sha",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/raw_blobs/:sha?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"raw_blobs",
																":sha"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "sha"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get a project repository tree",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/repository/tree?ref_name=<string>&path=<string>&recursive=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"repository",
														"tree"
													],
													"query": [
														{
															"key": "ref_name",
															"value": "<string>",
															"description": "The name of a repository branch or tag, if not given the default branch is used"
														},
														{
															"key": "path",
															"value": "<string>",
															"description": "The path of the tree"
														},
														{
															"key": "recursive",
															"value": "<boolean>",
															"description": "Used to get a recursive tree"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Get a project repository tree"
											},
											"response": [
												{
													"name": "Get a project repository tree",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/repository/tree?ref_name=<string>&path=<string>&recursive=<boolean>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"repository",
																"tree"
															],
															"query": [
																{
																	"key": "ref_name",
																	"value": "<string>"
																},
																{
																	"key": "path",
																	"value": "<string>"
																},
																{
																	"key": "recursive",
																	"value": "<boolean>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"id\": \"ex laborum et pariatur incididunt\",\n \"mode\": \"qui in\",\n \"name\": \"cillum proident nisi\",\n \"path\": \"anim reprehenderit ut\",\n \"type\": \"irure incididunt\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "runners",
									"item": [
										{
											"name": "Get runners available for project",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/runners?scope=<string>&page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"runners"
													],
													"query": [
														{
															"key": "scope",
															"value": "<string>",
															"description": "The scope of specific runners to show"
														},
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Get runners available for project"
											},
											"response": [
												{
													"name": "Get runners available for project",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/runners?scope=<string>&page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"runners"
															],
															"query": [
																{
																	"key": "scope",
																	"value": "<string>"
																},
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"active\": \"quis\",\n \"description\": \"ullamco ex magna enim cillum\",\n \"id\": \"in qui cillum aliqua\",\n \"is_shared\": \"non dolor ut ullamco\",\n \"name\": \"est mollit nostrud\"\n}"
												}
											]
										},
										{
											"name": "Enable a runner for a project",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "runner_id",
															"value": "<integer>",
															"description": "The ID of the runner"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/runners",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"runners"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Enable a runner for a project"
											},
											"response": [
												{
													"name": "Enable a runner for a project",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "runner_id",
																	"value": "<integer>",
																	"description": {
																		"content": "The ID of the runner",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/runners?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"runners"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"active\": \"quis\",\n \"description\": \"ullamco ex magna enim cillum\",\n \"id\": \"in qui cillum aliqua\",\n \"is_shared\": \"non dolor ut ullamco\",\n \"name\": \"est mollit nostrud\"\n}"
												}
											]
										},
										{
											"name": "Disable project's runner",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/runners/:runner_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"runners",
														":runner_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														},
														{
															"key": "runner_id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the runner"
														}
													]
												},
												"description": "Disable project's runner"
											},
											"response": [
												{
													"name": "Disable project's runner",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/runners/:runner_id?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"runners",
																":runner_id"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "runner_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"active\": \"quis\",\n \"description\": \"ullamco ex magna enim cillum\",\n \"id\": \"in qui cillum aliqua\",\n \"is_shared\": \"non dolor ut ullamco\",\n \"name\": \"est mollit nostrud\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "services",
									"item": [
										{
											"name": "{service slug}",
											"item": [
												{
													"name": "Delete a service for project",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/:service_slug",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																":service_slug"
															],
															"variable": [
																{
																	"key": "service_slug",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The name of the service"
																},
																{
																	"key": "id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Delete a service for project"
													},
													"response": [
														{
															"name": "Delete a service for project",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/services/:service_slug?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"services",
																		":service_slug"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "service_slug"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get the service settings for project",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/:service_slug",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																":service_slug"
															],
															"variable": [
																{
																	"key": "service_slug",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The name of the service"
																},
																{
																	"key": "id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) "
																}
															]
														},
														"description": "Get the service settings for project"
													},
													"response": [
														{
															"name": "Get the service settings for project",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/services/:service_slug?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"services",
																		":service_slug"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "service_slug"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"active\": \"ipsum nostrud\",\n \"build_events\": \"sint\",\n \"created_at\": \"nisi eu labore occaecat\",\n \"id\": \"eu exercitation voluptate\",\n \"issues_events\": \"cupidatat qui\",\n \"merge_requests_events\": \"nulla Lorem\",\n \"note_events\": \"Lorem sunt velit\",\n \"pipeline_events\": \"elit incididunt a\",\n \"properties\": \"dolore ut\",\n \"push_events\": \"cillum Excepteur sint minim\",\n \"tag_push_events\": \"pariatur irure consequat cillum\",\n \"title\": \"ea\",\n \"updated_at\": \"dolore anim dolor\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Set asana service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "api_key",
															"value": "<string>",
															"description": "User API token"
														},
														{
															"key": "restrict_to_branch",
															"value": "<string>",
															"description": "Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/asana",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"asana"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set asana service for project"
											},
											"response": [
												{
													"name": "Set asana service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "api_key",
																	"value": "<string>",
																	"description": {
																		"content": "User API token",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "restrict_to_branch",
																	"value": "<string>",
																	"description": {
																		"content": "Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/asana?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"asana"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set assembla service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "The authentication token"
														},
														{
															"key": "subdomain",
															"value": "<string>",
															"description": "Subdomain setting"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/assembla",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"assembla"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set assembla service for project"
											},
											"response": [
												{
													"name": "Set assembla service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "token",
																	"value": "<string>",
																	"description": {
																		"content": "The authentication token",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "subdomain",
																	"value": "<string>",
																	"description": {
																		"content": "Subdomain setting",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/assembla?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"assembla"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set bamboo service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "bamboo_url",
															"value": "<string>",
															"description": "Bamboo root URL like https://bamboo.example.com"
														},
														{
															"key": "build_key",
															"value": "<string>",
															"description": "Bamboo build plan key like"
														},
														{
															"key": "username",
															"value": "<string>",
															"description": "A user with API access, if applicable"
														},
														{
															"key": "password",
															"value": "<string>",
															"description": "Passord of the user"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/bamboo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"bamboo"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set bamboo service for project"
											},
											"response": [
												{
													"name": "Set bamboo service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "bamboo_url",
																	"value": "<string>",
																	"description": {
																		"content": "Bamboo root URL like https://bamboo.example.com",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "build_key",
																	"value": "<string>",
																	"description": {
																		"content": "Bamboo build plan key like",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "username",
																	"value": "<string>",
																	"description": {
																		"content": "A user with API access, if applicable",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "password",
																	"value": "<string>",
																	"description": {
																		"content": "Passord of the user",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/bamboo?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"bamboo"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set bugzilla service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "new_issue_url",
															"value": "<string>",
															"description": "New issue URL"
														},
														{
															"key": "issues_url",
															"value": "<string>",
															"description": "Issues URL"
														},
														{
															"key": "project_url",
															"value": "<string>",
															"description": "Project URL"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "Description"
														},
														{
															"key": "title",
															"value": "<string>",
															"description": "Title"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/bugzilla",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"bugzilla"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set bugzilla service for project"
											},
											"response": [
												{
													"name": "Set bugzilla service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/bugzilla?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"bugzilla"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set buildkite service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "Buildkite project GitLab token"
														},
														{
															"key": "project_url",
															"value": "<string>",
															"description": "The buildkite project URL"
														},
														{
															"key": "enable_ssl_verification",
															"value": "<boolean>",
															"description": "Enable SSL verification for communication"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/buildkite",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"buildkite"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set buildkite service for project"
											},
											"response": [
												{
													"name": "Set buildkite service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "token",
																	"value": "<string>",
																	"description": {
																		"content": "Buildkite project GitLab token",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "project_url",
																	"value": "<string>",
																	"description": {
																		"content": "The buildkite project URL",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "enable_ssl_verification",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable SSL verification for communication",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/buildkite?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"buildkite"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set builds-email service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "recipients",
															"value": "<string>",
															"description": "Comma-separated list of recipient email addresses"
														},
														{
															"key": "add_pusher",
															"value": "<boolean>",
															"description": "Add pusher to recipients list"
														},
														{
															"key": "notify_only_broken_builds",
															"value": "<boolean>",
															"description": "Notify only broken builds"
														},
														{
															"key": "build_events",
															"value": "<string>",
															"description": "Event will be triggered when a build status changes"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/builds-email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"builds-email"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set builds-email service for project"
											},
											"response": [
												{
													"name": "Set builds-email service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "recipients",
																	"value": "<string>",
																	"description": {
																		"content": "Comma-separated list of recipient email addresses",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "add_pusher",
																	"value": "<boolean>",
																	"description": {
																		"content": "Add pusher to recipients list",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "notify_only_broken_builds",
																	"value": "<boolean>",
																	"description": {
																		"content": "Notify only broken builds",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "build_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a build status changes",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/builds-email?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"builds-email"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set campfire service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "Campfire token"
														},
														{
															"key": "subdomain",
															"value": "<string>",
															"description": "Campfire subdomain"
														},
														{
															"key": "room",
															"value": "<string>",
															"description": "Campfire room"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/campfire",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"campfire"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set campfire service for project"
											},
											"response": [
												{
													"name": "Set campfire service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "token",
																	"value": "<string>",
																	"description": {
																		"content": "Campfire token",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "subdomain",
																	"value": "<string>",
																	"description": {
																		"content": "Campfire subdomain",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "room",
																	"value": "<string>",
																	"description": {
																		"content": "Campfire room",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/campfire?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"campfire"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set custom-issue-tracker service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "new_issue_url",
															"value": "<string>",
															"description": "New issue URL"
														},
														{
															"key": "issues_url",
															"value": "<string>",
															"description": "Issues URL"
														},
														{
															"key": "project_url",
															"value": "<string>",
															"description": "Project URL"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "Description"
														},
														{
															"key": "title",
															"value": "<string>",
															"description": "Title"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/custom-issue-tracker",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"custom-issue-tracker"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set custom-issue-tracker service for project"
											},
											"response": [
												{
													"name": "Set custom-issue-tracker service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/custom-issue-tracker?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"custom-issue-tracker"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set drone-ci service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "Drone CI token"
														},
														{
															"key": "drone_url",
															"value": "<string>",
															"description": "Drone CI URL"
														},
														{
															"key": "enable_ssl_verification",
															"value": "<boolean>",
															"description": "Enable SSL verification for communication"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														},
														{
															"key": "merge_request_events",
															"value": "<string>",
															"description": "Event will be triggered when a merge request is created/updated/merged"
														},
														{
															"key": "tag_push_events",
															"value": "<string>",
															"description": "Event will be triggered when a new tag is pushed to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/drone-ci",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"drone-ci"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set drone-ci service for project"
											},
											"response": [
												{
													"name": "Set drone-ci service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "token",
																	"value": "<string>",
																	"description": {
																		"content": "Drone CI token",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "drone_url",
																	"value": "<string>",
																	"description": {
																		"content": "Drone CI URL",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "enable_ssl_verification",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable SSL verification for communication",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "merge_request_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a merge request is created/updated/merged",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "tag_push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a new tag is pushed to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/drone-ci?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"drone-ci"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set emails-on-push service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "recipients",
															"value": "<string>",
															"description": "Comma-separated list of recipient email addresses"
														},
														{
															"key": "disable_diffs",
															"value": "<boolean>",
															"description": "Disable code diffs"
														},
														{
															"key": "send_from_committer_email",
															"value": "<boolean>",
															"description": "Send from committer"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														},
														{
															"key": "tag_push_events",
															"value": "<string>",
															"description": "Event will be triggered when a new tag is pushed to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/emails-on-push",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"emails-on-push"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set emails-on-push service for project"
											},
											"response": [
												{
													"name": "Set emails-on-push service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "recipients",
																	"value": "<string>",
																	"description": {
																		"content": "Comma-separated list of recipient email addresses",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "disable_diffs",
																	"value": "<boolean>",
																	"description": {
																		"content": "Disable code diffs",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "send_from_committer_email",
																	"value": "<boolean>",
																	"description": {
																		"content": "Send from committer",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "tag_push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a new tag is pushed to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/emails-on-push?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"emails-on-push"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set external-wiki service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "external_wiki_url",
															"value": "<string>",
															"description": "The URL of the external Wiki"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/external-wiki",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"external-wiki"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set external-wiki service for project"
											},
											"response": [
												{
													"name": "Set external-wiki service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "external_wiki_url",
																	"value": "<string>",
																	"description": {
																		"content": "The URL of the external Wiki",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/external-wiki?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"external-wiki"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set flowdock service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "Flowdock token"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/flowdock",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"flowdock"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set flowdock service for project"
											},
											"response": [
												{
													"name": "Set flowdock service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "token",
																	"value": "<string>",
																	"description": {
																		"content": "Flowdock token",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/flowdock?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"flowdock"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set gemnasium service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "api_key",
															"value": "<string>",
															"description": "Your personal API key on gemnasium.com"
														},
														{
															"key": "token",
															"value": "<string>",
															"description": "The project's slug on gemnasium.com"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/gemnasium",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"gemnasium"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set gemnasium service for project"
											},
											"response": [
												{
													"name": "Set gemnasium service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "api_key",
																	"value": "<string>",
																	"description": {
																		"content": "Your personal API key on gemnasium.com",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "token",
																	"value": "<string>",
																	"description": {
																		"content": "The project's slug on gemnasium.com",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/gemnasium?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"gemnasium"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set hipchat service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "The room token"
														},
														{
															"key": "room",
															"value": "<string>",
															"description": "The room name or ID"
														},
														{
															"key": "color",
															"value": "<string>",
															"description": "The room color"
														},
														{
															"key": "notify",
															"value": "<boolean>",
															"description": "Enable notifications"
														},
														{
															"key": "api_version",
															"value": "<string>",
															"description": "Leave blank for default (v2)"
														},
														{
															"key": "server",
															"value": "<string>",
															"description": "Leave blank for default. https://hipchat.example.com"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														},
														{
															"key": "issue_events",
															"value": "<string>",
															"description": "Event will be triggered when an issue is created/updated/closed"
														},
														{
															"key": "confidential_issue_events",
															"value": "<string>",
															"description": "Event will be triggered when a confidential issue is created/updated/closed"
														},
														{
															"key": "merge_request_events",
															"value": "<string>",
															"description": "Event will be triggered when a merge request is created/updated/merged"
														},
														{
															"key": "note_events",
															"value": "<string>",
															"description": "Event will be triggered when someone adds a comment"
														},
														{
															"key": "tag_push_events",
															"value": "<string>",
															"description": "Event will be triggered when a new tag is pushed to the repository"
														},
														{
															"key": "build_events",
															"value": "<string>",
															"description": "Event will be triggered when a build status changes"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/hipchat",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"hipchat"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set hipchat service for project"
											},
											"response": [
												{
													"name": "Set hipchat service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "token",
																	"value": "<string>",
																	"description": {
																		"content": "The room token",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "room",
																	"value": "<string>",
																	"description": {
																		"content": "The room name or ID",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "color",
																	"value": "<string>",
																	"description": {
																		"content": "The room color",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "notify",
																	"value": "<boolean>",
																	"description": {
																		"content": "Enable notifications",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "api_version",
																	"value": "<string>",
																	"description": {
																		"content": "Leave blank for default (v2)",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "server",
																	"value": "<string>",
																	"description": {
																		"content": "Leave blank for default. https://hipchat.example.com",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "issue_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when an issue is created/updated/closed",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "confidential_issue_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a confidential issue is created/updated/closed",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "merge_request_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a merge request is created/updated/merged",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "note_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when someone adds a comment",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "tag_push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a new tag is pushed to the repository",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "build_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a build status changes",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/hipchat?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"hipchat"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set irker service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "recipients",
															"value": "<string>",
															"description": "Recipients/channels separated by whitespaces"
														},
														{
															"key": "default_irc_uri",
															"value": "<string>",
															"description": "Default: irc://irc.network.net:6697"
														},
														{
															"key": "server_host",
															"value": "<string>",
															"description": "Server host. Default localhost"
														},
														{
															"key": "server_port",
															"value": "<integer>",
															"description": "Server port. Default 6659"
														},
														{
															"key": "colorize_messages",
															"value": "<boolean>",
															"description": "Colorize messages"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/irker",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"irker"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set irker service for project"
											},
											"response": [
												{
													"name": "Set irker service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "recipients",
																	"value": "<string>",
																	"description": {
																		"content": "Recipients/channels separated by whitespaces",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "default_irc_uri",
																	"value": "<string>",
																	"description": {
																		"content": "Default: irc://irc.network.net:6697",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "server_host",
																	"value": "<string>",
																	"description": {
																		"content": "Server host. Default localhost",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "server_port",
																	"value": "<integer>",
																	"description": {
																		"content": "Server port. Default 6659",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "colorize_messages",
																	"value": "<boolean>",
																	"description": {
																		"content": "Colorize messages",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/irker?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"irker"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set jira service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "url",
															"value": "<string>",
															"description": "The URL to the JIRA project which is being linked to this GitLab project, e.g., https://jira.example.com"
														},
														{
															"key": "project_key",
															"value": "<string>",
															"description": "The short identifier for your JIRA project, all uppercase, e.g., PROJ"
														},
														{
															"key": "username",
															"value": "<string>",
															"description": "The username of the user created to be used with GitLab/JIRA"
														},
														{
															"key": "password",
															"value": "<string>",
															"description": "The password of the user created to be used with GitLab/JIRA"
														},
														{
															"key": "jira_issue_transition_id",
															"value": "<integer>",
															"description": "The ID of a transition that moves issues to a closed state. You can find this number under the JIRA workflow administration (**Administration > Issues > Workflows**) by selecting **View** under **Operations** of the desired workflow of your project. The ID of each state can be found inside the parenthesis of each transition name under the **Transitions (id)** column ([see screenshot][trans]). By default, this ID is set to `2`"
														},
														{
															"key": "commit_events",
															"value": "<string>",
															"description": "Event will be triggered when a commit is created/updated"
														},
														{
															"key": "merge_request_events",
															"value": "<string>",
															"description": "Event will be triggered when a merge request is created/updated/merged"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/jira",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"jira"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set jira service for project"
											},
											"response": [
												{
													"name": "Set jira service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "url",
																	"value": "<string>",
																	"description": {
																		"content": "The URL to the JIRA project which is being linked to this GitLab project, e.g., https://jira.example.com",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "project_key",
																	"value": "<string>",
																	"description": {
																		"content": "The short identifier for your JIRA project, all uppercase, e.g., PROJ",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "username",
																	"value": "<string>",
																	"description": {
																		"content": "The username of the user created to be used with GitLab/JIRA",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "password",
																	"value": "<string>",
																	"description": {
																		"content": "The password of the user created to be used with GitLab/JIRA",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "jira_issue_transition_id",
																	"value": "<integer>",
																	"description": {
																		"content": "The ID of a transition that moves issues to a closed state. You can find this number under the JIRA workflow administration (**Administration > Issues > Workflows**) by selecting **View** under **Operations** of the desired workflow of your project. The ID of each state can be found inside the parenthesis of each transition name under the **Transitions (id)** column ([see screenshot][trans]). By default, this ID is set to `2`",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "commit_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a commit is created/updated",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "merge_request_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a merge request is created/updated/merged",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/jira?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"jira"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set kubernetes service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "namespace",
															"value": "<string>",
															"description": "The Kubernetes namespace to use"
														},
														{
															"key": "api_url",
															"value": "<string>",
															"description": "The URL to the Kubernetes cluster API, e.g., https://kubernetes.example.com"
														},
														{
															"key": "token",
															"value": "<string>",
															"description": "The service token to authenticate against the Kubernetes cluster with"
														},
														{
															"key": "ca_pem",
															"value": "<string>",
															"description": "A custom certificate authority bundle to verify the Kubernetes cluster with (PEM format)"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/kubernetes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"kubernetes"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set kubernetes service for project"
											},
											"response": [
												{
													"name": "Set kubernetes service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "namespace",
																	"value": "<string>",
																	"description": {
																		"content": "The Kubernetes namespace to use",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "api_url",
																	"value": "<string>",
																	"description": {
																		"content": "The URL to the Kubernetes cluster API, e.g., https://kubernetes.example.com",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "token",
																	"value": "<string>",
																	"description": {
																		"content": "The service token to authenticate against the Kubernetes cluster with",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "ca_pem",
																	"value": "<string>",
																	"description": {
																		"content": "A custom certificate authority bundle to verify the Kubernetes cluster with (PEM format)",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/kubernetes?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"kubernetes"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set mattermost service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "webhook",
															"value": "<string>",
															"description": "The Mattermost webhook. e.g. http://mattermost_host/hooks/..."
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														},
														{
															"key": "issue_events",
															"value": "<string>",
															"description": "Event will be triggered when an issue is created/updated/closed"
														},
														{
															"key": "confidential_issue_events",
															"value": "<string>",
															"description": "Event will be triggered when a confidential issue is created/updated/closed"
														},
														{
															"key": "merge_request_events",
															"value": "<string>",
															"description": "Event will be triggered when a merge request is created/updated/merged"
														},
														{
															"key": "note_events",
															"value": "<string>",
															"description": "Event will be triggered when someone adds a comment"
														},
														{
															"key": "tag_push_events",
															"value": "<string>",
															"description": "Event will be triggered when a new tag is pushed to the repository"
														},
														{
															"key": "build_events",
															"value": "<string>",
															"description": "Event will be triggered when a build status changes"
														},
														{
															"key": "pipeline_events",
															"value": "<string>"
														},
														{
															"key": "wiki_page_events",
															"value": "<string>",
															"description": "Event will be triggered when a wiki page is created/updated"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/mattermost",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"mattermost"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set mattermost service for project"
											},
											"response": [
												{
													"name": "Set mattermost service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "webhook",
																	"value": "<string>",
																	"description": {
																		"content": "The Mattermost webhook. e.g. http://mattermost_host/hooks/...",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "issue_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when an issue is created/updated/closed",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "confidential_issue_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a confidential issue is created/updated/closed",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "merge_request_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a merge request is created/updated/merged",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "note_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when someone adds a comment",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "tag_push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a new tag is pushed to the repository",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "build_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a build status changes",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "pipeline_events",
																	"value": "<string>",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "wiki_page_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a wiki page is created/updated",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/mattermost?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"mattermost"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set mattermost-slash-commands service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "The Mattermost token"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/mattermost-slash-commands",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"mattermost-slash-commands"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set mattermost-slash-commands service for project"
											},
											"response": [
												{
													"name": "Set mattermost-slash-commands service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/mattermost-slash-commands?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"mattermost-slash-commands"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Trigger a slash command for mattermost-slash-commands",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "The Mattermost token"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/mattermost_slash_commands/trigger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"mattermost_slash_commands",
														"trigger"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Added in GitLab 8.13"
											},
											"response": [
												{
													"name": "Trigger a slash command for mattermost-slash-commands",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/mattermost_slash_commands/trigger?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"mattermost_slash_commands",
																"trigger"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set pipelines-email service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "recipients",
															"value": "<string>",
															"description": "Comma-separated list of recipient email addresses"
														},
														{
															"key": "notify_only_broken_builds",
															"value": "<boolean>",
															"description": "Notify only broken builds"
														},
														{
															"key": "pipeline_events",
															"value": "<string>"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/pipelines-email",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"pipelines-email"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set pipelines-email service for project"
											},
											"response": [
												{
													"name": "Set pipelines-email service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "recipients",
																	"value": "<string>",
																	"description": {
																		"content": "Comma-separated list of recipient email addresses",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "notify_only_broken_builds",
																	"value": "<boolean>",
																	"description": {
																		"content": "Notify only broken builds",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "pipeline_events",
																	"value": "<string>",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/pipelines-email?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"pipelines-email"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set pivotaltracker service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "The Pivotaltracker token"
														},
														{
															"key": "restrict_to_branch",
															"value": "<string>",
															"description": "Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches."
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/pivotaltracker",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"pivotaltracker"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set pivotaltracker service for project"
											},
											"response": [
												{
													"name": "Set pivotaltracker service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "token",
																	"value": "<string>",
																	"description": {
																		"content": "The Pivotaltracker token",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "restrict_to_branch",
																	"value": "<string>",
																	"description": {
																		"content": "Comma-separated list of branches which will be automatically inspected. Leave blank to include all branches.",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/pivotaltracker?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"pivotaltracker"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set pushover service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "api_key",
															"value": "<string>",
															"description": "The application key"
														},
														{
															"key": "user_key",
															"value": "<string>",
															"description": "The user key"
														},
														{
															"key": "priority",
															"value": "<string>",
															"description": "The priority"
														},
														{
															"key": "device",
															"value": "<string>",
															"description": "Leave blank for all active devices"
														},
														{
															"key": "sound",
															"value": "<string>",
															"description": "The sound of the notification"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/pushover",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"pushover"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set pushover service for project"
											},
											"response": [
												{
													"name": "Set pushover service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "api_key",
																	"value": "<string>",
																	"description": {
																		"content": "The application key",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "user_key",
																	"value": "<string>",
																	"description": {
																		"content": "The user key",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "priority",
																	"value": "<string>",
																	"description": {
																		"content": "The priority",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "device",
																	"value": "<string>",
																	"description": {
																		"content": "Leave blank for all active devices",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "sound",
																	"value": "<string>",
																	"description": {
																		"content": "The sound of the notification",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/pushover?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"pushover"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set redmine service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "new_issue_url",
															"value": "<string>",
															"description": "The new issue URL"
														},
														{
															"key": "project_url",
															"value": "<string>",
															"description": "The project URL"
														},
														{
															"key": "issues_url",
															"value": "<string>",
															"description": "The issues URL"
														},
														{
															"key": "description",
															"value": "<string>",
															"description": "The description of the tracker"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/redmine",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"redmine"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set redmine service for project"
											},
											"response": [
												{
													"name": "Set redmine service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "new_issue_url",
																	"value": "<string>",
																	"description": {
																		"content": "The new issue URL",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "project_url",
																	"value": "<string>",
																	"description": {
																		"content": "The project URL",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "issues_url",
																	"value": "<string>",
																	"description": {
																		"content": "The issues URL",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "description",
																	"value": "<string>",
																	"description": {
																		"content": "The description of the tracker",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/redmine?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"redmine"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set slack service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "webhook",
															"value": "<string>",
															"description": "The Slack webhook. e.g. https://hooks.slack.com/services/..."
														},
														{
															"key": "new_issue_url",
															"value": "<string>",
															"description": "The user name"
														},
														{
															"key": "channel",
															"value": "<string>",
															"description": "The channel name"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														},
														{
															"key": "issue_events",
															"value": "<string>",
															"description": "Event will be triggered when an issue is created/updated/closed"
														},
														{
															"key": "confidential_issue_events",
															"value": "<string>",
															"description": "Event will be triggered when a confidential issue is created/updated/closed"
														},
														{
															"key": "merge_request_events",
															"value": "<string>",
															"description": "Event will be triggered when a merge request is created/updated/merged"
														},
														{
															"key": "note_events",
															"value": "<string>",
															"description": "Event will be triggered when someone adds a comment"
														},
														{
															"key": "tag_push_events",
															"value": "<string>",
															"description": "Event will be triggered when a new tag is pushed to the repository"
														},
														{
															"key": "build_events",
															"value": "<string>",
															"description": "Event will be triggered when a build status changes"
														},
														{
															"key": "pipeline_events",
															"value": "<string>"
														},
														{
															"key": "wiki_page_events",
															"value": "<string>",
															"description": "Event will be triggered when a wiki page is created/updated"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/slack",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"slack"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set slack service for project"
											},
											"response": [
												{
													"name": "Set slack service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "webhook",
																	"value": "<string>",
																	"description": {
																		"content": "The Slack webhook. e.g. https://hooks.slack.com/services/...",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "new_issue_url",
																	"value": "<string>",
																	"description": {
																		"content": "The user name",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "channel",
																	"value": "<string>",
																	"description": {
																		"content": "The channel name",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "issue_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when an issue is created/updated/closed",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "confidential_issue_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a confidential issue is created/updated/closed",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "merge_request_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a merge request is created/updated/merged",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "note_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when someone adds a comment",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "tag_push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a new tag is pushed to the repository",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "build_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a build status changes",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "pipeline_events",
																	"value": "<string>",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "wiki_page_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered when a wiki page is created/updated",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/slack?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"slack"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set slack-slash-commands service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "The Slack token"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/slack-slash-commands",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"slack-slash-commands"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set slack-slash-commands service for project"
											},
											"response": [
												{
													"name": "Set slack-slash-commands service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/slack-slash-commands?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"slack-slash-commands"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Trigger a slash command for slack-slash-commands",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": "The Slack token"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/slack_slash_commands/trigger",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"slack_slash_commands",
														"trigger"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Added in GitLab 8.13"
											},
											"response": [
												{
													"name": "Trigger a slash command for slack-slash-commands",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/slack_slash_commands/trigger?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"slack_slash_commands",
																"trigger"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Set teamcity service for project",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "teamcity_url",
															"value": "<string>",
															"description": "TeamCity root URL like https://teamcity.example.com"
														},
														{
															"key": "build_type",
															"value": "<string>",
															"description": "Build configuration ID"
														},
														{
															"key": "username",
															"value": "<string>",
															"description": "A user with permissions to trigger a manual build"
														},
														{
															"key": "password",
															"value": "<string>",
															"description": "The password of the user"
														},
														{
															"key": "push_events",
															"value": "<string>",
															"description": "Event will be triggered by a push to the repository"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/services/teamcity",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"services",
														"teamcity"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) "
														}
													]
												},
												"description": "Set teamcity service for project"
											},
											"response": [
												{
													"name": "Set teamcity service for project",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "teamcity_url",
																	"value": "<string>",
																	"description": {
																		"content": "TeamCity root URL like https://teamcity.example.com",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "build_type",
																	"value": "<string>",
																	"description": {
																		"content": "Build configuration ID",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "username",
																	"value": "<string>",
																	"description": {
																		"content": "A user with permissions to trigger a manual build",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "password",
																	"value": "<string>",
																	"description": {
																		"content": "The password of the user",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "push_events",
																	"value": "<string>",
																	"description": {
																		"content": "Event will be triggered by a push to the repository",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/services/teamcity?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"services",
																"teamcity"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "share",
									"item": [
										{
											"name": "Share the project with a group",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "group_id",
															"value": "<integer>",
															"description": "The ID of a group"
														},
														{
															"key": "group_access",
															"value": "<integer>",
															"description": "The group access level (This can only be one of 10,20,30,40)"
														},
														{
															"key": "expires_at",
															"value": "<date>",
															"description": "Share expiration date"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/share",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"share"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Share the project with a group"
											},
											"response": [
												{
													"name": "Share the project with a group",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "group_id",
																	"value": "<integer>",
																	"description": {
																		"content": "The ID of a group",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "group_access",
																	"value": "<integer>",
																	"description": {
																		"content": "The group access level (This can only be one of 10,20,30,40)",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "expires_at",
																	"value": "<date>",
																	"description": {
																		"content": "Share expiration date",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/share?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"share"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"expires_at\": \"mollit enim nulla exercitation dolor\",\n \"group_access\": \"dolor deserunt\",\n \"group_id\": \"irure id ea nulla\",\n \"id\": \"culpa est proident cillum amet\",\n \"project_id\": \"sunt nostrud aliqua adipisicing\"\n}"
												}
											]
										},
										{
											"name": "delete V3Projects Id Share Group Id",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/share/:group_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"share",
														":group_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														},
														{
															"key": "group_id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the group"
														}
													]
												}
											},
											"response": [
												{
													"name": "deleted Share",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/share/:group_id?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"share",
																":group_id"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "group_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "snippets",
									"item": [
										{
											"name": "{noteable id}/notes",
											"item": [
												{
													"name": "{note id}",
													"item": [
														{
															"name": "Delete a +noteable+ note",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:noteable_id/notes/:note_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":noteable_id",
																		"notes",
																		":note_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "noteable_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the noteable"
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a note"
																		}
																	]
																},
																"description": "Delete a +noteable+ note"
															},
															"response": [
																{
																	"name": "Delete a +noteable+ note",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/snippets/:noteable_id/notes/:note_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"snippets",
																				":noteable_id",
																				"notes",
																				":note_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "noteable_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
																}
															]
														},
														{
															"name": "Get a single +noteable+ note",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:noteable_id/notes/:note_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":noteable_id",
																		"notes",
																		":note_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a note"
																		},
																		{
																			"key": "noteable_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the noteable"
																		}
																	]
																},
																"description": "Get a single +noteable+ note"
															},
															"response": [
																{
																	"name": "Get a single +noteable+ note",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/snippets/:noteable_id/notes/:note_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"snippets",
																				":noteable_id",
																				"notes",
																				":note_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "noteable_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
																}
															]
														},
														{
															"name": "Update an existing +noteable+ note",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "body",
																			"value": "<string>",
																			"description": "The content of a note"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:noteable_id/notes/:note_id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":noteable_id",
																		"notes",
																		":note_id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "noteable_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of the noteable"
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of a note"
																		}
																	]
																},
																"description": "Update an existing +noteable+ note"
															},
															"response": [
																{
																	"name": "Update an existing +noteable+ note",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/snippets/:noteable_id/notes/:note_id?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"snippets",
																				":noteable_id",
																				"notes",
																				":note_id"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "noteable_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Get a list of project +noteable+ notes",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/snippets/:noteable_id/notes?page=<integer>&per_page=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"snippets",
																":noteable_id",
																"notes"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<integer>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "noteable_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the noteable"
																}
															]
														},
														"description": "Get a list of project +noteable+ notes"
													},
													"response": [
														{
															"name": "Get a list of project +noteable+ notes",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:noteable_id/notes?page=<integer>&per_page=<integer>&private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":noteable_id",
																		"notes"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>"
																		},
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "noteable_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
														}
													]
												},
												{
													"name": "Create a new +noteable+ note",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "body",
																	"value": "<string>",
																	"description": "The content of a note"
																},
																{
																	"key": "created_at",
																	"value": "<string>",
																	"description": "The creation date of the note"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/snippets/:noteable_id/notes",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"snippets",
																":noteable_id",
																"notes"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "noteable_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of the noteable"
																}
															]
														},
														"description": "Create a new +noteable+ note"
													},
													"response": [
														{
															"name": "Create a new +noteable+ note",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:noteable_id/notes?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":noteable_id",
																		"notes"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "noteable_id"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"attachment\": \"ipsum nisi velit labore\",\n \"author\": {\n  \"avatar_url\": \"id ullamco\",\n  \"id\": \"quis cupidatat\",\n  \"name\": \"d\",\n  \"state\": \"cupidatat enim laboris labore\",\n  \"username\": \"ea eu in\",\n  \"web_url\": \"adipisicing magna occaecat laboris\"\n },\n \"body\": \"pariatur dolore veniam\",\n \"created_at\": \"adipisicing irure consequat\",\n \"downvote?\": \"aute dolore\",\n \"id\": \"ipsum eiusmod\",\n \"noteable_id\": \"amet minim\",\n \"noteable_type\": \"sunt velit exercitation\",\n \"system\": \"irure consequat\",\n \"updated_at\": \"cupidatat minim\",\n \"upvote?\": \"occaecat anim et nulla\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "{snippet id}",
											"item": [
												{
													"name": "award emoji",
													"item": [
														{
															"name": "{award id}",
															"item": [
																{
																	"name": "Delete a +awardables+ award emoji",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/award_emoji/:award_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"snippets",
																				":snippet_id",
																				"award_emoji",
																				":award_id"
																			],
																			"variable": [
																				{
																					"key": "award_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) The ID of an award emoji"
																				},
																				{
																					"key": "id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "snippet_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "This feature was introduced in 8.9"
																	},
																	"response": [
																		{
																			"name": "Delete a +awardables+ award emoji",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/award_emoji/:award_id?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"snippets",
																						":snippet_id",
																						"award_emoji",
																						":award_id"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "snippet_id"
																						},
																						{
																							"key": "award_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																		}
																	]
																},
																{
																	"name": "Get a specific award emoji",
																	"request": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/award_emoji/:award_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"snippets",
																				":snippet_id",
																				"award_emoji",
																				":award_id"
																			],
																			"variable": [
																				{
																					"key": "award_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) The ID of the award"
																				},
																				{
																					"key": "id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "snippet_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "This feature was introduced in 8.9"
																	},
																	"response": [
																		{
																			"name": "Get a specific award emoji",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/award_emoji/:award_id?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"snippets",
																						":snippet_id",
																						"award_emoji",
																						":award_id"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "snippet_id"
																						},
																						{
																							"key": "award_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get a list of project +awardable+ award emoji",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/award_emoji?page=<integer>&per_page=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":snippet_id",
																		"award_emoji"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>",
																			"description": "Current page number"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>",
																			"description": "Number of items per page"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<string>",
																			"type": "string",
																			"description": "(Required) The ID of a project"
																		},
																		{
																			"key": "snippet_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) The ID of an Issue, Merge Request or Snippet"
																		}
																	]
																},
																"description": "This feature was introduced in 8.9"
															},
															"response": [
																{
																	"name": "Get a list of project +awardable+ award emoji",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/award_emoji?page=<integer>&per_page=<integer>&private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"snippets",
																				":snippet_id",
																				"award_emoji"
																			],
																			"query": [
																				{
																					"key": "page",
																					"value": "<integer>"
																				},
																				{
																					"key": "per_page",
																					"value": "<integer>"
																				},
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "snippet_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																}
															]
														},
														{
															"name": "Award a new Emoji",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "The name of a award_emoji (without colons)"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/award_emoji",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":snippet_id",
																		"award_emoji"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "snippet_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This feature was introduced in 8.9"
															},
															"response": [
																{
																	"name": "Award a new Emoji",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/award_emoji?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"snippets",
																				":snippet_id",
																				"award_emoji"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "snippet_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																}
															]
														}
													]
												},
												{
													"name": "notes/{note id}/award emoji",
													"item": [
														{
															"name": "{award id}",
															"item": [
																{
																	"name": "Delete a +awardables+ award emoji",
																	"request": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji/:award_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"snippets",
																				":snippet_id",
																				"notes",
																				":note_id",
																				"award_emoji",
																				":award_id"
																			],
																			"variable": [
																				{
																					"key": "award_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) The ID of an award emoji"
																				},
																				{
																					"key": "id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "snippet_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "note_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "This feature was introduced in 8.9"
																	},
																	"response": [
																		{
																			"name": "Delete a +awardables+ award emoji",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji/:award_id?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"snippets",
																						":snippet_id",
																						"notes",
																						":note_id",
																						"award_emoji",
																						":award_id"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "snippet_id"
																						},
																						{
																							"key": "note_id"
																						},
																						{
																							"key": "award_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																		}
																	]
																},
																{
																	"name": "Get a specific award emoji",
																	"request": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji/:award_id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"snippets",
																				":snippet_id",
																				"notes",
																				":note_id",
																				"award_emoji",
																				":award_id"
																			],
																			"variable": [
																				{
																					"key": "award_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) The ID of the award"
																				},
																				{
																					"key": "id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "snippet_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				},
																				{
																					"key": "note_id",
																					"value": "<integer>",
																					"type": "string",
																					"description": "(Required) "
																				}
																			]
																		},
																		"description": "This feature was introduced in 8.9"
																	},
																	"response": [
																		{
																			"name": "Get a specific award emoji",
																			"originalRequest": {
																				"method": "GET",
																				"header": [],
																				"url": {
																					"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji/:award_id?private_token=<API Key>",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v3",
																						"projects",
																						":id",
																						"snippets",
																						":snippet_id",
																						"notes",
																						":note_id",
																						"award_emoji",
																						":award_id"
																					],
																					"query": [
																						{
																							"key": "private_token",
																							"value": "<API Key>"
																						}
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "snippet_id"
																						},
																						{
																							"key": "note_id"
																						},
																						{
																							"key": "award_id"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																		}
																	]
																}
															]
														},
														{
															"name": "Get a list of project +awardable+ award emoji",
															"request": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji?page=<integer>&per_page=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":snippet_id",
																		"notes",
																		":note_id",
																		"award_emoji"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "<integer>",
																			"description": "Current page number"
																		},
																		{
																			"key": "per_page",
																			"value": "<integer>",
																			"description": "Number of items per page"
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "snippet_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This feature was introduced in 8.9"
															},
															"response": [
																{
																	"name": "Get a list of project +awardable+ award emoji",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji?page=<integer>&per_page=<integer>&private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"snippets",
																				":snippet_id",
																				"notes",
																				":note_id",
																				"award_emoji"
																			],
																			"query": [
																				{
																					"key": "page",
																					"value": "<integer>"
																				},
																				{
																					"key": "per_page",
																					"value": "<integer>"
																				},
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "snippet_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																}
															]
														},
														{
															"name": "Award a new Emoji",
															"request": {
																"method": "POST",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/x-www-form-urlencoded"
																	}
																],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "name",
																			"value": "<string>",
																			"description": "The name of a award_emoji (without colons)"
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":snippet_id",
																		"notes",
																		":note_id",
																		"award_emoji"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "snippet_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		},
																		{
																			"key": "note_id",
																			"value": "<integer>",
																			"type": "string",
																			"description": "(Required) "
																		}
																	]
																},
																"description": "This feature was introduced in 8.9"
															},
															"response": [
																{
																	"name": "Award a new Emoji",
																	"originalRequest": {
																		"method": "POST",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji?private_token=<API Key>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v3",
																				"projects",
																				":id",
																				"snippets",
																				":snippet_id",
																				"notes",
																				":note_id",
																				"award_emoji"
																			],
																			"query": [
																				{
																					"key": "private_token",
																					"value": "<API Key>"
																				}
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "snippet_id"
																				},
																				{
																					"key": "note_id"
																				}
																			]
																		}
																	},
																	"status": "Created",
																	"code": 201,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n \"awardable_id\": \"quis aute sed\",\n \"awardable_type\": \"non in qui\",\n \"created_at\": \"nisi ea tempor\",\n \"id\": \"deserunt anim\",\n \"name\": \"deserunt incididunt anim in\",\n \"updated_at\": \"i\",\n \"user\": {\n  \"avatar_url\": \"Ut aliquip aliqua reprehenderit p\",\n  \"id\": \"consectetur nostrud occaecat\",\n  \"name\": \"deserunt labore magna fugiat\",\n  \"state\": \"nisi enim\",\n  \"username\": \"magna\",\n  \"web_url\": \"laborum minim aliqua amet\"\n }\n}"
																}
															]
														}
													]
												},
												{
													"name": "Delete a project snippet",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"snippets",
																":snippet_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "snippet_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project snippet"
																}
															]
														},
														"description": "Delete a project snippet"
													},
													"response": [
														{
															"name": "Delete a project snippet",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":snippet_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "snippet_id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get a single project snippet",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"snippets",
																":snippet_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "snippet_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project snippet"
																}
															]
														},
														"description": "Get a single project snippet"
													},
													"response": [
														{
															"name": "Get a single project snippet",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":snippet_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "snippet_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"author\": {\n  \"avatar_url\": \"ad cup\",\n  \"id\": \"labore elit Excepteur\",\n  \"name\": \"dolor occaecat\",\n  \"state\": \"irure\",\n  \"username\": \"sit\",\n  \"web_url\": \"sunt sint\"\n },\n \"created_at\": \"mollit minim cupidatat aute\",\n \"expires_at\": \"adipisicing ea irure\",\n \"file_name\": \"ipsum Ut exercitation\",\n \"id\": \"eiusmod consequat minim nisi anim\",\n \"title\": \"irur\",\n \"updated_at\": \"minim exercitation\",\n \"web_url\": \"commodo amet proident\"\n}"
														}
													]
												},
												{
													"name": "Update an existing project snippet",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "title",
																	"value": "<string>",
																	"description": "The title of the snippet"
																},
																{
																	"key": "file_name",
																	"value": "<string>",
																	"description": "The file name of the snippet"
																},
																{
																	"key": "code",
																	"value": "<string>",
																	"description": "The content of the snippet"
																},
																{
																	"key": "visibility_level",
																	"value": "<integer>",
																	"description": "The visibility level of the snippet (This can only be one of 0,10,20)"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"snippets",
																":snippet_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "snippet_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project snippet"
																}
															]
														},
														"description": "Update an existing project snippet"
													},
													"response": [
														{
															"name": "Update an existing project snippet",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "title",
																			"value": "<string>",
																			"description": {
																				"content": "The title of the snippet",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "file_name",
																			"value": "<string>",
																			"description": {
																				"content": "The file name of the snippet",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "code",
																			"value": "<string>",
																			"description": {
																				"content": "The content of the snippet",
																				"type": "text/plain"
																			}
																		},
																		{
																			"key": "visibility_level",
																			"value": "<integer>",
																			"description": {
																				"content": "The visibility level of the snippet (This can only be one of 0,10,20)",
																				"type": "text/plain"
																			}
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":snippet_id"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "snippet_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"author\": {\n  \"avatar_url\": \"ad cup\",\n  \"id\": \"labore elit Excepteur\",\n  \"name\": \"dolor occaecat\",\n  \"state\": \"irure\",\n  \"username\": \"sit\",\n  \"web_url\": \"sunt sint\"\n },\n \"created_at\": \"mollit minim cupidatat aute\",\n \"expires_at\": \"adipisicing ea irure\",\n \"file_name\": \"ipsum Ut exercitation\",\n \"id\": \"eiusmod consequat minim nisi anim\",\n \"title\": \"irur\",\n \"updated_at\": \"minim exercitation\",\n \"web_url\": \"commodo amet proident\"\n}"
														}
													]
												},
												{
													"name": "Get a raw project snippet",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/raw",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"snippets",
																":snippet_id",
																"raw"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "snippet_id",
																	"value": "<integer>",
																	"type": "string",
																	"description": "(Required) The ID of a project snippet"
																}
															]
														},
														"description": "Get a raw project snippet"
													},
													"response": [
														{
															"name": "Get a raw project snippet",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/snippets/:snippet_id/raw?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"snippets",
																		":snippet_id",
																		"raw"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "snippet_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Get all project snippets",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/snippets?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"snippets"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Get all project snippets"
											},
											"response": [
												{
													"name": "Get all project snippets",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/snippets?page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"snippets"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"author\": {\n  \"avatar_url\": \"ad cup\",\n  \"id\": \"labore elit Excepteur\",\n  \"name\": \"dolor occaecat\",\n  \"state\": \"irure\",\n  \"username\": \"sit\",\n  \"web_url\": \"sunt sint\"\n },\n \"created_at\": \"mollit minim cupidatat aute\",\n \"expires_at\": \"adipisicing ea irure\",\n \"file_name\": \"ipsum Ut exercitation\",\n \"id\": \"eiusmod consequat minim nisi anim\",\n \"title\": \"irur\",\n \"updated_at\": \"minim exercitation\",\n \"web_url\": \"commodo amet proident\"\n}"
												}
											]
										},
										{
											"name": "Create a new project snippet",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "title",
															"value": "<string>",
															"description": "The title of the snippet"
														},
														{
															"key": "file_name",
															"value": "<string>",
															"description": "The file name of the snippet"
														},
														{
															"key": "code",
															"value": "<string>",
															"description": "The content of the snippet"
														},
														{
															"key": "visibility_level",
															"value": "<integer>",
															"description": "The visibility level of the snippet (This can only be one of 0,10,20)"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/snippets",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"snippets"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Create a new project snippet"
											},
											"response": [
												{
													"name": "Create a new project snippet",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "title",
																	"value": "<string>",
																	"description": {
																		"content": "The title of the snippet",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "file_name",
																	"value": "<string>",
																	"description": {
																		"content": "The file name of the snippet",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "code",
																	"value": "<string>",
																	"description": {
																		"content": "The content of the snippet",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "visibility_level",
																	"value": "<integer>",
																	"description": {
																		"content": "The visibility level of the snippet (This can only be one of 0,10,20)",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/snippets?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"snippets"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"author\": {\n  \"avatar_url\": \"ad cup\",\n  \"id\": \"labore elit Excepteur\",\n  \"name\": \"dolor occaecat\",\n  \"state\": \"irure\",\n  \"username\": \"sit\",\n  \"web_url\": \"sunt sint\"\n },\n \"created_at\": \"mollit minim cupidatat aute\",\n \"expires_at\": \"adipisicing ea irure\",\n \"file_name\": \"ipsum Ut exercitation\",\n \"id\": \"eiusmod consequat minim nisi anim\",\n \"title\": \"irur\",\n \"updated_at\": \"minim exercitation\",\n \"web_url\": \"commodo amet proident\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "star",
									"item": [
										{
											"name": "Unstar a project",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/star",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"star"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Unstar a project"
											},
											"response": [
												{
													"name": "Unstar a project",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/star?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"star"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"archived\": \"non mollit sit\",\n \"avatar_url\": \"exercitation est Ut ullamco\",\n \"builds_enabled\": \"amet ad\",\n \"container_registry_enabled\": \"nulla eu culpa\",\n \"created_at\": \"id in ut\",\n \"creator_id\": \"ullamco Ut\",\n \"default_branch\": \"aliqua\",\n \"description\": \"Lorem irure qui\",\n \"forked_from_project\": {\n  \"http_url_to_repo\": \"Duis ex\",\n  \"id\": \"c\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"in\",\n  \"path\": \"cupidatat et laboris Excepteur\",\n  \"path_with_namespace\": \"pariatur\",\n  \"web_url\": \"velit\"\n },\n \"forks_count\": \"ex mollit Excepteur commodo\",\n \"http_url_to_repo\": \"quis enim aliqua\",\n \"id\": \"aliqua\",\n \"issues_enabled\": \"ullamco exerci\",\n \"last_activity_at\": \"Lorem irure esse ut\",\n \"lfs_enabled\": \"amet ea anim\",\n \"merge_requests_enabled\": \"dolor\",\n \"name\": \"elit voluptate qui ea\",\n \"name_with_namespace\": \"enim\",\n \"namespace\": {\n  \"id\": \"consectetur pariatur et minim\",\n  \"kind\": \"ut sunt in Lorem\",\n  \"name\": \"sunt\",\n  \"path\": \"incididunt tempor\"\n },\n \"only_allow_merge_if_all_discussions_are_resolved\": \"qui aliquip labore tempor\",\n \"only_allow_merge_if_build_succeeds\": \"a\",\n \"open_issues_count\": \"irure laboris\",\n \"owner\": {\n  \"avatar_url\": \"id ut\",\n  \"id\": \"cupidat\",\n  \"name\": \"ullamco laborum\",\n  \"state\": \"non dolore fugiat\",\n  \"username\": \"enim in deserunt voluptate labore\",\n  \"web_url\": \"Lorem officia non\"\n },\n \"path\": \"do elit voluptate\",\n \"path_with_namespace\": \"sint deserunt do tempor qui\",\n \"public\": \"qui laboris nulla\",\n \"public_builds\": \"sit anim\",\n \"request_access_enabled\": \"labore anim id sint veniam\",\n \"runners_token\": \"fugiat proident Ut\",\n \"shared_runners_enabled\": \"repr\",\n \"shared_with_groups\": \"eiusmod tempor nulla voluptate\",\n \"snippets_enabled\": \"veniam Lorem\",\n \"ssh_url_to_repo\": \"adipisicing velit cupidatat voluptate\",\n \"star_count\": \"reprehenderit non et pariatur ut\",\n \"statistics\": {\n  \"build_artifacts_size\": \"cupidatat\",\n  \"commit_count\": \"nostrud laboris\",\n  \"lfs_objects_size\": \"enim\",\n  \"repository_size\": \"adipisicing occaecat\",\n  \"storage_size\": \"proident r\"\n },\n \"tag_list\": \"deserunt in ullamco\",\n \"visibility_level\": \"in eiusmod velit\",\n \"web_url\": \"adipisicing magna\",\n \"wiki_enabled\": \"cupidatat reprehenderit\"\n}"
												}
											]
										},
										{
											"name": "Star a project",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/star",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"star"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Star a project"
											},
											"response": [
												{
													"name": "Star a project",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/star?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"star"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"archived\": \"non mollit sit\",\n \"avatar_url\": \"exercitation est Ut ullamco\",\n \"builds_enabled\": \"amet ad\",\n \"container_registry_enabled\": \"nulla eu culpa\",\n \"created_at\": \"id in ut\",\n \"creator_id\": \"ullamco Ut\",\n \"default_branch\": \"aliqua\",\n \"description\": \"Lorem irure qui\",\n \"forked_from_project\": {\n  \"http_url_to_repo\": \"Duis ex\",\n  \"id\": \"c\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"in\",\n  \"path\": \"cupidatat et laboris Excepteur\",\n  \"path_with_namespace\": \"pariatur\",\n  \"web_url\": \"velit\"\n },\n \"forks_count\": \"ex mollit Excepteur commodo\",\n \"http_url_to_repo\": \"quis enim aliqua\",\n \"id\": \"aliqua\",\n \"issues_enabled\": \"ullamco exerci\",\n \"last_activity_at\": \"Lorem irure esse ut\",\n \"lfs_enabled\": \"amet ea anim\",\n \"merge_requests_enabled\": \"dolor\",\n \"name\": \"elit voluptate qui ea\",\n \"name_with_namespace\": \"enim\",\n \"namespace\": {\n  \"id\": \"consectetur pariatur et minim\",\n  \"kind\": \"ut sunt in Lorem\",\n  \"name\": \"sunt\",\n  \"path\": \"incididunt tempor\"\n },\n \"only_allow_merge_if_all_discussions_are_resolved\": \"qui aliquip labore tempor\",\n \"only_allow_merge_if_build_succeeds\": \"a\",\n \"open_issues_count\": \"irure laboris\",\n \"owner\": {\n  \"avatar_url\": \"id ut\",\n  \"id\": \"cupidat\",\n  \"name\": \"ullamco laborum\",\n  \"state\": \"non dolore fugiat\",\n  \"username\": \"enim in deserunt voluptate labore\",\n  \"web_url\": \"Lorem officia non\"\n },\n \"path\": \"do elit voluptate\",\n \"path_with_namespace\": \"sint deserunt do tempor qui\",\n \"public\": \"qui laboris nulla\",\n \"public_builds\": \"sit anim\",\n \"request_access_enabled\": \"labore anim id sint veniam\",\n \"runners_token\": \"fugiat proident Ut\",\n \"shared_runners_enabled\": \"repr\",\n \"shared_with_groups\": \"eiusmod tempor nulla voluptate\",\n \"snippets_enabled\": \"veniam Lorem\",\n \"ssh_url_to_repo\": \"adipisicing velit cupidatat voluptate\",\n \"star_count\": \"reprehenderit non et pariatur ut\",\n \"statistics\": {\n  \"build_artifacts_size\": \"cupidatat\",\n  \"commit_count\": \"nostrud laboris\",\n  \"lfs_objects_size\": \"enim\",\n  \"repository_size\": \"adipisicing occaecat\",\n  \"storage_size\": \"proident r\"\n },\n \"tag_list\": \"deserunt in ullamco\",\n \"visibility_level\": \"in eiusmod velit\",\n \"web_url\": \"adipisicing magna\",\n \"wiki_enabled\": \"cupidatat reprehenderit\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "triggers",
									"item": [
										{
											"name": "{token}",
											"item": [
												{
													"name": "Delete a trigger",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/triggers/:token",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"triggers",
																":token"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "token",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The unique token of trigger"
																}
															]
														},
														"description": "Delete a trigger"
													},
													"response": [
														{
															"name": "Delete a trigger",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/triggers/:token?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"triggers",
																		":token"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "token"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"created_at\": \"et irure sunt veniam\",\n \"deleted_at\": \"minim fugiat\",\n \"last_used\": \"non et\",\n \"token\": \"exercitation sunt\",\n \"updated_at\": \"eiusmod et eu\"\n}"
														}
													]
												},
												{
													"name": "Get specific trigger of a project",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/triggers/:token",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"triggers",
																":token"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "token",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The unique token of trigger"
																}
															]
														},
														"description": "Get specific trigger of a project"
													},
													"response": [
														{
															"name": "Get specific trigger of a project",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/triggers/:token?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"triggers",
																		":token"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "token"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"created_at\": \"et irure sunt veniam\",\n \"deleted_at\": \"minim fugiat\",\n \"last_used\": \"non et\",\n \"token\": \"exercitation sunt\",\n \"updated_at\": \"eiusmod et eu\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get triggers list",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/triggers?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"triggers"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Get triggers list"
											},
											"response": [
												{
													"name": "Get triggers list",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/triggers?page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"triggers"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"created_at\": \"et irure sunt veniam\",\n \"deleted_at\": \"minim fugiat\",\n \"last_used\": \"non et\",\n \"token\": \"exercitation sunt\",\n \"updated_at\": \"eiusmod et eu\"\n}"
												}
											]
										},
										{
											"name": "Create a trigger",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/triggers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"triggers"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Create a trigger"
											},
											"response": [
												{
													"name": "Create a trigger",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/triggers?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"triggers"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"created_at\": \"et irure sunt veniam\",\n \"deleted_at\": \"minim fugiat\",\n \"last_used\": \"non et\",\n \"token\": \"exercitation sunt\",\n \"updated_at\": \"eiusmod et eu\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "variables",
									"item": [
										{
											"name": "{key}",
											"item": [
												{
													"name": "Delete an existing variable from a project",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/variables/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"variables",
																":key"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "key",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The key of the variable"
																}
															]
														},
														"description": "Delete an existing variable from a project"
													},
													"response": [
														{
															"name": "Delete an existing variable from a project",
															"originalRequest": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/variables/:key?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"variables",
																		":key"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"key\": \"cillum\",\n \"value\": \"pariatur minim est\"\n}"
														}
													]
												},
												{
													"name": "Get a specific variable from a project",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/variables/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"variables",
																":key"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "key",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The key of the variable"
																}
															]
														},
														"description": "Get a specific variable from a project"
													},
													"response": [
														{
															"name": "Get a specific variable from a project",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/variables/:key?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"variables",
																		":key"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"key\": \"cillum\",\n \"value\": \"pariatur minim est\"\n}"
														}
													]
												},
												{
													"name": "Update an existing variable from a project",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/x-www-form-urlencoded"
															}
														],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "value",
																	"value": "<string>",
																	"description": "The value of the variable"
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/variables/:key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"variables",
																":key"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The ID of a project"
																},
																{
																	"key": "key",
																	"value": "<string>",
																	"type": "string",
																	"description": "(Required) The key of the variable"
																}
															]
														},
														"description": "Update an existing variable from a project"
													},
													"response": [
														{
															"name": "Update an existing variable from a project",
															"originalRequest": {
																"method": "PUT",
																"header": [],
																"body": {
																	"mode": "urlencoded",
																	"urlencoded": [
																		{
																			"key": "value",
																			"value": "<string>",
																			"description": {
																				"content": "The value of the variable",
																				"type": "text/plain"
																			}
																		}
																	]
																},
																"url": {
																	"raw": "{{baseUrl}}/v3/projects/:id/variables/:key?private_token=<API Key>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v3",
																		"projects",
																		":id",
																		"variables",
																		":key"
																	],
																	"query": [
																		{
																			"key": "private_token",
																			"value": "<API Key>"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "key"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n \"key\": \"cillum\",\n \"value\": \"pariatur minim est\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get project variables",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/variables?page=<integer>&per_page=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"variables"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<integer>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Get project variables"
											},
											"response": [
												{
													"name": "Get project variables",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/variables?page=<integer>&per_page=<integer>&private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"variables"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<integer>"
																},
																{
																	"key": "per_page",
																	"value": "<integer>"
																},
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"key\": \"cillum\",\n \"value\": \"pariatur minim est\"\n}"
												}
											]
										},
										{
											"name": "Create a new variable in a project",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "key",
															"value": "<string>",
															"description": "The key of the variable"
														},
														{
															"key": "value",
															"value": "<string>",
															"description": "The value of the variable"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/variables",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"variables"
													],
													"variable": [
														{
															"key": "id",
															"value": "<string>",
															"type": "string",
															"description": "(Required) The ID of a project"
														}
													]
												},
												"description": "Create a new variable in a project"
											},
											"response": [
												{
													"name": "Create a new variable in a project",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "key",
																	"value": "<string>",
																	"description": {
																		"content": "The key of the variable",
																		"type": "text/plain"
																	}
																},
																{
																	"key": "value",
																	"value": "<string>",
																	"description": {
																		"content": "The value of the variable",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/projects/:id/variables?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"projects",
																":id",
																"variables"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"key\": \"cillum\",\n \"value\": \"pariatur minim est\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Remove a project",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/projects/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a project"
												}
											]
										},
										"description": "Remove a project"
									},
									"response": [
										{
											"name": "Remove a project",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get a single project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/projects/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a project"
												}
											]
										},
										"description": "Get a single project"
									},
									"response": [
										{
											"name": "Get a single project",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"archived\": \"sit sint adipisicing\",\n \"avatar_url\": \"sed fugiat\",\n \"builds_enabled\": \"ut ut su\",\n \"container_registry_enabled\": \"ut voluptate minim\",\n \"created_at\": \"reprehenderit consequat quis ea\",\n \"creator_id\": \"in elit\",\n \"default_branch\": \"Except\",\n \"description\": \"officia irure in dolore\",\n \"forked_from_project\": {\n  \"http_url_to_repo\": \"proident pariatur est\",\n  \"id\": \"proident cupidatat\",\n  \"name\": \"est ea\",\n  \"name_with_namespace\": \"mollit exercitation\",\n  \"path\": \"cillum in velit dolore Duis\",\n  \"path_with_namespace\": \"in laboris esse non culpa\",\n  \"web_url\": \"adipisicing do irure dolore\"\n },\n \"forks_count\": \"esse velit tempor\",\n \"http_url_to_repo\": \"officia ut ci\",\n \"id\": \"dolore quis anim proident\",\n \"issues_enabled\": \"pariatur Excepteur voluptate sint\",\n \"last_activity_at\": \"anim laboris cillum ullamco occaecat\",\n \"lfs_enabled\": \"nulla dolor in \",\n \"merge_requests_enabled\": \"dolore sit adip\",\n \"name\": \"elit cillum quis cupidatat occaecat\",\n \"name_with_namespace\": \"dolor Excepteur sed ex esse\",\n \"namespace\": {\n  \"id\": \"Except\",\n  \"kind\": \"magna fugiat consequat nulla enim\",\n  \"name\": \"ut adip\",\n  \"path\": \"labore esse nostrud\"\n },\n \"only_allow_merge_if_all_discussions_are_resolved\": \"proiden\",\n \"only_allow_merge_if_build_succeeds\": \"anim deserunt Excepteur elit\",\n \"open_issues_count\": \"Lorem nulla\",\n \"owner\": {\n  \"avatar_url\": \"nostrud commodo ex\",\n  \"id\": \"in\",\n  \"name\": \"in amet\",\n  \"state\": \"nisi ex\",\n  \"username\": \"sit laboris ut\",\n  \"web_url\": \"sit ut in ex\"\n },\n \"path\": \"veniam cillum\",\n \"path_with_namespace\": \"et laboris\",\n \"permissions\": \"incididunt et\",\n \"public\": \"minim deserunt \",\n \"public_builds\": \"deserunt nisi\",\n \"request_access_enabled\": \"velit quis\",\n \"runners_token\": \"ex elit eu sed\",\n \"shared_runners_enabled\": \"officia do pariatur incididunt laborum\",\n \"shared_with_groups\": \"mollit ad\",\n \"snippets_enabled\": \"esse magna velit sit Duis\",\n \"ssh_url_to_repo\": \"culpa magna labore dolor dolore\",\n \"star_count\": \"amet\",\n \"statistics\": {\n  \"build_artifacts_size\": \"irure Lorem\",\n  \"commit_count\": \"commodo non\",\n  \"lfs_objects_size\": \"elit enim eu officia consequat\",\n  \"repository_size\": \"id velit\",\n  \"storage_size\": \"Ut reprehenderit non adipisicin\"\n },\n \"tag_list\": \"labore minim\",\n \"visibility_level\": \"ullamco irure ex laborum\",\n \"web_url\": \"tempor aliquip in dolor dolore\",\n \"wiki_enabled\": \"cupidatat do ea\"\n}"
										}
									]
								},
								{
									"name": "Update an existing project",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "<string>",
													"description": "The name of the project"
												},
												{
													"key": "default_branch",
													"value": "<string>",
													"description": "The default branch of the project"
												},
												{
													"key": "path",
													"value": "<string>",
													"description": "The path of the repository"
												},
												{
													"key": "description",
													"value": "<string>",
													"description": "The description of the project"
												},
												{
													"key": "issues_enabled",
													"value": "<boolean>",
													"description": "Flag indication if the issue tracker is enabled"
												},
												{
													"key": "merge_requests_enabled",
													"value": "<boolean>",
													"description": "Flag indication if merge requests are enabled"
												},
												{
													"key": "wiki_enabled",
													"value": "<boolean>",
													"description": "Flag indication if the wiki is enabled"
												},
												{
													"key": "builds_enabled",
													"value": "<boolean>",
													"description": "Flag indication if builds are enabled"
												},
												{
													"key": "snippets_enabled",
													"value": "<boolean>",
													"description": "Flag indication if snippets are enabled"
												},
												{
													"key": "shared_runners_enabled",
													"value": "<boolean>",
													"description": "Flag indication if shared runners are enabled for that project"
												},
												{
													"key": "container_registry_enabled",
													"value": "<boolean>",
													"description": "Flag indication if the container registry is enabled for that project"
												},
												{
													"key": "lfs_enabled",
													"value": "<boolean>",
													"description": "Flag indication if Git LFS is enabled for that project"
												},
												{
													"key": "public",
													"value": "<boolean>",
													"description": "Create a public project. The same as visibility_level = 20."
												},
												{
													"key": "visibility_level",
													"value": "<integer>",
													"description": "Create a public project. The same as visibility_level = 20. (This can only be one of 0,10,20)"
												},
												{
													"key": "public_builds",
													"value": "<boolean>",
													"description": "Perform public builds"
												},
												{
													"key": "request_access_enabled",
													"value": "<boolean>",
													"description": "Allow users to request member access"
												},
												{
													"key": "only_allow_merge_if_build_succeeds",
													"value": "<boolean>",
													"description": "Only allow to merge if builds succeed"
												},
												{
													"key": "only_allow_merge_if_all_discussions_are_resolved",
													"value": "<boolean>",
													"description": "Only allow to merge if all discussions are resolved"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/projects/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a project"
												}
											]
										},
										"description": "Update an existing project"
									},
									"response": [
										{
											"name": "Update an existing project",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "name",
															"value": "<string>",
															"description": {
																"content": "The name of the project",
																"type": "text/plain"
															}
														},
														{
															"key": "default_branch",
															"value": "<string>",
															"description": {
																"content": "The default branch of the project",
																"type": "text/plain"
															}
														},
														{
															"key": "path",
															"value": "<string>",
															"description": {
																"content": "The path of the repository",
																"type": "text/plain"
															}
														},
														{
															"key": "description",
															"value": "<string>",
															"description": {
																"content": "The description of the project",
																"type": "text/plain"
															}
														},
														{
															"key": "issues_enabled",
															"value": "<boolean>",
															"description": {
																"content": "Flag indication if the issue tracker is enabled",
																"type": "text/plain"
															}
														},
														{
															"key": "merge_requests_enabled",
															"value": "<boolean>",
															"description": {
																"content": "Flag indication if merge requests are enabled",
																"type": "text/plain"
															}
														},
														{
															"key": "wiki_enabled",
															"value": "<boolean>",
															"description": {
																"content": "Flag indication if the wiki is enabled",
																"type": "text/plain"
															}
														},
														{
															"key": "builds_enabled",
															"value": "<boolean>",
															"description": {
																"content": "Flag indication if builds are enabled",
																"type": "text/plain"
															}
														},
														{
															"key": "snippets_enabled",
															"value": "<boolean>",
															"description": {
																"content": "Flag indication if snippets are enabled",
																"type": "text/plain"
															}
														},
														{
															"key": "shared_runners_enabled",
															"value": "<boolean>",
															"description": {
																"content": "Flag indication if shared runners are enabled for that project",
																"type": "text/plain"
															}
														},
														{
															"key": "container_registry_enabled",
															"value": "<boolean>",
															"description": {
																"content": "Flag indication if the container registry is enabled for that project",
																"type": "text/plain"
															}
														},
														{
															"key": "lfs_enabled",
															"value": "<boolean>",
															"description": {
																"content": "Flag indication if Git LFS is enabled for that project",
																"type": "text/plain"
															}
														},
														{
															"key": "public",
															"value": "<boolean>",
															"description": {
																"content": "Create a public project. The same as visibility_level = 20.",
																"type": "text/plain"
															}
														},
														{
															"key": "visibility_level",
															"value": "<integer>",
															"description": {
																"content": "Create a public project. The same as visibility_level = 20. (This can only be one of 0,10,20)",
																"type": "text/plain"
															}
														},
														{
															"key": "public_builds",
															"value": "<boolean>",
															"description": {
																"content": "Perform public builds",
																"type": "text/plain"
															}
														},
														{
															"key": "request_access_enabled",
															"value": "<boolean>",
															"description": {
																"content": "Allow users to request member access",
																"type": "text/plain"
															}
														},
														{
															"key": "only_allow_merge_if_build_succeeds",
															"value": "<boolean>",
															"description": {
																"content": "Only allow to merge if builds succeed",
																"type": "text/plain"
															}
														},
														{
															"key": "only_allow_merge_if_all_discussions_are_resolved",
															"value": "<boolean>",
															"description": {
																"content": "Only allow to merge if all discussions are resolved",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"archived\": \"non mollit sit\",\n \"avatar_url\": \"exercitation est Ut ullamco\",\n \"builds_enabled\": \"amet ad\",\n \"container_registry_enabled\": \"nulla eu culpa\",\n \"created_at\": \"id in ut\",\n \"creator_id\": \"ullamco Ut\",\n \"default_branch\": \"aliqua\",\n \"description\": \"Lorem irure qui\",\n \"forked_from_project\": {\n  \"http_url_to_repo\": \"Duis ex\",\n  \"id\": \"c\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"in\",\n  \"path\": \"cupidatat et laboris Excepteur\",\n  \"path_with_namespace\": \"pariatur\",\n  \"web_url\": \"velit\"\n },\n \"forks_count\": \"ex mollit Excepteur commodo\",\n \"http_url_to_repo\": \"quis enim aliqua\",\n \"id\": \"aliqua\",\n \"issues_enabled\": \"ullamco exerci\",\n \"last_activity_at\": \"Lorem irure esse ut\",\n \"lfs_enabled\": \"amet ea anim\",\n \"merge_requests_enabled\": \"dolor\",\n \"name\": \"elit voluptate qui ea\",\n \"name_with_namespace\": \"enim\",\n \"namespace\": {\n  \"id\": \"consectetur pariatur et minim\",\n  \"kind\": \"ut sunt in Lorem\",\n  \"name\": \"sunt\",\n  \"path\": \"incididunt tempor\"\n },\n \"only_allow_merge_if_all_discussions_are_resolved\": \"qui aliquip labore tempor\",\n \"only_allow_merge_if_build_succeeds\": \"a\",\n \"open_issues_count\": \"irure laboris\",\n \"owner\": {\n  \"avatar_url\": \"id ut\",\n  \"id\": \"cupidat\",\n  \"name\": \"ullamco laborum\",\n  \"state\": \"non dolore fugiat\",\n  \"username\": \"enim in deserunt voluptate labore\",\n  \"web_url\": \"Lorem officia non\"\n },\n \"path\": \"do elit voluptate\",\n \"path_with_namespace\": \"sint deserunt do tempor qui\",\n \"public\": \"qui laboris nulla\",\n \"public_builds\": \"sit anim\",\n \"request_access_enabled\": \"labore anim id sint veniam\",\n \"runners_token\": \"fugiat proident Ut\",\n \"shared_runners_enabled\": \"repr\",\n \"shared_with_groups\": \"eiusmod tempor nulla voluptate\",\n \"snippets_enabled\": \"veniam Lorem\",\n \"ssh_url_to_repo\": \"adipisicing velit cupidatat voluptate\",\n \"star_count\": \"reprehenderit non et pariatur ut\",\n \"statistics\": {\n  \"build_artifacts_size\": \"cupidatat\",\n  \"commit_count\": \"nostrud laboris\",\n  \"lfs_objects_size\": \"enim\",\n  \"repository_size\": \"adipisicing occaecat\",\n  \"storage_size\": \"proident r\"\n },\n \"tag_list\": \"deserunt in ullamco\",\n \"visibility_level\": \"in eiusmod velit\",\n \"web_url\": \"adipisicing magna\",\n \"wiki_enabled\": \"cupidatat reprehenderit\"\n}"
										}
									]
								},
								{
									"name": "Trigger a GitLab project build",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "token",
													"value": "<string>",
													"description": "The unique token of trigger"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/projects/:id/(ref/:ref/)trigger/builds",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												":id",
												"(ref",
												":ref",
												")trigger",
												"builds"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a project"
												},
												{
													"key": "ref",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The commit sha or name of a branch or tag"
												}
											]
										},
										"description": "Trigger a GitLab project build"
									},
									"response": [
										{
											"name": "Trigger a GitLab project build",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "token",
															"value": "<string>",
															"description": {
																"content": "The unique token of trigger",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/(ref/:ref/)trigger/builds?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"(ref",
														":ref",
														")trigger",
														"builds"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "ref"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"dolore esse\",\n \"variables\": \"consectetur pariatur ex sed\"\n}"
										}
									]
								},
								{
									"name": "Archive a project",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/projects/:id/archive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												":id",
												"archive"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a project"
												}
											]
										},
										"description": "Archive a project"
									},
									"response": [
										{
											"name": "Archive a project",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/archive?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"archive"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"archived\": \"non mollit sit\",\n \"avatar_url\": \"exercitation est Ut ullamco\",\n \"builds_enabled\": \"amet ad\",\n \"container_registry_enabled\": \"nulla eu culpa\",\n \"created_at\": \"id in ut\",\n \"creator_id\": \"ullamco Ut\",\n \"default_branch\": \"aliqua\",\n \"description\": \"Lorem irure qui\",\n \"forked_from_project\": {\n  \"http_url_to_repo\": \"Duis ex\",\n  \"id\": \"c\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"in\",\n  \"path\": \"cupidatat et laboris Excepteur\",\n  \"path_with_namespace\": \"pariatur\",\n  \"web_url\": \"velit\"\n },\n \"forks_count\": \"ex mollit Excepteur commodo\",\n \"http_url_to_repo\": \"quis enim aliqua\",\n \"id\": \"aliqua\",\n \"issues_enabled\": \"ullamco exerci\",\n \"last_activity_at\": \"Lorem irure esse ut\",\n \"lfs_enabled\": \"amet ea anim\",\n \"merge_requests_enabled\": \"dolor\",\n \"name\": \"elit voluptate qui ea\",\n \"name_with_namespace\": \"enim\",\n \"namespace\": {\n  \"id\": \"consectetur pariatur et minim\",\n  \"kind\": \"ut sunt in Lorem\",\n  \"name\": \"sunt\",\n  \"path\": \"incididunt tempor\"\n },\n \"only_allow_merge_if_all_discussions_are_resolved\": \"qui aliquip labore tempor\",\n \"only_allow_merge_if_build_succeeds\": \"a\",\n \"open_issues_count\": \"irure laboris\",\n \"owner\": {\n  \"avatar_url\": \"id ut\",\n  \"id\": \"cupidat\",\n  \"name\": \"ullamco laborum\",\n  \"state\": \"non dolore fugiat\",\n  \"username\": \"enim in deserunt voluptate labore\",\n  \"web_url\": \"Lorem officia non\"\n },\n \"path\": \"do elit voluptate\",\n \"path_with_namespace\": \"sint deserunt do tempor qui\",\n \"public\": \"qui laboris nulla\",\n \"public_builds\": \"sit anim\",\n \"request_access_enabled\": \"labore anim id sint veniam\",\n \"runners_token\": \"fugiat proident Ut\",\n \"shared_runners_enabled\": \"repr\",\n \"shared_with_groups\": \"eiusmod tempor nulla voluptate\",\n \"snippets_enabled\": \"veniam Lorem\",\n \"ssh_url_to_repo\": \"adipisicing velit cupidatat voluptate\",\n \"star_count\": \"reprehenderit non et pariatur ut\",\n \"statistics\": {\n  \"build_artifacts_size\": \"cupidatat\",\n  \"commit_count\": \"nostrud laboris\",\n  \"lfs_objects_size\": \"enim\",\n  \"repository_size\": \"adipisicing occaecat\",\n  \"storage_size\": \"proident r\"\n },\n \"tag_list\": \"deserunt in ullamco\",\n \"visibility_level\": \"in eiusmod velit\",\n \"web_url\": \"adipisicing magna\",\n \"wiki_enabled\": \"cupidatat reprehenderit\"\n}"
										}
									]
								},
								{
									"name": "Get events for a single project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/projects/:id/events?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												":id",
												"events"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a project"
												}
											]
										},
										"description": "Get events for a single project"
									},
									"response": [
										{
											"name": "Get events for a single project",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/events?page=<integer>&per_page=<integer>&private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"events"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														},
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action_name\": \"minim consectetur\",\n \"author\": {\n  \"avatar_url\": \"in nostrud laboris\",\n  \"id\": \"et do sed nostrud consectetur\",\n  \"name\": \"veniam in\",\n  \"state\": \"consequat\",\n  \"username\": \"Duis reprehenderit quis id\",\n  \"web_url\": \"sunt nulla cupidatat\"\n },\n \"author_id\": \"dolore in minim laborum\",\n \"author_username\": \"consectetur\",\n \"created_at\": \"consectetur sint culpa\",\n \"data\": \"Lorem dolore eiusmod\",\n \"note\": {\n  \"attachment\": \"exercitation incididunt consequat do\",\n  \"author\": {\n   \"avatar_url\": \"aute reprehenderit\",\n   \"id\": \"nisi in\",\n   \"name\": \"occaecat\",\n   \"state\": \"nulla\",\n   \"username\": \"ea mollit ullamco\",\n   \"web_url\": \"magna deserunt nisi dolor\"\n  },\n  \"body\": \"incididunt\",\n  \"created_at\": \"ipsum minim\",\n  \"downvote?\": \"sint Duis\",\n  \"id\": \"commodo\",\n  \"noteable_id\": \"quis Excep\",\n  \"noteable_type\": \"pariatur culpa\",\n  \"system\": \"aliquip sit\",\n  \"updated_at\": \"nisi\",\n  \"upvote?\": \"adipisicing\"\n },\n \"project_id\": \"reprehenderit ea magna aute\",\n \"target_id\": \"ullamco proident est\",\n \"target_title\": \"in consectetur dolore\",\n \"target_type\": \"ullamco elit dolor\",\n \"title\": \"do ex in\"\n}"
										}
									]
								},
								{
									"name": "Create a new pipeline",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "ref",
													"value": "<string>",
													"description": "Reference"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/projects/:id/pipeline",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												":id",
												"pipeline"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The project ID"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.14"
									},
									"response": [
										{
											"name": "Create a new pipeline",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "ref",
															"value": "<string>",
															"description": {
																"content": "Reference",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/pipeline?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"pipeline"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"before_sha\": \"minim sit irure\",\n \"committed_at\": \"velit laboris consectetur\",\n \"coverage\": \"sed id est\",\n \"created_at\": \"fugiat\",\n \"duration\": \"nisi Ut deserunt in\",\n \"finished_at\": \"anim cupidatat\",\n \"id\": \"deserunt Ut ipsum proident\",\n \"ref\": \"sed\",\n \"sha\": \"Lorem veniam\",\n \"started_at\": \"ipsum nulla mollit\",\n \"status\": \"reprehenderit ipsum\",\n \"tag\": \"id in culpa ut\",\n \"updated_at\": \"occaecat irure aliqu\",\n \"user\": {\n  \"avatar_url\": \"dolore exercitation elit\",\n  \"id\": \"non fugiat incididunt laboris nostrud\",\n  \"name\": \"laborum veniam id\",\n  \"state\": \"ut Ut\",\n  \"username\": \"amet aliquip consequat sint\",\n  \"web_url\": \"ipsum aliquip\"\n },\n \"yaml_errors\": \"cillum ut sed aliqua\"\n}"
										}
									]
								},
								{
									"name": "Post status to a commit",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "state",
													"value": "<string>",
													"description": "The state of the status (This can only be one of pending,running,success,failed,canceled)"
												},
												{
													"key": "ref",
													"value": "<string>",
													"description": "The ref"
												},
												{
													"key": "target_url",
													"value": "<string>",
													"description": "The target URL to associate with this status"
												},
												{
													"key": "description",
													"value": "<string>",
													"description": "A short description of the status"
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "A string label to differentiate this status from the status of other systems. Default: \"default\""
												},
												{
													"key": "context",
													"value": "<string>",
													"description": "A string label to differentiate this status from the status of other systems. Default: \"default\""
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/projects/:id/statuses/:sha",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												":id",
												"statuses",
												":sha"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a project"
												},
												{
													"key": "sha",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The commit hash"
												}
											]
										},
										"description": "Post status to a commit"
									},
									"response": [
										{
											"name": "Post status to a commit",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "state",
															"value": "<string>",
															"description": {
																"content": "The state of the status (This can only be one of pending,running,success,failed,canceled)",
																"type": "text/plain"
															}
														},
														{
															"key": "ref",
															"value": "<string>",
															"description": {
																"content": "The ref",
																"type": "text/plain"
															}
														},
														{
															"key": "target_url",
															"value": "<string>",
															"description": {
																"content": "The target URL to associate with this status",
																"type": "text/plain"
															}
														},
														{
															"key": "description",
															"value": "<string>",
															"description": {
																"content": "A short description of the status",
																"type": "text/plain"
															}
														},
														{
															"key": "name",
															"value": "<string>",
															"description": {
																"content": "A string label to differentiate this status from the status of other systems. Default: \"default\"",
																"type": "text/plain"
															}
														},
														{
															"key": "context",
															"value": "<string>",
															"description": {
																"content": "A string label to differentiate this status from the status of other systems. Default: \"default\"",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/statuses/:sha?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"statuses",
														":sha"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "sha"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"allow_failure\": \"ut mollit\",\n \"author\": {\n  \"avatar_url\": \"elit incididunt\",\n  \"id\": \"amet dolore Excepteur anim\",\n  \"name\": \"eu\",\n  \"state\": \"sint consequat\",\n  \"username\": \"irure cupidatat cillum\",\n  \"web_url\": \"occaecat in enim velit sunt\"\n },\n \"created_at\": \"ipsum c\",\n \"description\": \"irure ut dolore dolor\",\n \"finished_at\": \"eiusmod ex laborum dolor\",\n \"id\": \"laborum minim\",\n \"name\": \"anim enim occaecat ad se\",\n \"ref\": \"off\",\n \"sha\": \"cillum amet\",\n \"started_at\": \"exercitati\",\n \"status\": \"deserunt pariatur Ut ex\",\n \"target_url\": \"elit enim\"\n}"
										}
									]
								},
								{
									"name": "Unarchive a project",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/projects/:id/unarchive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												":id",
												"unarchive"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a project"
												}
											]
										},
										"description": "Unarchive a project"
									},
									"response": [
										{
											"name": "Unarchive a project",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/unarchive?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"unarchive"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"archived\": \"non mollit sit\",\n \"avatar_url\": \"exercitation est Ut ullamco\",\n \"builds_enabled\": \"amet ad\",\n \"container_registry_enabled\": \"nulla eu culpa\",\n \"created_at\": \"id in ut\",\n \"creator_id\": \"ullamco Ut\",\n \"default_branch\": \"aliqua\",\n \"description\": \"Lorem irure qui\",\n \"forked_from_project\": {\n  \"http_url_to_repo\": \"Duis ex\",\n  \"id\": \"c\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"in\",\n  \"path\": \"cupidatat et laboris Excepteur\",\n  \"path_with_namespace\": \"pariatur\",\n  \"web_url\": \"velit\"\n },\n \"forks_count\": \"ex mollit Excepteur commodo\",\n \"http_url_to_repo\": \"quis enim aliqua\",\n \"id\": \"aliqua\",\n \"issues_enabled\": \"ullamco exerci\",\n \"last_activity_at\": \"Lorem irure esse ut\",\n \"lfs_enabled\": \"amet ea anim\",\n \"merge_requests_enabled\": \"dolor\",\n \"name\": \"elit voluptate qui ea\",\n \"name_with_namespace\": \"enim\",\n \"namespace\": {\n  \"id\": \"consectetur pariatur et minim\",\n  \"kind\": \"ut sunt in Lorem\",\n  \"name\": \"sunt\",\n  \"path\": \"incididunt tempor\"\n },\n \"only_allow_merge_if_all_discussions_are_resolved\": \"qui aliquip labore tempor\",\n \"only_allow_merge_if_build_succeeds\": \"a\",\n \"open_issues_count\": \"irure laboris\",\n \"owner\": {\n  \"avatar_url\": \"id ut\",\n  \"id\": \"cupidat\",\n  \"name\": \"ullamco laborum\",\n  \"state\": \"non dolore fugiat\",\n  \"username\": \"enim in deserunt voluptate labore\",\n  \"web_url\": \"Lorem officia non\"\n },\n \"path\": \"do elit voluptate\",\n \"path_with_namespace\": \"sint deserunt do tempor qui\",\n \"public\": \"qui laboris nulla\",\n \"public_builds\": \"sit anim\",\n \"request_access_enabled\": \"labore anim id sint veniam\",\n \"runners_token\": \"fugiat proident Ut\",\n \"shared_runners_enabled\": \"repr\",\n \"shared_with_groups\": \"eiusmod tempor nulla voluptate\",\n \"snippets_enabled\": \"veniam Lorem\",\n \"ssh_url_to_repo\": \"adipisicing velit cupidatat voluptate\",\n \"star_count\": \"reprehenderit non et pariatur ut\",\n \"statistics\": {\n  \"build_artifacts_size\": \"cupidatat\",\n  \"commit_count\": \"nostrud laboris\",\n  \"lfs_objects_size\": \"enim\",\n  \"repository_size\": \"adipisicing occaecat\",\n  \"storage_size\": \"proident r\"\n },\n \"tag_list\": \"deserunt in ullamco\",\n \"visibility_level\": \"in eiusmod velit\",\n \"web_url\": \"adipisicing magna\",\n \"wiki_enabled\": \"cupidatat reprehenderit\"\n}"
										}
									]
								},
								{
									"name": "Upload a file",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "<binary>",
													"description": "The file to be uploaded",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/projects/:id/uploads",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												":id",
												"uploads"
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a project"
												}
											]
										},
										"description": "Upload a file"
									},
									"response": [
										{
											"name": "Upload a file",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "<binary>",
															"description": {
																"content": "The file to be uploaded",
																"type": "text/plain"
															},
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/uploads?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"uploads"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get the users list of a project",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/projects/:id/users?search=<string>&page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												":id",
												"users"
											],
											"query": [
												{
													"key": "search",
													"value": "<string>",
													"description": "Return list of users matching the search criteria"
												},
												{
													"key": "page",
													"value": "<integer>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The ID of a project"
												}
											]
										},
										"description": "Get the users list of a project"
									},
									"response": [
										{
											"name": "Get the users list of a project",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/projects/:id/users?search=<string>&page=<integer>&per_page=<integer>&private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"projects",
														":id",
														"users"
													],
													"query": [
														{
															"key": "search",
															"value": "<string>"
														},
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														},
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"avatar_url\": \"cillum aliqua mollit\",\n \"id\": \"reprehenderit laborum ipsum sit ad\",\n \"name\": \"fugiat\",\n \"state\": \"reprehenderit officia minim culpa\",\n \"username\": \"esse ut\",\n \"web_url\": \"irure commodo\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get a projects list for authenticated user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/projects?order_by=created_at&sort=desc&archived=<boolean>&visibility=<string>&search=<string>&page=<integer>&per_page=<integer>&simple=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"projects"
									],
									"query": [
										{
											"key": "order_by",
											"value": "created_at",
											"description": "Return projects ordered by field"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Return projects sorted in ascending and descending order"
										},
										{
											"key": "archived",
											"value": "<boolean>",
											"description": "Limit by archived status"
										},
										{
											"key": "visibility",
											"value": "<string>",
											"description": "Limit by visibility"
										},
										{
											"key": "search",
											"value": "<string>",
											"description": "Return list of authorized projects matching the search criteria"
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										},
										{
											"key": "simple",
											"value": "<boolean>",
											"description": "Return only the ID, URL, name, and path of each project"
										}
									]
								},
								"description": "Get a projects list for authenticated user"
							},
							"response": [
								{
									"name": "Get a projects list for authenticated user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/projects?order_by=created_at&sort=desc&archived=<boolean>&visibility=<string>&search=<string>&page=<integer>&per_page=<integer>&simple=<boolean>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects"
											],
											"query": [
												{
													"key": "order_by",
													"value": "created_at"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "archived",
													"value": "<boolean>"
												},
												{
													"key": "visibility",
													"value": "<string>"
												},
												{
													"key": "search",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "simple",
													"value": "<boolean>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"http_url_to_repo\": \"in in sed \",\n \"id\": \"adipisici\",\n \"name\": \"tempor cil\",\n \"name_with_namespace\": \"veniam\",\n \"path\": \"mollit ex pariatur\",\n \"path_with_namespace\": \"esse sint dolore\",\n \"web_url\": \"ipsum tempor\"\n}"
								}
							]
						},
						{
							"name": "Create new project",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the project"
										},
										{
											"key": "path",
											"value": "<string>",
											"description": "The path of the repository"
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "The description of the project"
										},
										{
											"key": "issues_enabled",
											"value": "<boolean>",
											"description": "Flag indication if the issue tracker is enabled"
										},
										{
											"key": "merge_requests_enabled",
											"value": "<boolean>",
											"description": "Flag indication if merge requests are enabled"
										},
										{
											"key": "wiki_enabled",
											"value": "<boolean>",
											"description": "Flag indication if the wiki is enabled"
										},
										{
											"key": "builds_enabled",
											"value": "<boolean>",
											"description": "Flag indication if builds are enabled"
										},
										{
											"key": "snippets_enabled",
											"value": "<boolean>",
											"description": "Flag indication if snippets are enabled"
										},
										{
											"key": "shared_runners_enabled",
											"value": "<boolean>",
											"description": "Flag indication if shared runners are enabled for that project"
										},
										{
											"key": "container_registry_enabled",
											"value": "<boolean>",
											"description": "Flag indication if the container registry is enabled for that project"
										},
										{
											"key": "lfs_enabled",
											"value": "<boolean>",
											"description": "Flag indication if Git LFS is enabled for that project"
										},
										{
											"key": "public",
											"value": "<boolean>",
											"description": "Create a public project. The same as visibility_level = 20."
										},
										{
											"key": "visibility_level",
											"value": "<integer>",
											"description": "Create a public project. The same as visibility_level = 20. (This can only be one of 0,10,20)"
										},
										{
											"key": "public_builds",
											"value": "<boolean>",
											"description": "Perform public builds"
										},
										{
											"key": "request_access_enabled",
											"value": "<boolean>",
											"description": "Allow users to request member access"
										},
										{
											"key": "only_allow_merge_if_build_succeeds",
											"value": "<boolean>",
											"description": "Only allow to merge if builds succeed"
										},
										{
											"key": "only_allow_merge_if_all_discussions_are_resolved",
											"value": "<boolean>",
											"description": "Only allow to merge if all discussions are resolved"
										},
										{
											"key": "namespace_id",
											"value": "<integer>",
											"description": "Namespace ID for the new project. Default to the user namespace."
										},
										{
											"key": "import_url",
											"value": "<string>",
											"description": "URL from which the project is imported"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v3/projects",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"projects"
									]
								},
								"description": "Create new project"
							},
							"response": [
								{
									"name": "Create new project",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "<string>",
													"description": {
														"content": "The name of the project",
														"type": "text/plain"
													}
												},
												{
													"key": "path",
													"value": "<string>",
													"description": {
														"content": "The path of the repository",
														"type": "text/plain"
													}
												},
												{
													"key": "description",
													"value": "<string>",
													"description": {
														"content": "The description of the project",
														"type": "text/plain"
													}
												},
												{
													"key": "issues_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if the issue tracker is enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "merge_requests_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if merge requests are enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "wiki_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if the wiki is enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "builds_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if builds are enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "snippets_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if snippets are enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "shared_runners_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if shared runners are enabled for that project",
														"type": "text/plain"
													}
												},
												{
													"key": "container_registry_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if the container registry is enabled for that project",
														"type": "text/plain"
													}
												},
												{
													"key": "lfs_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if Git LFS is enabled for that project",
														"type": "text/plain"
													}
												},
												{
													"key": "public",
													"value": "<boolean>",
													"description": {
														"content": "Create a public project. The same as visibility_level = 20.",
														"type": "text/plain"
													}
												},
												{
													"key": "visibility_level",
													"value": "<integer>",
													"description": {
														"content": "Create a public project. The same as visibility_level = 20. (This can only be one of 0,10,20)",
														"type": "text/plain"
													}
												},
												{
													"key": "public_builds",
													"value": "<boolean>",
													"description": {
														"content": "Perform public builds",
														"type": "text/plain"
													}
												},
												{
													"key": "request_access_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Allow users to request member access",
														"type": "text/plain"
													}
												},
												{
													"key": "only_allow_merge_if_build_succeeds",
													"value": "<boolean>",
													"description": {
														"content": "Only allow to merge if builds succeed",
														"type": "text/plain"
													}
												},
												{
													"key": "only_allow_merge_if_all_discussions_are_resolved",
													"value": "<boolean>",
													"description": {
														"content": "Only allow to merge if all discussions are resolved",
														"type": "text/plain"
													}
												},
												{
													"key": "namespace_id",
													"value": "<integer>",
													"description": {
														"content": "Namespace ID for the new project. Default to the user namespace.",
														"type": "text/plain"
													}
												},
												{
													"key": "import_url",
													"value": "<string>",
													"description": {
														"content": "URL from which the project is imported",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/projects?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"archived\": \"non mollit sit\",\n \"avatar_url\": \"exercitation est Ut ullamco\",\n \"builds_enabled\": \"amet ad\",\n \"container_registry_enabled\": \"nulla eu culpa\",\n \"created_at\": \"id in ut\",\n \"creator_id\": \"ullamco Ut\",\n \"default_branch\": \"aliqua\",\n \"description\": \"Lorem irure qui\",\n \"forked_from_project\": {\n  \"http_url_to_repo\": \"Duis ex\",\n  \"id\": \"c\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"in\",\n  \"path\": \"cupidatat et laboris Excepteur\",\n  \"path_with_namespace\": \"pariatur\",\n  \"web_url\": \"velit\"\n },\n \"forks_count\": \"ex mollit Excepteur commodo\",\n \"http_url_to_repo\": \"quis enim aliqua\",\n \"id\": \"aliqua\",\n \"issues_enabled\": \"ullamco exerci\",\n \"last_activity_at\": \"Lorem irure esse ut\",\n \"lfs_enabled\": \"amet ea anim\",\n \"merge_requests_enabled\": \"dolor\",\n \"name\": \"elit voluptate qui ea\",\n \"name_with_namespace\": \"enim\",\n \"namespace\": {\n  \"id\": \"consectetur pariatur et minim\",\n  \"kind\": \"ut sunt in Lorem\",\n  \"name\": \"sunt\",\n  \"path\": \"incididunt tempor\"\n },\n \"only_allow_merge_if_all_discussions_are_resolved\": \"qui aliquip labore tempor\",\n \"only_allow_merge_if_build_succeeds\": \"a\",\n \"open_issues_count\": \"irure laboris\",\n \"owner\": {\n  \"avatar_url\": \"id ut\",\n  \"id\": \"cupidat\",\n  \"name\": \"ullamco laborum\",\n  \"state\": \"non dolore fugiat\",\n  \"username\": \"enim in deserunt voluptate labore\",\n  \"web_url\": \"Lorem officia non\"\n },\n \"path\": \"do elit voluptate\",\n \"path_with_namespace\": \"sint deserunt do tempor qui\",\n \"public\": \"qui laboris nulla\",\n \"public_builds\": \"sit anim\",\n \"request_access_enabled\": \"labore anim id sint veniam\",\n \"runners_token\": \"fugiat proident Ut\",\n \"shared_runners_enabled\": \"repr\",\n \"shared_with_groups\": \"eiusmod tempor nulla voluptate\",\n \"snippets_enabled\": \"veniam Lorem\",\n \"ssh_url_to_repo\": \"adipisicing velit cupidatat voluptate\",\n \"star_count\": \"reprehenderit non et pariatur ut\",\n \"statistics\": {\n  \"build_artifacts_size\": \"cupidatat\",\n  \"commit_count\": \"nostrud laboris\",\n  \"lfs_objects_size\": \"enim\",\n  \"repository_size\": \"adipisicing occaecat\",\n  \"storage_size\": \"proident r\"\n },\n \"tag_list\": \"deserunt in ullamco\",\n \"visibility_level\": \"in eiusmod velit\",\n \"web_url\": \"adipisicing magna\",\n \"wiki_enabled\": \"cupidatat reprehenderit\"\n}"
								}
							]
						},
						{
							"name": "Get all projects for admin user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/projects/all?order_by=created_at&sort=desc&archived=<boolean>&visibility=<string>&search=<string>&page=<integer>&per_page=<integer>&simple=<boolean>&statistics=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"projects",
										"all"
									],
									"query": [
										{
											"key": "order_by",
											"value": "created_at",
											"description": "Return projects ordered by field"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Return projects sorted in ascending and descending order"
										},
										{
											"key": "archived",
											"value": "<boolean>",
											"description": "Limit by archived status"
										},
										{
											"key": "visibility",
											"value": "<string>",
											"description": "Limit by visibility"
										},
										{
											"key": "search",
											"value": "<string>",
											"description": "Return list of authorized projects matching the search criteria"
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										},
										{
											"key": "simple",
											"value": "<boolean>",
											"description": "Return only the ID, URL, name, and path of each project"
										},
										{
											"key": "statistics",
											"value": "<boolean>",
											"description": "Include project statistics"
										}
									]
								},
								"description": "Get all projects for admin user"
							},
							"response": [
								{
									"name": "Get all projects for admin user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/projects/all?order_by=created_at&sort=desc&archived=<boolean>&visibility=<string>&search=<string>&page=<integer>&per_page=<integer>&simple=<boolean>&statistics=<boolean>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												"all"
											],
											"query": [
												{
													"key": "order_by",
													"value": "created_at"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "archived",
													"value": "<boolean>"
												},
												{
													"key": "visibility",
													"value": "<string>"
												},
												{
													"key": "search",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "simple",
													"value": "<boolean>"
												},
												{
													"key": "statistics",
													"value": "<boolean>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"http_url_to_repo\": \"in in sed \",\n \"id\": \"adipisici\",\n \"name\": \"tempor cil\",\n \"name_with_namespace\": \"veniam\",\n \"path\": \"mollit ex pariatur\",\n \"path_with_namespace\": \"esse sint dolore\",\n \"web_url\": \"ipsum tempor\"\n}"
								}
							]
						},
						{
							"name": "Fork new project for the current user or provided namespace.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "namespace",
											"value": "<string>",
											"description": "The ID or name of the namespace that the project will be forked into"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v3/projects/fork/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"projects",
										"fork",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The ID of a project"
										}
									]
								},
								"description": "Fork new project for the current user or provided namespace."
							},
							"response": [
								{
									"name": "Fork new project for the current user or provided namespace.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "namespace",
													"value": "<string>",
													"description": {
														"content": "The ID or name of the namespace that the project will be forked into",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/projects/fork/:id?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												"fork",
												":id"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"archived\": \"non mollit sit\",\n \"avatar_url\": \"exercitation est Ut ullamco\",\n \"builds_enabled\": \"amet ad\",\n \"container_registry_enabled\": \"nulla eu culpa\",\n \"created_at\": \"id in ut\",\n \"creator_id\": \"ullamco Ut\",\n \"default_branch\": \"aliqua\",\n \"description\": \"Lorem irure qui\",\n \"forked_from_project\": {\n  \"http_url_to_repo\": \"Duis ex\",\n  \"id\": \"c\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"in\",\n  \"path\": \"cupidatat et laboris Excepteur\",\n  \"path_with_namespace\": \"pariatur\",\n  \"web_url\": \"velit\"\n },\n \"forks_count\": \"ex mollit Excepteur commodo\",\n \"http_url_to_repo\": \"quis enim aliqua\",\n \"id\": \"aliqua\",\n \"issues_enabled\": \"ullamco exerci\",\n \"last_activity_at\": \"Lorem irure esse ut\",\n \"lfs_enabled\": \"amet ea anim\",\n \"merge_requests_enabled\": \"dolor\",\n \"name\": \"elit voluptate qui ea\",\n \"name_with_namespace\": \"enim\",\n \"namespace\": {\n  \"id\": \"consectetur pariatur et minim\",\n  \"kind\": \"ut sunt in Lorem\",\n  \"name\": \"sunt\",\n  \"path\": \"incididunt tempor\"\n },\n \"only_allow_merge_if_all_discussions_are_resolved\": \"qui aliquip labore tempor\",\n \"only_allow_merge_if_build_succeeds\": \"a\",\n \"open_issues_count\": \"irure laboris\",\n \"owner\": {\n  \"avatar_url\": \"id ut\",\n  \"id\": \"cupidat\",\n  \"name\": \"ullamco laborum\",\n  \"state\": \"non dolore fugiat\",\n  \"username\": \"enim in deserunt voluptate labore\",\n  \"web_url\": \"Lorem officia non\"\n },\n \"path\": \"do elit voluptate\",\n \"path_with_namespace\": \"sint deserunt do tempor qui\",\n \"public\": \"qui laboris nulla\",\n \"public_builds\": \"sit anim\",\n \"request_access_enabled\": \"labore anim id sint veniam\",\n \"runners_token\": \"fugiat proident Ut\",\n \"shared_runners_enabled\": \"repr\",\n \"shared_with_groups\": \"eiusmod tempor nulla voluptate\",\n \"snippets_enabled\": \"veniam Lorem\",\n \"ssh_url_to_repo\": \"adipisicing velit cupidatat voluptate\",\n \"star_count\": \"reprehenderit non et pariatur ut\",\n \"statistics\": {\n  \"build_artifacts_size\": \"cupidatat\",\n  \"commit_count\": \"nostrud laboris\",\n  \"lfs_objects_size\": \"enim\",\n  \"repository_size\": \"adipisicing occaecat\",\n  \"storage_size\": \"proident r\"\n },\n \"tag_list\": \"deserunt in ullamco\",\n \"visibility_level\": \"in eiusmod velit\",\n \"web_url\": \"adipisicing magna\",\n \"wiki_enabled\": \"cupidatat reprehenderit\"\n}"
								}
							]
						},
						{
							"name": "Get an owned projects list for authenticated user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/projects/owned?order_by=created_at&sort=desc&archived=<boolean>&visibility=<string>&search=<string>&page=<integer>&per_page=<integer>&simple=<boolean>&statistics=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"projects",
										"owned"
									],
									"query": [
										{
											"key": "order_by",
											"value": "created_at",
											"description": "Return projects ordered by field"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Return projects sorted in ascending and descending order"
										},
										{
											"key": "archived",
											"value": "<boolean>",
											"description": "Limit by archived status"
										},
										{
											"key": "visibility",
											"value": "<string>",
											"description": "Limit by visibility"
										},
										{
											"key": "search",
											"value": "<string>",
											"description": "Return list of authorized projects matching the search criteria"
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										},
										{
											"key": "simple",
											"value": "<boolean>",
											"description": "Return only the ID, URL, name, and path of each project"
										},
										{
											"key": "statistics",
											"value": "<boolean>",
											"description": "Include project statistics"
										}
									]
								},
								"description": "Get an owned projects list for authenticated user"
							},
							"response": [
								{
									"name": "Get an owned projects list for authenticated user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/projects/owned?order_by=created_at&sort=desc&archived=<boolean>&visibility=<string>&search=<string>&page=<integer>&per_page=<integer>&simple=<boolean>&statistics=<boolean>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												"owned"
											],
											"query": [
												{
													"key": "order_by",
													"value": "created_at"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "archived",
													"value": "<boolean>"
												},
												{
													"key": "visibility",
													"value": "<string>"
												},
												{
													"key": "search",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "simple",
													"value": "<boolean>"
												},
												{
													"key": "statistics",
													"value": "<boolean>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"http_url_to_repo\": \"in in sed \",\n \"id\": \"adipisici\",\n \"name\": \"tempor cil\",\n \"name_with_namespace\": \"veniam\",\n \"path\": \"mollit ex pariatur\",\n \"path_with_namespace\": \"esse sint dolore\",\n \"web_url\": \"ipsum tempor\"\n}"
								}
							]
						},
						{
							"name": "Search for projects the current user has access to",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/projects/search/:query?order_by=created_at&sort=desc&page=<integer>&per_page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"projects",
										"search",
										":query"
									],
									"query": [
										{
											"key": "order_by",
											"value": "created_at",
											"description": "Return projects ordered by field"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Return projects sorted in ascending and descending order"
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										}
									],
									"variable": [
										{
											"key": "query",
											"value": "<string>",
											"type": "string",
											"description": "(Required) The project name to be searched"
										}
									]
								},
								"description": "Search for projects the current user has access to"
							},
							"response": [
								{
									"name": "Search for projects the current user has access to",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/projects/search/:query?order_by=created_at&sort=desc&page=<integer>&per_page=<integer>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												"search",
												":query"
											],
											"query": [
												{
													"key": "order_by",
													"value": "created_at"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "query"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"archived\": \"non mollit sit\",\n \"avatar_url\": \"exercitation est Ut ullamco\",\n \"builds_enabled\": \"amet ad\",\n \"container_registry_enabled\": \"nulla eu culpa\",\n \"created_at\": \"id in ut\",\n \"creator_id\": \"ullamco Ut\",\n \"default_branch\": \"aliqua\",\n \"description\": \"Lorem irure qui\",\n \"forked_from_project\": {\n  \"http_url_to_repo\": \"Duis ex\",\n  \"id\": \"c\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"in\",\n  \"path\": \"cupidatat et laboris Excepteur\",\n  \"path_with_namespace\": \"pariatur\",\n  \"web_url\": \"velit\"\n },\n \"forks_count\": \"ex mollit Excepteur commodo\",\n \"http_url_to_repo\": \"quis enim aliqua\",\n \"id\": \"aliqua\",\n \"issues_enabled\": \"ullamco exerci\",\n \"last_activity_at\": \"Lorem irure esse ut\",\n \"lfs_enabled\": \"amet ea anim\",\n \"merge_requests_enabled\": \"dolor\",\n \"name\": \"elit voluptate qui ea\",\n \"name_with_namespace\": \"enim\",\n \"namespace\": {\n  \"id\": \"consectetur pariatur et minim\",\n  \"kind\": \"ut sunt in Lorem\",\n  \"name\": \"sunt\",\n  \"path\": \"incididunt tempor\"\n },\n \"only_allow_merge_if_all_discussions_are_resolved\": \"qui aliquip labore tempor\",\n \"only_allow_merge_if_build_succeeds\": \"a\",\n \"open_issues_count\": \"irure laboris\",\n \"owner\": {\n  \"avatar_url\": \"id ut\",\n  \"id\": \"cupidat\",\n  \"name\": \"ullamco laborum\",\n  \"state\": \"non dolore fugiat\",\n  \"username\": \"enim in deserunt voluptate labore\",\n  \"web_url\": \"Lorem officia non\"\n },\n \"path\": \"do elit voluptate\",\n \"path_with_namespace\": \"sint deserunt do tempor qui\",\n \"public\": \"qui laboris nulla\",\n \"public_builds\": \"sit anim\",\n \"request_access_enabled\": \"labore anim id sint veniam\",\n \"runners_token\": \"fugiat proident Ut\",\n \"shared_runners_enabled\": \"repr\",\n \"shared_with_groups\": \"eiusmod tempor nulla voluptate\",\n \"snippets_enabled\": \"veniam Lorem\",\n \"ssh_url_to_repo\": \"adipisicing velit cupidatat voluptate\",\n \"star_count\": \"reprehenderit non et pariatur ut\",\n \"statistics\": {\n  \"build_artifacts_size\": \"cupidatat\",\n  \"commit_count\": \"nostrud laboris\",\n  \"lfs_objects_size\": \"enim\",\n  \"repository_size\": \"adipisicing occaecat\",\n  \"storage_size\": \"proident r\"\n },\n \"tag_list\": \"deserunt in ullamco\",\n \"visibility_level\": \"in eiusmod velit\",\n \"web_url\": \"adipisicing magna\",\n \"wiki_enabled\": \"cupidatat reprehenderit\"\n}"
								}
							]
						},
						{
							"name": "Gets starred project for the authenticated user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/projects/starred?order_by=created_at&sort=desc&archived=<boolean>&visibility=<string>&search=<string>&page=<integer>&per_page=<integer>&simple=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"projects",
										"starred"
									],
									"query": [
										{
											"key": "order_by",
											"value": "created_at",
											"description": "Return projects ordered by field"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Return projects sorted in ascending and descending order"
										},
										{
											"key": "archived",
											"value": "<boolean>",
											"description": "Limit by archived status"
										},
										{
											"key": "visibility",
											"value": "<string>",
											"description": "Limit by visibility"
										},
										{
											"key": "search",
											"value": "<string>",
											"description": "Return list of authorized projects matching the search criteria"
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										},
										{
											"key": "simple",
											"value": "<boolean>",
											"description": "Return only the ID, URL, name, and path of each project"
										}
									]
								},
								"description": "Gets starred project for the authenticated user"
							},
							"response": [
								{
									"name": "Gets starred project for the authenticated user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/projects/starred?order_by=created_at&sort=desc&archived=<boolean>&visibility=<string>&search=<string>&page=<integer>&per_page=<integer>&simple=<boolean>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												"starred"
											],
											"query": [
												{
													"key": "order_by",
													"value": "created_at"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "archived",
													"value": "<boolean>"
												},
												{
													"key": "visibility",
													"value": "<string>"
												},
												{
													"key": "search",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "simple",
													"value": "<boolean>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"http_url_to_repo\": \"in in sed \",\n \"id\": \"adipisici\",\n \"name\": \"tempor cil\",\n \"name_with_namespace\": \"veniam\",\n \"path\": \"mollit ex pariatur\",\n \"path_with_namespace\": \"esse sint dolore\",\n \"web_url\": \"ipsum tempor\"\n}"
								}
							]
						},
						{
							"name": "Create new project for a specified user. Only available to admin users.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the project"
										},
										{
											"key": "default_branch",
											"value": "<string>",
											"description": "The default branch of the project"
										},
										{
											"key": "description",
											"value": "<string>",
											"description": "The description of the project"
										},
										{
											"key": "issues_enabled",
											"value": "<boolean>",
											"description": "Flag indication if the issue tracker is enabled"
										},
										{
											"key": "merge_requests_enabled",
											"value": "<boolean>",
											"description": "Flag indication if merge requests are enabled"
										},
										{
											"key": "wiki_enabled",
											"value": "<boolean>",
											"description": "Flag indication if the wiki is enabled"
										},
										{
											"key": "builds_enabled",
											"value": "<boolean>",
											"description": "Flag indication if builds are enabled"
										},
										{
											"key": "snippets_enabled",
											"value": "<boolean>",
											"description": "Flag indication if snippets are enabled"
										},
										{
											"key": "shared_runners_enabled",
											"value": "<boolean>",
											"description": "Flag indication if shared runners are enabled for that project"
										},
										{
											"key": "container_registry_enabled",
											"value": "<boolean>",
											"description": "Flag indication if the container registry is enabled for that project"
										},
										{
											"key": "lfs_enabled",
											"value": "<boolean>",
											"description": "Flag indication if Git LFS is enabled for that project"
										},
										{
											"key": "public",
											"value": "<boolean>",
											"description": "Create a public project. The same as visibility_level = 20."
										},
										{
											"key": "visibility_level",
											"value": "<integer>",
											"description": "Create a public project. The same as visibility_level = 20. (This can only be one of 0,10,20)"
										},
										{
											"key": "public_builds",
											"value": "<boolean>",
											"description": "Perform public builds"
										},
										{
											"key": "request_access_enabled",
											"value": "<boolean>",
											"description": "Allow users to request member access"
										},
										{
											"key": "only_allow_merge_if_build_succeeds",
											"value": "<boolean>",
											"description": "Only allow to merge if builds succeed"
										},
										{
											"key": "only_allow_merge_if_all_discussions_are_resolved",
											"value": "<boolean>",
											"description": "Only allow to merge if all discussions are resolved"
										},
										{
											"key": "namespace_id",
											"value": "<integer>",
											"description": "Namespace ID for the new project. Default to the user namespace."
										},
										{
											"key": "import_url",
											"value": "<string>",
											"description": "URL from which the project is imported"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v3/projects/user/:user_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"projects",
										"user",
										":user_id"
									],
									"variable": [
										{
											"key": "user_id",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of a user"
										}
									]
								},
								"description": "Create new project for a specified user. Only available to admin users."
							},
							"response": [
								{
									"name": "Create new project for a specified user. Only available to admin users.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "<string>",
													"description": {
														"content": "The name of the project",
														"type": "text/plain"
													}
												},
												{
													"key": "default_branch",
													"value": "<string>",
													"description": {
														"content": "The default branch of the project",
														"type": "text/plain"
													}
												},
												{
													"key": "description",
													"value": "<string>",
													"description": {
														"content": "The description of the project",
														"type": "text/plain"
													}
												},
												{
													"key": "issues_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if the issue tracker is enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "merge_requests_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if merge requests are enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "wiki_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if the wiki is enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "builds_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if builds are enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "snippets_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if snippets are enabled",
														"type": "text/plain"
													}
												},
												{
													"key": "shared_runners_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if shared runners are enabled for that project",
														"type": "text/plain"
													}
												},
												{
													"key": "container_registry_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if the container registry is enabled for that project",
														"type": "text/plain"
													}
												},
												{
													"key": "lfs_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Flag indication if Git LFS is enabled for that project",
														"type": "text/plain"
													}
												},
												{
													"key": "public",
													"value": "<boolean>",
													"description": {
														"content": "Create a public project. The same as visibility_level = 20.",
														"type": "text/plain"
													}
												},
												{
													"key": "visibility_level",
													"value": "<integer>",
													"description": {
														"content": "Create a public project. The same as visibility_level = 20. (This can only be one of 0,10,20)",
														"type": "text/plain"
													}
												},
												{
													"key": "public_builds",
													"value": "<boolean>",
													"description": {
														"content": "Perform public builds",
														"type": "text/plain"
													}
												},
												{
													"key": "request_access_enabled",
													"value": "<boolean>",
													"description": {
														"content": "Allow users to request member access",
														"type": "text/plain"
													}
												},
												{
													"key": "only_allow_merge_if_build_succeeds",
													"value": "<boolean>",
													"description": {
														"content": "Only allow to merge if builds succeed",
														"type": "text/plain"
													}
												},
												{
													"key": "only_allow_merge_if_all_discussions_are_resolved",
													"value": "<boolean>",
													"description": {
														"content": "Only allow to merge if all discussions are resolved",
														"type": "text/plain"
													}
												},
												{
													"key": "namespace_id",
													"value": "<integer>",
													"description": {
														"content": "Namespace ID for the new project. Default to the user namespace.",
														"type": "text/plain"
													}
												},
												{
													"key": "import_url",
													"value": "<string>",
													"description": {
														"content": "URL from which the project is imported",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/projects/user/:user_id?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												"user",
												":user_id"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "user_id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"archived\": \"non mollit sit\",\n \"avatar_url\": \"exercitation est Ut ullamco\",\n \"builds_enabled\": \"amet ad\",\n \"container_registry_enabled\": \"nulla eu culpa\",\n \"created_at\": \"id in ut\",\n \"creator_id\": \"ullamco Ut\",\n \"default_branch\": \"aliqua\",\n \"description\": \"Lorem irure qui\",\n \"forked_from_project\": {\n  \"http_url_to_repo\": \"Duis ex\",\n  \"id\": \"c\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"in\",\n  \"path\": \"cupidatat et laboris Excepteur\",\n  \"path_with_namespace\": \"pariatur\",\n  \"web_url\": \"velit\"\n },\n \"forks_count\": \"ex mollit Excepteur commodo\",\n \"http_url_to_repo\": \"quis enim aliqua\",\n \"id\": \"aliqua\",\n \"issues_enabled\": \"ullamco exerci\",\n \"last_activity_at\": \"Lorem irure esse ut\",\n \"lfs_enabled\": \"amet ea anim\",\n \"merge_requests_enabled\": \"dolor\",\n \"name\": \"elit voluptate qui ea\",\n \"name_with_namespace\": \"enim\",\n \"namespace\": {\n  \"id\": \"consectetur pariatur et minim\",\n  \"kind\": \"ut sunt in Lorem\",\n  \"name\": \"sunt\",\n  \"path\": \"incididunt tempor\"\n },\n \"only_allow_merge_if_all_discussions_are_resolved\": \"qui aliquip labore tempor\",\n \"only_allow_merge_if_build_succeeds\": \"a\",\n \"open_issues_count\": \"irure laboris\",\n \"owner\": {\n  \"avatar_url\": \"id ut\",\n  \"id\": \"cupidat\",\n  \"name\": \"ullamco laborum\",\n  \"state\": \"non dolore fugiat\",\n  \"username\": \"enim in deserunt voluptate labore\",\n  \"web_url\": \"Lorem officia non\"\n },\n \"path\": \"do elit voluptate\",\n \"path_with_namespace\": \"sint deserunt do tempor qui\",\n \"public\": \"qui laboris nulla\",\n \"public_builds\": \"sit anim\",\n \"request_access_enabled\": \"labore anim id sint veniam\",\n \"runners_token\": \"fugiat proident Ut\",\n \"shared_runners_enabled\": \"repr\",\n \"shared_with_groups\": \"eiusmod tempor nulla voluptate\",\n \"snippets_enabled\": \"veniam Lorem\",\n \"ssh_url_to_repo\": \"adipisicing velit cupidatat voluptate\",\n \"star_count\": \"reprehenderit non et pariatur ut\",\n \"statistics\": {\n  \"build_artifacts_size\": \"cupidatat\",\n  \"commit_count\": \"nostrud laboris\",\n  \"lfs_objects_size\": \"enim\",\n  \"repository_size\": \"adipisicing occaecat\",\n  \"storage_size\": \"proident r\"\n },\n \"tag_list\": \"deserunt in ullamco\",\n \"visibility_level\": \"in eiusmod velit\",\n \"web_url\": \"adipisicing magna\",\n \"wiki_enabled\": \"cupidatat reprehenderit\"\n}"
								}
							]
						},
						{
							"name": "Get a list of visible projects for authenticated user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/projects/visible?order_by=created_at&sort=desc&archived=<boolean>&visibility=<string>&search=<string>&page=<integer>&per_page=<integer>&simple=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"projects",
										"visible"
									],
									"query": [
										{
											"key": "order_by",
											"value": "created_at",
											"description": "Return projects ordered by field"
										},
										{
											"key": "sort",
											"value": "desc",
											"description": "Return projects sorted in ascending and descending order"
										},
										{
											"key": "archived",
											"value": "<boolean>",
											"description": "Limit by archived status"
										},
										{
											"key": "visibility",
											"value": "<string>",
											"description": "Limit by visibility"
										},
										{
											"key": "search",
											"value": "<string>",
											"description": "Return list of authorized projects matching the search criteria"
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										},
										{
											"key": "simple",
											"value": "<boolean>",
											"description": "Return only the ID, URL, name, and path of each project"
										}
									]
								},
								"description": "Get a list of visible projects for authenticated user"
							},
							"response": [
								{
									"name": "Get a list of visible projects for authenticated user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/projects/visible?order_by=created_at&sort=desc&archived=<boolean>&visibility=<string>&search=<string>&page=<integer>&per_page=<integer>&simple=<boolean>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"projects",
												"visible"
											],
											"query": [
												{
													"key": "order_by",
													"value": "created_at"
												},
												{
													"key": "sort",
													"value": "desc"
												},
												{
													"key": "archived",
													"value": "<boolean>"
												},
												{
													"key": "visibility",
													"value": "<string>"
												},
												{
													"key": "search",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "simple",
													"value": "<boolean>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"http_url_to_repo\": \"in in sed \",\n \"id\": \"adipisici\",\n \"name\": \"tempor cil\",\n \"name_with_namespace\": \"veniam\",\n \"path\": \"mollit ex pariatur\",\n \"path_with_namespace\": \"esse sint dolore\",\n \"web_url\": \"ipsum tempor\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "runners",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Remove a runner",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/runners/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"runners",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the runner"
												}
											]
										},
										"description": "Remove a runner"
									},
									"response": [
										{
											"name": "Remove a runner",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/runners/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"runners",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"active\": \"quis\",\n \"description\": \"ullamco ex magna enim cillum\",\n \"id\": \"in qui cillum aliqua\",\n \"is_shared\": \"non dolor ut ullamco\",\n \"name\": \"est mollit nostrud\"\n}"
										}
									]
								},
								{
									"name": "Get runner's details",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/runners/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"runners",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the runner"
												}
											]
										},
										"description": "Get runner's details"
									},
									"response": [
										{
											"name": "Get runner's details",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/runners/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"runners",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"active\": \"adipisi\",\n \"architecture\": \"enim eiusmod\",\n \"contacted_at\": \"laboris enim\",\n \"description\": \"labore\",\n \"id\": \"ut magna mollit ullamco\",\n \"is_shared\": \"incididunt\",\n \"locked\": \"ullamco cupidatat Lorem sunt\",\n \"name\": \"est et aliqua nulla irure\",\n \"platform\": \"magna\",\n \"projects\": {\n  \"http_url_to_repo\": \"sunt nisi\",\n  \"id\": \"Lorem nulla ullamco\",\n  \"name\": \"do dolor culpa ullamco consequat\",\n  \"name_with_namespace\": \"culpa fugiat adip\",\n  \"path\": \"quis cillum dolor tempor dolore\",\n  \"path_with_namespace\": \"veniam nostrud ipsum\",\n  \"web_url\": \"proident officia dolore incididunt\"\n },\n \"revision\": \"labore velit sunt culpa\",\n \"run_untagged\": \"Excepteur\",\n \"tag_list\": \"est aliquip laboris nisi\",\n \"token\": \"voluptate est aute consectetur sunt\",\n \"version\": \"sunt nulla\"\n}"
										}
									]
								},
								{
									"name": "Update runner's details",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "description",
													"value": "<string>",
													"description": "The description of the runner"
												},
												{
													"key": "active",
													"value": "<boolean>",
													"description": "The state of a runner"
												},
												{
													"key": "tag_list",
													"value": "[\"<string>\",\"<string>\"]",
													"description": "The list of tags for a runner"
												},
												{
													"key": "run_untagged",
													"value": "<boolean>",
													"description": "Flag indicating the runner can execute untagged jobs"
												},
												{
													"key": "locked",
													"value": "<boolean>",
													"description": "Flag indicating the runner is locked"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/runners/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"runners",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the runner"
												}
											]
										},
										"description": "Update runner's details"
									},
									"response": [
										{
											"name": "Update runner's details",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "description",
															"value": "<string>",
															"description": {
																"content": "The description of the runner",
																"type": "text/plain"
															}
														},
														{
															"key": "active",
															"value": "<boolean>",
															"description": {
																"content": "The state of a runner",
																"type": "text/plain"
															}
														},
														{
															"key": "tag_list",
															"value": "[\"<string>\",\"<string>\"]",
															"description": {
																"content": "The list of tags for a runner",
																"type": "text/plain"
															}
														},
														{
															"key": "run_untagged",
															"value": "<boolean>",
															"description": {
																"content": "Flag indicating the runner can execute untagged jobs",
																"type": "text/plain"
															}
														},
														{
															"key": "locked",
															"value": "<boolean>",
															"description": {
																"content": "Flag indicating the runner is locked",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/runners/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"runners",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"active\": \"adipisi\",\n \"architecture\": \"enim eiusmod\",\n \"contacted_at\": \"laboris enim\",\n \"description\": \"labore\",\n \"id\": \"ut magna mollit ullamco\",\n \"is_shared\": \"incididunt\",\n \"locked\": \"ullamco cupidatat Lorem sunt\",\n \"name\": \"est et aliqua nulla irure\",\n \"platform\": \"magna\",\n \"projects\": {\n  \"http_url_to_repo\": \"sunt nisi\",\n  \"id\": \"Lorem nulla ullamco\",\n  \"name\": \"do dolor culpa ullamco consequat\",\n  \"name_with_namespace\": \"culpa fugiat adip\",\n  \"path\": \"quis cillum dolor tempor dolore\",\n  \"path_with_namespace\": \"veniam nostrud ipsum\",\n  \"web_url\": \"proident officia dolore incididunt\"\n },\n \"revision\": \"labore velit sunt culpa\",\n \"run_untagged\": \"Excepteur\",\n \"tag_list\": \"est aliquip laboris nisi\",\n \"token\": \"voluptate est aute consectetur sunt\",\n \"version\": \"sunt nulla\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get runners available for user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/runners?scope=<string>&page=<integer>&per_page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"runners"
									],
									"query": [
										{
											"key": "scope",
											"value": "<string>",
											"description": "The scope of specific runners to show"
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										}
									]
								},
								"description": "Get runners available for user"
							},
							"response": [
								{
									"name": "Get runners available for user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/runners?scope=<string>&page=<integer>&per_page=<integer>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"runners"
											],
											"query": [
												{
													"key": "scope",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"active\": \"quis\",\n \"description\": \"ullamco ex magna enim cillum\",\n \"id\": \"in qui cillum aliqua\",\n \"is_shared\": \"non dolor ut ullamco\",\n \"name\": \"est mollit nostrud\"\n}"
								}
							]
						},
						{
							"name": "Get all runners - shared and specific",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/runners/all?scope=<string>&page=<integer>&per_page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"runners",
										"all"
									],
									"query": [
										{
											"key": "scope",
											"value": "<string>",
											"description": "The scope of specific runners to show"
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										}
									]
								},
								"description": "Get all runners - shared and specific"
							},
							"response": [
								{
									"name": "Get all runners - shared and specific",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/runners/all?scope=<string>&page=<integer>&per_page=<integer>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"runners",
												"all"
											],
											"query": [
												{
													"key": "scope",
													"value": "<string>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"active\": \"quis\",\n \"description\": \"ullamco ex magna enim cillum\",\n \"id\": \"in qui cillum aliqua\",\n \"is_shared\": \"non dolor ut ullamco\",\n \"name\": \"est mollit nostrud\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "sidekiq",
					"item": [
						{
							"name": "Get the Sidekiq Compound metrics. Includes queue, process, and job statistics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/sidekiq/compound_metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"sidekiq",
										"compound_metrics"
									]
								},
								"description": "Get the Sidekiq Compound metrics. Includes queue, process, and job statistics"
							},
							"response": [
								{
									"name": "Get the Sidekiq Compound metrics. Includes queue, process, and job statistics",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/sidekiq/compound_metrics?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"sidekiq",
												"compound_metrics"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the Sidekiq job statistics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/sidekiq/job_stats",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"sidekiq",
										"job_stats"
									]
								},
								"description": "Get the Sidekiq job statistics"
							},
							"response": [
								{
									"name": "Get the Sidekiq job statistics",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/sidekiq/job_stats?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"sidekiq",
												"job_stats"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the Sidekiq process metrics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/sidekiq/process_metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"sidekiq",
										"process_metrics"
									]
								},
								"description": "Get the Sidekiq process metrics"
							},
							"response": [
								{
									"name": "Get the Sidekiq process metrics",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/sidekiq/process_metrics?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"sidekiq",
												"process_metrics"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get the Sidekiq queue metrics",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/sidekiq/queue_metrics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"sidekiq",
										"queue_metrics"
									]
								},
								"description": "Get the Sidekiq queue metrics"
							},
							"response": [
								{
									"name": "Get the Sidekiq queue metrics",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/sidekiq/queue_metrics?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"sidekiq",
												"queue_metrics"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "snippets",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Remove snippet",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/snippets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"snippets",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of a snippet"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.15."
									},
									"response": [
										{
											"name": "Remove snippet",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/snippets/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"snippets",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"author\": {\n  \"avatar_url\": \"tempor do sint\",\n  \"id\": \"nulla amet dolore aute\",\n  \"name\": \"in velit\",\n  \"state\": \"est Ut officia dolore\",\n  \"username\": \"in consectetur quis aliqua Excepteur\",\n  \"web_url\": \"ex ad\"\n },\n \"created_at\": \"tempor nisi aliquip\",\n \"file_name\": \"amet ullamco cupidatat eiusmod\",\n \"id\": \"in dolore est aliquip\",\n \"raw_url\": \"sint\",\n \"title\": \"nisi fugiat Ut\",\n \"updated_at\": \"Ut aliquip ea est\",\n \"web_url\": \"quis ullamco aliquip\"\n}"
										}
									]
								},
								{
									"name": "Get a single snippet",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/snippets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"snippets",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of a snippet"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.15."
									},
									"response": [
										{
											"name": "Get a single snippet",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/snippets/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"snippets",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"author\": {\n  \"avatar_url\": \"tempor do sint\",\n  \"id\": \"nulla amet dolore aute\",\n  \"name\": \"in velit\",\n  \"state\": \"est Ut officia dolore\",\n  \"username\": \"in consectetur quis aliqua Excepteur\",\n  \"web_url\": \"ex ad\"\n },\n \"created_at\": \"tempor nisi aliquip\",\n \"file_name\": \"amet ullamco cupidatat eiusmod\",\n \"id\": \"in dolore est aliquip\",\n \"raw_url\": \"sint\",\n \"title\": \"nisi fugiat Ut\",\n \"updated_at\": \"Ut aliquip ea est\",\n \"web_url\": \"quis ullamco aliquip\"\n}"
										}
									]
								},
								{
									"name": "Update an existing snippet",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "<string>",
													"description": "The title of a snippet"
												},
												{
													"key": "file_name",
													"value": "<string>",
													"description": "The name of a snippet file"
												},
												{
													"key": "content",
													"value": "<string>",
													"description": "The content of a snippet"
												},
												{
													"key": "visibility_level",
													"value": "<integer>",
													"description": "The visibility level of the snippet (This can only be one of 0,10,20)"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/snippets/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"snippets",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of a snippet"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.15."
									},
									"response": [
										{
											"name": "Update an existing snippet",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "title",
															"value": "<string>",
															"description": {
																"content": "The title of a snippet",
																"type": "text/plain"
															}
														},
														{
															"key": "file_name",
															"value": "<string>",
															"description": {
																"content": "The name of a snippet file",
																"type": "text/plain"
															}
														},
														{
															"key": "content",
															"value": "<string>",
															"description": {
																"content": "The content of a snippet",
																"type": "text/plain"
															}
														},
														{
															"key": "visibility_level",
															"value": "<integer>",
															"description": {
																"content": "The visibility level of the snippet (This can only be one of 0,10,20)",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/snippets/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"snippets",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"author\": {\n  \"avatar_url\": \"tempor do sint\",\n  \"id\": \"nulla amet dolore aute\",\n  \"name\": \"in velit\",\n  \"state\": \"est Ut officia dolore\",\n  \"username\": \"in consectetur quis aliqua Excepteur\",\n  \"web_url\": \"ex ad\"\n },\n \"created_at\": \"tempor nisi aliquip\",\n \"file_name\": \"amet ullamco cupidatat eiusmod\",\n \"id\": \"in dolore est aliquip\",\n \"raw_url\": \"sint\",\n \"title\": \"nisi fugiat Ut\",\n \"updated_at\": \"Ut aliquip ea est\",\n \"web_url\": \"quis ullamco aliquip\"\n}"
										}
									]
								},
								{
									"name": "Get a raw snippet",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/snippets/:id/raw",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"snippets",
												":id",
												"raw"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of a snippet"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.15."
									},
									"response": [
										{
											"name": "Get a raw snippet",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/snippets/:id/raw?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"snippets",
														":id",
														"raw"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get a snippets list for authenticated user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/snippets?page=<integer>&per_page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"snippets"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.15."
							},
							"response": [
								{
									"name": "Get a snippets list for authenticated user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/snippets?page=<integer>&per_page=<integer>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"snippets"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"author\": {\n  \"avatar_url\": \"tempor do sint\",\n  \"id\": \"nulla amet dolore aute\",\n  \"name\": \"in velit\",\n  \"state\": \"est Ut officia dolore\",\n  \"username\": \"in consectetur quis aliqua Excepteur\",\n  \"web_url\": \"ex ad\"\n },\n \"created_at\": \"tempor nisi aliquip\",\n \"file_name\": \"amet ullamco cupidatat eiusmod\",\n \"id\": \"in dolore est aliquip\",\n \"raw_url\": \"sint\",\n \"title\": \"nisi fugiat Ut\",\n \"updated_at\": \"Ut aliquip ea est\",\n \"web_url\": \"quis ullamco aliquip\"\n}"
								}
							]
						},
						{
							"name": "Create new snippet",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "title",
											"value": "<string>",
											"description": "The title of a snippet"
										},
										{
											"key": "file_name",
											"value": "<string>",
											"description": "The name of a snippet file"
										},
										{
											"key": "content",
											"value": "<string>",
											"description": "The content of a snippet"
										},
										{
											"key": "visibility_level",
											"value": "10",
											"description": "The visibility level of the snippet (This can only be one of 0,10,20)"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v3/snippets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"snippets"
									]
								},
								"description": "This feature was introduced in GitLab 8.15."
							},
							"response": [
								{
									"name": "Create new snippet",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "title",
													"value": "<string>",
													"description": {
														"content": "The title of a snippet",
														"type": "text/plain"
													}
												},
												{
													"key": "file_name",
													"value": "<string>",
													"description": {
														"content": "The name of a snippet file",
														"type": "text/plain"
													}
												},
												{
													"key": "content",
													"value": "<string>",
													"description": {
														"content": "The content of a snippet",
														"type": "text/plain"
													}
												},
												{
													"key": "visibility_level",
													"value": "10",
													"description": {
														"content": "The visibility level of the snippet (This can only be one of 0,10,20)",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/snippets?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"snippets"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"author\": {\n  \"avatar_url\": \"tempor do sint\",\n  \"id\": \"nulla amet dolore aute\",\n  \"name\": \"in velit\",\n  \"state\": \"est Ut officia dolore\",\n  \"username\": \"in consectetur quis aliqua Excepteur\",\n  \"web_url\": \"ex ad\"\n },\n \"created_at\": \"tempor nisi aliquip\",\n \"file_name\": \"amet ullamco cupidatat eiusmod\",\n \"id\": \"in dolore est aliquip\",\n \"raw_url\": \"sint\",\n \"title\": \"nisi fugiat Ut\",\n \"updated_at\": \"Ut aliquip ea est\",\n \"web_url\": \"quis ullamco aliquip\"\n}"
								}
							]
						},
						{
							"name": "List all public snippets current_user has access to",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/snippets/public?page=<integer>&per_page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"snippets",
										"public"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.15."
							},
							"response": [
								{
									"name": "List all public snippets current_user has access to",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/snippets/public?page=<integer>&per_page=<integer>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"snippets",
												"public"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"author\": {\n  \"avatar_url\": \"tempor do sint\",\n  \"id\": \"nulla amet dolore aute\",\n  \"name\": \"in velit\",\n  \"state\": \"est Ut officia dolore\",\n  \"username\": \"in consectetur quis aliqua Excepteur\",\n  \"web_url\": \"ex ad\"\n },\n \"created_at\": \"tempor nisi aliquip\",\n \"file_name\": \"amet ullamco cupidatat eiusmod\",\n \"id\": \"in dolore est aliquip\",\n \"raw_url\": \"sint\",\n \"title\": \"nisi fugiat Ut\",\n \"updated_at\": \"Ut aliquip ea est\",\n \"web_url\": \"quis ullamco aliquip\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "templates",
					"item": [
						{
							"name": "dockerfiles",
							"item": [
								{
									"name": "Get the list of the available template",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/templates/dockerfiles",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"templates",
												"dockerfiles"
											]
										},
										"description": "This feature was introduced in GitLab 8.15."
									},
									"response": [
										{
											"name": "Get the list of the available template",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/templates/dockerfiles?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"templates",
														"dockerfiles"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"dolor sint do\"\n}"
										}
									]
								},
								{
									"name": "Get the text for a specific template present in local filesystem",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/templates/dockerfiles/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"templates",
												"dockerfiles",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The name of the template"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.15."
									},
									"response": [
										{
											"name": "Get the text for a specific template present in local filesystem",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/templates/dockerfiles/:name?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"templates",
														"dockerfiles",
														":name"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"content\": \"ut quis elit aute\",\n \"name\": \"do Excepteur anim\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "gitignores",
							"item": [
								{
									"name": "Get the list of the available template",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/templates/gitignores",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"templates",
												"gitignores"
											]
										},
										"description": "This feature was introduced in GitLab 8.8."
									},
									"response": [
										{
											"name": "Get the list of the available template",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/templates/gitignores?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"templates",
														"gitignores"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"dolor sint do\"\n}"
										}
									]
								},
								{
									"name": "Get the text for a specific template present in local filesystem",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/templates/gitignores/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"templates",
												"gitignores",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The name of the template"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.8."
									},
									"response": [
										{
											"name": "Get the text for a specific template present in local filesystem",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/templates/gitignores/:name?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"templates",
														"gitignores",
														":name"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"content\": \"ut quis elit aute\",\n \"name\": \"do Excepteur anim\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "gitlab ci ymls",
							"item": [
								{
									"name": "Get the list of the available template",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/templates/gitlab_ci_ymls",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"templates",
												"gitlab_ci_ymls"
											]
										},
										"description": "This feature was introduced in GitLab 8.9."
									},
									"response": [
										{
											"name": "Get the list of the available template",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/templates/gitlab_ci_ymls?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"templates",
														"gitlab_ci_ymls"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"name\": \"dolor sint do\"\n}"
										}
									]
								},
								{
									"name": "Get the text for a specific template present in local filesystem",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/templates/gitlab_ci_ymls/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"templates",
												"gitlab_ci_ymls",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The name of the template"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.9."
									},
									"response": [
										{
											"name": "Get the text for a specific template present in local filesystem",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/templates/gitlab_ci_ymls/:name?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"templates",
														"gitlab_ci_ymls",
														":name"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"content\": \"ut quis elit aute\",\n \"name\": \"do Excepteur anim\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "licenses",
							"item": [
								{
									"name": "Get the list of the available license template",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/templates/licenses?popular=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"templates",
												"licenses"
											],
											"query": [
												{
													"key": "popular",
													"value": "<boolean>",
													"description": "If passed, returns only popular licenses"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.7."
									},
									"response": [
										{
											"name": "Get the list of the available license template",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/templates/licenses?popular=<boolean>&private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"templates",
														"licenses"
													],
													"query": [
														{
															"key": "popular",
															"value": "<boolean>"
														},
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"conditions\": \"ullamco ipsum elit\",\n \"content\": \"id Lorem\",\n \"description\": \"elit Duis est\",\n \"html_url\": \"ipsum quis m\",\n \"key\": \"dolor laborum\",\n \"limitations\": \"esse mollit nostrud\",\n \"name\": \"velit laborum\",\n \"nickname\": \"ut sunt nulla qui laborum\",\n \"permissions\": \"labore esse eu occaecat\",\n \"popular\": \"incididunt pariatur magna in\",\n \"source_url\": \"consectetur pariatur magna veniam\"\n}"
										}
									]
								},
								{
									"name": "Get the text for a specific license",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/templates/licenses/:name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"templates",
												"licenses",
												":name"
											],
											"variable": [
												{
													"key": "name",
													"value": "<string>",
													"type": "string",
													"description": "(Required) The name of the template"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.7."
									},
									"response": [
										{
											"name": "Get the text for a specific license",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/templates/licenses/:name?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"templates",
														"licenses",
														":name"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"conditions\": \"ullamco ipsum elit\",\n \"content\": \"id Lorem\",\n \"description\": \"elit Duis est\",\n \"html_url\": \"ipsum quis m\",\n \"key\": \"dolor laborum\",\n \"limitations\": \"esse mollit nostrud\",\n \"name\": \"velit laborum\",\n \"nickname\": \"ut sunt nulla qui laborum\",\n \"permissions\": \"labore esse eu occaecat\",\n \"popular\": \"incididunt pariatur magna in\",\n \"source_url\": \"consectetur pariatur magna veniam\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "todos",
					"item": [
						{
							"name": "Mark all todos as done",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/todos",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"todos"
									]
								},
								"description": "Mark all todos as done"
							},
							"response": [
								{
									"name": "Mark all todos as done",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/todos?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"todos"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get a todo list",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/todos?page=<integer>&per_page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"todos"
									],
									"query": [
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										}
									]
								},
								"description": "Get a todo list"
							},
							"response": [
								{
									"name": "Get a todo list",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/todos?page=<integer>&per_page=<integer>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"todos"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"action_name\": \"est enim\",\n \"author\": {\n  \"avatar_url\": \"minim veniam\",\n  \"id\": \"sed aliqua Ut\",\n  \"name\": \"exercitation\",\n  \"state\": \"nisi dolor pariatur Ut\",\n  \"username\": \"veniam deserunt id eu Ut\",\n  \"web_url\": \"et sint\"\n },\n \"body\": \"adipisi\",\n \"created_at\": \"ad irure quis in in\",\n \"id\": \"nisi laborum est ad\",\n \"project\": {\n  \"http_url_to_repo\": \"elit voluptate ipsum in\",\n  \"id\": \"Duis dolor\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"anim occaecat deserunt dolore\",\n  \"path\": \"nostrud elit\",\n  \"path_with_namespace\": \"nostrud ipsum consectetur mollit\",\n  \"web_url\": \"do\"\n },\n \"state\": \"nostrud Duis magna\",\n \"target\": \"consectetur dolor exercitation\",\n \"target_type\": \"in\",\n \"target_url\": \"in enim\"\n}"
								}
							]
						},
						{
							"name": "Mark a todo as done",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/todos/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"todos",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<integer>",
											"type": "string",
											"description": "(Required) The ID of the todo being marked as done"
										}
									]
								},
								"description": "Mark a todo as done"
							},
							"response": [
								{
									"name": "Mark a todo as done",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/todos/:id?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"todos",
												":id"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"action_name\": \"est enim\",\n \"author\": {\n  \"avatar_url\": \"minim veniam\",\n  \"id\": \"sed aliqua Ut\",\n  \"name\": \"exercitation\",\n  \"state\": \"nisi dolor pariatur Ut\",\n  \"username\": \"veniam deserunt id eu Ut\",\n  \"web_url\": \"et sint\"\n },\n \"body\": \"adipisi\",\n \"created_at\": \"ad irure quis in in\",\n \"id\": \"nisi laborum est ad\",\n \"project\": {\n  \"http_url_to_repo\": \"elit voluptate ipsum in\",\n  \"id\": \"Duis dolor\",\n  \"name\": \"in\",\n  \"name_with_namespace\": \"anim occaecat deserunt dolore\",\n  \"path\": \"nostrud elit\",\n  \"path_with_namespace\": \"nostrud ipsum consectetur mollit\",\n  \"web_url\": \"do\"\n },\n \"state\": \"nostrud Duis magna\",\n \"target\": \"consectetur dolor exercitation\",\n \"target_type\": \"in\",\n \"target_url\": \"in enim\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "user",
					"item": [
						{
							"name": "emails",
							"item": [
								{
									"name": "{email id}",
									"item": [
										{
											"name": "Delete an email address from the currently authenticated user",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/user/emails/:email_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"user",
														"emails",
														":email_id"
													],
													"variable": [
														{
															"key": "email_id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the email"
														}
													]
												},
												"description": "Delete an email address from the currently authenticated user"
											},
											"response": [
												{
													"name": "Delete an email address from the currently authenticated user",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/user/emails/:email_id?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"user",
																"emails",
																":email_id"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "email_id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Get a single email address owned by the currently authenticated user",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/user/emails/:email_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"user",
														"emails",
														":email_id"
													],
													"variable": [
														{
															"key": "email_id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the email"
														}
													]
												},
												"description": "Get a single email address owned by the currently authenticated user"
											},
											"response": [
												{
													"name": "Get a single email address owned by the currently authenticated user",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/user/emails/:email_id?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"user",
																"emails",
																":email_id"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "email_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"email\": \"et officia\",\n \"id\": \"officia ullamco consequat laborum\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get the currently authenticated user's email addresses",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/user/emails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"user",
												"emails"
											]
										},
										"description": "Get the currently authenticated user's email addresses"
									},
									"response": [
										{
											"name": "Get the currently authenticated user's email addresses",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/user/emails?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"user",
														"emails"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"email\": \"et officia\",\n \"id\": \"officia ullamco consequat laborum\"\n}"
										}
									]
								},
								{
									"name": "Add new email address to the currently authenticated user",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "email",
													"value": "<string>",
													"description": "The new email"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/user/emails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"user",
												"emails"
											]
										},
										"description": "Add new email address to the currently authenticated user"
									},
									"response": [
										{
											"name": "Add new email address to the currently authenticated user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "email",
															"value": "<string>",
															"description": {
																"content": "The new email",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/user/emails?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"user",
														"emails"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"email\": \"et officia\",\n \"id\": \"officia ullamco consequat laborum\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "keys",
							"item": [
								{
									"name": "{key id}",
									"item": [
										{
											"name": "Delete an SSH key from the currently authenticated user",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/user/keys/:key_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"user",
														"keys",
														":key_id"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the SSH key"
														}
													]
												},
												"description": "Delete an SSH key from the currently authenticated user"
											},
											"response": [
												{
													"name": "Delete an SSH key from the currently authenticated user",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/user/keys/:key_id?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"user",
																"keys",
																":key_id"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "key_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
												}
											]
										},
										{
											"name": "Get a single key owned by currently authenticated user",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/user/keys/:key_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"user",
														"keys",
														":key_id"
													],
													"variable": [
														{
															"key": "key_id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the SSH key"
														}
													]
												},
												"description": "Get a single key owned by currently authenticated user"
											},
											"response": [
												{
													"name": "Get a single key owned by currently authenticated user",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/user/keys/:key_id?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"user",
																"keys",
																":key_id"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "key_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get the currently authenticated user's SSH keys",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/user/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"user",
												"keys"
											]
										},
										"description": "Get the currently authenticated user's SSH keys"
									},
									"response": [
										{
											"name": "Get the currently authenticated user's SSH keys",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/user/keys?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"user",
														"keys"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
										}
									]
								},
								{
									"name": "Add a new SSH key to the currently authenticated user",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "key",
													"value": "<string>",
													"description": "The new SSH key"
												},
												{
													"key": "title",
													"value": "<string>",
													"description": "The title of the new SSH key"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/user/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"user",
												"keys"
											]
										},
										"description": "Add a new SSH key to the currently authenticated user"
									},
									"response": [
										{
											"name": "Add a new SSH key to the currently authenticated user",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/user/keys?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"user",
														"keys"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get the currently authenticated user",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"user"
									]
								},
								"description": "Get the currently authenticated user"
							},
							"response": [
								{
									"name": "Get the currently authenticated user",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/user?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"user"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"avatar_url\": \"minim\",\n \"bio\": \"esse Ut elit\",\n \"can_create_group\": \"nisi nulla ullamco eiusmod\",\n \"can_create_project\": \"laboris sint\",\n \"color_scheme_id\": \"Ut incididunt\",\n \"confirmed_at\": \"id in\",\n \"created_at\": \"in ipsum voluptate\",\n \"current_sign_in_at\": \"sit dolore\",\n \"email\": \"nisi id minim aliqua nostrud\",\n \"external\": \"elit\",\n \"id\": \"nostrud est proident cillum\",\n \"identities\": {\n  \"extern_uid\": \"velit\",\n  \"provider\": \"laborum occaecat tempor aute\"\n },\n \"is_admin\": \"est quis Lorem\",\n \"last_sign_in_at\": \"magna voluptate aliquip commodo\",\n \"linkedin\": \"irure Excepteur deserunt\",\n \"location\": \"et Ut\",\n \"name\": \"deserunt sunt cillum labore\",\n \"organization\": \"laboris ipsum qui occaecat deserunt\",\n \"projects_limit\": \"et culpa labore deserunt\",\n \"skype\": \"tempor exercitation proident e\",\n \"state\": \"sint enim commodo deserunt\",\n \"theme_id\": \"consectetur in\",\n \"twitter\": \"aute proident\",\n \"two_factor_enabled\": \"et laboris sint\",\n \"username\": \"in eu\",\n \"web_url\": \"aliquip amet elit qui\",\n \"website_url\": \"voluptate dolor officia reprehenderit\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "emails",
									"item": [
										{
											"name": "Get the emails addresses of a specified user. Available only for admins.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/users/:id/emails",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"users",
														":id",
														"emails"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the user"
														}
													]
												},
												"description": "Get the emails addresses of a specified user. Available only for admins."
											},
											"response": [
												{
													"name": "Get the emails addresses of a specified user. Available only for admins.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/users/:id/emails?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"users",
																":id",
																"emails"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"email\": \"et officia\",\n \"id\": \"officia ullamco consequat laborum\"\n}"
												}
											]
										},
										{
											"name": "Add an email address to a specified user. Available only for admins.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "email",
															"value": "<string>",
															"description": "The email of the user"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/users/:id/emails",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"users",
														":id",
														"emails"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the user"
														}
													]
												},
												"description": "Add an email address to a specified user. Available only for admins."
											},
											"response": [
												{
													"name": "Add an email address to a specified user. Available only for admins.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "urlencoded",
															"urlencoded": [
																{
																	"key": "email",
																	"value": "<string>",
																	"description": {
																		"content": "The email of the user",
																		"type": "text/plain"
																	}
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v3/users/:id/emails?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"users",
																":id",
																"emails"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"email\": \"et officia\",\n \"id\": \"officia ullamco consequat laborum\"\n}"
												}
											]
										},
										{
											"name": "Delete an email address of a specified user. Available only for admins.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/users/:id/emails/:email_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"users",
														":id",
														"emails",
														":email_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the user"
														},
														{
															"key": "email_id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the email"
														}
													]
												},
												"description": "Delete an email address of a specified user. Available only for admins."
											},
											"response": [
												{
													"name": "Delete an email address of a specified user. Available only for admins.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/users/:id/emails/:email_id?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"users",
																":id",
																"emails",
																":email_id"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "email_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"email\": \"et officia\",\n \"id\": \"officia ullamco consequat laborum\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "keys",
									"item": [
										{
											"name": "Get the SSH keys of a specified user. Available only for admins.",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/users/:id/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"users",
														":id",
														"keys"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the user"
														}
													]
												},
												"description": "Get the SSH keys of a specified user. Available only for admins."
											},
											"response": [
												{
													"name": "Get the SSH keys of a specified user. Available only for admins.",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/users/:id/keys?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"users",
																":id",
																"keys"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
												}
											]
										},
										{
											"name": "Add an SSH key to a specified user. Available only for admins.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/x-www-form-urlencoded"
													}
												],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "key",
															"value": "<string>",
															"description": "The new SSH key"
														},
														{
															"key": "title",
															"value": "<string>",
															"description": "The title of the new SSH key"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/users/:id/keys",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"users",
														":id",
														"keys"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the user"
														}
													]
												},
												"description": "Add an SSH key to a specified user. Available only for admins."
											},
											"response": [
												{
													"name": "Add an SSH key to a specified user. Available only for admins.",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/users/:id/keys?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"users",
																":id",
																"keys"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
												}
											]
										},
										{
											"name": "Delete an existing SSH key from a specified user. Available only for admins.",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/users/:id/keys/:key_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"users",
														":id",
														"keys",
														":key_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the user"
														},
														{
															"key": "key_id",
															"value": "<integer>",
															"type": "string",
															"description": "(Required) The ID of the SSH key"
														}
													]
												},
												"description": "Delete an existing SSH key from a specified user. Available only for admins."
											},
											"response": [
												{
													"name": "Delete an existing SSH key from a specified user. Available only for admins.",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v3/users/:id/keys/:key_id?private_token=<API Key>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"users",
																":id",
																"keys",
																":key_id"
															],
															"query": [
																{
																	"key": "private_token",
																	"value": "<API Key>"
																}
															],
															"variable": [
																{
																	"key": "id"
																},
																{
																	"key": "key_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n \"can_push\": \"sit ut in do mollit\",\n \"created_at\": \"esse sunt incididunt sit\",\n \"id\": \"aliqua esse est\",\n \"key\": \"ut reprehenderit\",\n \"title\": \"Ut aliqua\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Delete a user. Available only for admins.",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the user"
												}
											]
										},
										"description": "Delete a user. Available only for admins."
									},
									"response": [
										{
											"name": "Delete a user. Available only for admins.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/users/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"users",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"email\": \"et officia\",\n \"id\": \"officia ullamco consequat laborum\"\n}"
										}
									]
								},
								{
									"name": "Get a single user",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the user"
												}
											]
										},
										"description": "Get a single user"
									},
									"response": [
										{
											"name": "Get a single user",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/users/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"users",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"avatar_url\": \"cillum aliqua mollit\",\n \"id\": \"reprehenderit laborum ipsum sit ad\",\n \"name\": \"fugiat\",\n \"state\": \"reprehenderit officia minim culpa\",\n \"username\": \"esse ut\",\n \"web_url\": \"irure commodo\"\n}"
										}
									]
								},
								{
									"name": "Update a user. Available only for admins.",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "email",
													"value": "<string>",
													"description": "The email of the user"
												},
												{
													"key": "password",
													"value": "<string>",
													"description": "The password of the new user"
												},
												{
													"key": "name",
													"value": "<string>",
													"description": "The name of the user"
												},
												{
													"key": "username",
													"value": "<string>",
													"description": "The username of the user"
												},
												{
													"key": "skype",
													"value": "<string>",
													"description": "The Skype username"
												},
												{
													"key": "linkedin",
													"value": "<string>",
													"description": "The LinkedIn username"
												},
												{
													"key": "twitter",
													"value": "<string>",
													"description": "The Twitter username"
												},
												{
													"key": "website_url",
													"value": "<string>",
													"description": "The website of the user"
												},
												{
													"key": "organization",
													"value": "<string>",
													"description": "The organization of the user"
												},
												{
													"key": "projects_limit",
													"value": "<integer>",
													"description": "The number of projects a user can create"
												},
												{
													"key": "extern_uid",
													"value": "<string>",
													"description": "The external authentication provider UID"
												},
												{
													"key": "provider",
													"value": "<string>",
													"description": "The external provider"
												},
												{
													"key": "bio",
													"value": "<string>",
													"description": "The biography of the user"
												},
												{
													"key": "location",
													"value": "<string>",
													"description": "The location of the user"
												},
												{
													"key": "admin",
													"value": "<boolean>",
													"description": "Flag indicating the user is an administrator"
												},
												{
													"key": "can_create_group",
													"value": "<boolean>",
													"description": "Flag indicating the user can create groups"
												},
												{
													"key": "confirm",
													"value": "<boolean>",
													"description": "Flag indicating the account needs to be confirmed"
												},
												{
													"key": "external",
													"value": "<boolean>",
													"description": "Flag indicating the user is an external user"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/users/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the user"
												}
											]
										},
										"description": "Update a user. Available only for admins."
									},
									"response": [
										{
											"name": "Update a user. Available only for admins.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "urlencoded",
													"urlencoded": [
														{
															"key": "email",
															"value": "<string>",
															"description": {
																"content": "The email of the user",
																"type": "text/plain"
															}
														},
														{
															"key": "password",
															"value": "<string>",
															"description": {
																"content": "The password of the new user",
																"type": "text/plain"
															}
														},
														{
															"key": "name",
															"value": "<string>",
															"description": {
																"content": "The name of the user",
																"type": "text/plain"
															}
														},
														{
															"key": "username",
															"value": "<string>",
															"description": {
																"content": "The username of the user",
																"type": "text/plain"
															}
														},
														{
															"key": "skype",
															"value": "<string>",
															"description": {
																"content": "The Skype username",
																"type": "text/plain"
															}
														},
														{
															"key": "linkedin",
															"value": "<string>",
															"description": {
																"content": "The LinkedIn username",
																"type": "text/plain"
															}
														},
														{
															"key": "twitter",
															"value": "<string>",
															"description": {
																"content": "The Twitter username",
																"type": "text/plain"
															}
														},
														{
															"key": "website_url",
															"value": "<string>",
															"description": {
																"content": "The website of the user",
																"type": "text/plain"
															}
														},
														{
															"key": "organization",
															"value": "<string>",
															"description": {
																"content": "The organization of the user",
																"type": "text/plain"
															}
														},
														{
															"key": "projects_limit",
															"value": "<integer>",
															"description": {
																"content": "The number of projects a user can create",
																"type": "text/plain"
															}
														},
														{
															"key": "extern_uid",
															"value": "<string>",
															"description": {
																"content": "The external authentication provider UID",
																"type": "text/plain"
															}
														},
														{
															"key": "provider",
															"value": "<string>",
															"description": {
																"content": "The external provider",
																"type": "text/plain"
															}
														},
														{
															"key": "bio",
															"value": "<string>",
															"description": {
																"content": "The biography of the user",
																"type": "text/plain"
															}
														},
														{
															"key": "location",
															"value": "<string>",
															"description": {
																"content": "The location of the user",
																"type": "text/plain"
															}
														},
														{
															"key": "admin",
															"value": "<boolean>",
															"description": {
																"content": "Flag indicating the user is an administrator",
																"type": "text/plain"
															}
														},
														{
															"key": "can_create_group",
															"value": "<boolean>",
															"description": {
																"content": "Flag indicating the user can create groups",
																"type": "text/plain"
															}
														},
														{
															"key": "confirm",
															"value": "<boolean>",
															"description": {
																"content": "Flag indicating the account needs to be confirmed",
																"type": "text/plain"
															}
														},
														{
															"key": "external",
															"value": "<boolean>",
															"description": {
																"content": "Flag indicating the user is an external user",
																"type": "text/plain"
															}
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v3/users/:id?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"users",
														":id"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"avatar_url\": \"minim\",\n \"bio\": \"esse Ut elit\",\n \"can_create_group\": \"nisi nulla ullamco eiusmod\",\n \"can_create_project\": \"laboris sint\",\n \"color_scheme_id\": \"Ut incididunt\",\n \"confirmed_at\": \"id in\",\n \"created_at\": \"in ipsum voluptate\",\n \"current_sign_in_at\": \"sit dolore\",\n \"email\": \"nisi id minim aliqua nostrud\",\n \"external\": \"elit\",\n \"id\": \"nostrud est proident cillum\",\n \"identities\": {\n  \"extern_uid\": \"velit\",\n  \"provider\": \"laborum occaecat tempor aute\"\n },\n \"is_admin\": \"est quis Lorem\",\n \"last_sign_in_at\": \"magna voluptate aliquip commodo\",\n \"linkedin\": \"irure Excepteur deserunt\",\n \"location\": \"et Ut\",\n \"name\": \"deserunt sunt cillum labore\",\n \"organization\": \"laboris ipsum qui occaecat deserunt\",\n \"projects_limit\": \"et culpa labore deserunt\",\n \"skype\": \"tempor exercitation proident e\",\n \"state\": \"sint enim commodo deserunt\",\n \"theme_id\": \"consectetur in\",\n \"twitter\": \"aute proident\",\n \"two_factor_enabled\": \"et laboris sint\",\n \"username\": \"in eu\",\n \"web_url\": \"aliquip amet elit qui\",\n \"website_url\": \"voluptate dolor officia reprehenderit\"\n}"
										}
									]
								},
								{
									"name": "Block a user. Available only for admins.",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/users/:id/block",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"users",
												":id",
												"block"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the user"
												}
											]
										},
										"description": "Block a user. Available only for admins."
									},
									"response": [
										{
											"name": "Block a user. Available only for admins.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/users/:id/block?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"users",
														":id",
														"block"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Get the contribution events of a specified user",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/users/:id/events?page=<integer>&per_page=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"users",
												":id",
												"events"
											],
											"query": [
												{
													"key": "page",
													"value": "<integer>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the user"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.13."
									},
									"response": [
										{
											"name": "Get the contribution events of a specified user",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/users/:id/events?page=<integer>&per_page=<integer>&private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"users",
														":id",
														"events"
													],
													"query": [
														{
															"key": "page",
															"value": "<integer>"
														},
														{
															"key": "per_page",
															"value": "<integer>"
														},
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"action_name\": \"minim consectetur\",\n \"author\": {\n  \"avatar_url\": \"in nostrud laboris\",\n  \"id\": \"et do sed nostrud consectetur\",\n  \"name\": \"veniam in\",\n  \"state\": \"consequat\",\n  \"username\": \"Duis reprehenderit quis id\",\n  \"web_url\": \"sunt nulla cupidatat\"\n },\n \"author_id\": \"dolore in minim laborum\",\n \"author_username\": \"consectetur\",\n \"created_at\": \"consectetur sint culpa\",\n \"data\": \"Lorem dolore eiusmod\",\n \"note\": {\n  \"attachment\": \"exercitation incididunt consequat do\",\n  \"author\": {\n   \"avatar_url\": \"aute reprehenderit\",\n   \"id\": \"nisi in\",\n   \"name\": \"occaecat\",\n   \"state\": \"nulla\",\n   \"username\": \"ea mollit ullamco\",\n   \"web_url\": \"magna deserunt nisi dolor\"\n  },\n  \"body\": \"incididunt\",\n  \"created_at\": \"ipsum minim\",\n  \"downvote?\": \"sint Duis\",\n  \"id\": \"commodo\",\n  \"noteable_id\": \"quis Excep\",\n  \"noteable_type\": \"pariatur culpa\",\n  \"system\": \"aliquip sit\",\n  \"updated_at\": \"nisi\",\n  \"upvote?\": \"adipisicing\"\n },\n \"project_id\": \"reprehenderit ea magna aute\",\n \"target_id\": \"ullamco proident est\",\n \"target_title\": \"in consectetur dolore\",\n \"target_type\": \"ullamco elit dolor\",\n \"title\": \"do ex in\"\n}"
										}
									]
								},
								{
									"name": "Unblock a user. Available only for admins.",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/users/:id/unblock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"users",
												":id",
												"unblock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<integer>",
													"type": "string",
													"description": "(Required) The ID of the user"
												}
											]
										},
										"description": "Unblock a user. Available only for admins."
									},
									"response": [
										{
											"name": "Unblock a user. Available only for admins.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v3/users/:id/unblock?private_token=<API Key>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"users",
														":id",
														"unblock"
													],
													"query": [
														{
															"key": "private_token",
															"value": "<API Key>"
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get the list of users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/users?username=<string>&search=<string>&active=<boolean>&external=<boolean>&blocked=<boolean>&page=<integer>&per_page=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"users"
									],
									"query": [
										{
											"key": "username",
											"value": "<string>",
											"description": "Get a single user with a specific username"
										},
										{
											"key": "search",
											"value": "<string>",
											"description": "Search for a username"
										},
										{
											"key": "active",
											"value": "<boolean>",
											"description": "Filters only active users"
										},
										{
											"key": "external",
											"value": "<boolean>",
											"description": "Filters only external users"
										},
										{
											"key": "blocked",
											"value": "<boolean>",
											"description": "Filters only blocked users"
										},
										{
											"key": "page",
											"value": "<integer>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page"
										}
									]
								},
								"description": "Get the list of users"
							},
							"response": [
								{
									"name": "Get the list of users",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v3/users?username=<string>&search=<string>&active=<boolean>&external=<boolean>&blocked=<boolean>&page=<integer>&per_page=<integer>&private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"users"
											],
											"query": [
												{
													"key": "username",
													"value": "<string>"
												},
												{
													"key": "search",
													"value": "<string>"
												},
												{
													"key": "active",
													"value": "<boolean>"
												},
												{
													"key": "external",
													"value": "<boolean>"
												},
												{
													"key": "blocked",
													"value": "<boolean>"
												},
												{
													"key": "page",
													"value": "<integer>"
												},
												{
													"key": "per_page",
													"value": "<integer>"
												},
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"avatar_url\": \"cillum aliqua mollit\",\n \"id\": \"reprehenderit laborum ipsum sit ad\",\n \"name\": \"fugiat\",\n \"state\": \"reprehenderit officia minim culpa\",\n \"username\": \"esse ut\",\n \"web_url\": \"irure commodo\"\n}"
								}
							]
						},
						{
							"name": "Create a user. Available only for admins.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "email",
											"value": "<string>",
											"description": "The email of the user"
										},
										{
											"key": "password",
											"value": "<string>",
											"description": "The password of the new user"
										},
										{
											"key": "name",
											"value": "<string>",
											"description": "The name of the user"
										},
										{
											"key": "username",
											"value": "<string>",
											"description": "The username of the user"
										},
										{
											"key": "skype",
											"value": "<string>",
											"description": "The Skype username"
										},
										{
											"key": "linkedin",
											"value": "<string>",
											"description": "The LinkedIn username"
										},
										{
											"key": "twitter",
											"value": "<string>",
											"description": "The Twitter username"
										},
										{
											"key": "website_url",
											"value": "<string>",
											"description": "The website of the user"
										},
										{
											"key": "organization",
											"value": "<string>",
											"description": "The organization of the user"
										},
										{
											"key": "projects_limit",
											"value": "<integer>",
											"description": "The number of projects a user can create"
										},
										{
											"key": "extern_uid",
											"value": "<string>",
											"description": "The external authentication provider UID"
										},
										{
											"key": "provider",
											"value": "<string>",
											"description": "The external provider"
										},
										{
											"key": "bio",
											"value": "<string>",
											"description": "The biography of the user"
										},
										{
											"key": "location",
											"value": "<string>",
											"description": "The location of the user"
										},
										{
											"key": "admin",
											"value": "<boolean>",
											"description": "Flag indicating the user is an administrator"
										},
										{
											"key": "can_create_group",
											"value": "<boolean>",
											"description": "Flag indicating the user can create groups"
										},
										{
											"key": "confirm",
											"value": "<boolean>",
											"description": "Flag indicating the account needs to be confirmed"
										},
										{
											"key": "external",
											"value": "<boolean>",
											"description": "Flag indicating the user is an external user"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v3/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"users"
									]
								},
								"description": "Create a user. Available only for admins."
							},
							"response": [
								{
									"name": "Create a user. Available only for admins.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "email",
													"value": "<string>",
													"description": {
														"content": "The email of the user",
														"type": "text/plain"
													}
												},
												{
													"key": "password",
													"value": "<string>",
													"description": {
														"content": "The password of the new user",
														"type": "text/plain"
													}
												},
												{
													"key": "name",
													"value": "<string>",
													"description": {
														"content": "The name of the user",
														"type": "text/plain"
													}
												},
												{
													"key": "username",
													"value": "<string>",
													"description": {
														"content": "The username of the user",
														"type": "text/plain"
													}
												},
												{
													"key": "skype",
													"value": "<string>",
													"description": {
														"content": "The Skype username",
														"type": "text/plain"
													}
												},
												{
													"key": "linkedin",
													"value": "<string>",
													"description": {
														"content": "The LinkedIn username",
														"type": "text/plain"
													}
												},
												{
													"key": "twitter",
													"value": "<string>",
													"description": {
														"content": "The Twitter username",
														"type": "text/plain"
													}
												},
												{
													"key": "website_url",
													"value": "<string>",
													"description": {
														"content": "The website of the user",
														"type": "text/plain"
													}
												},
												{
													"key": "organization",
													"value": "<string>",
													"description": {
														"content": "The organization of the user",
														"type": "text/plain"
													}
												},
												{
													"key": "projects_limit",
													"value": "<integer>",
													"description": {
														"content": "The number of projects a user can create",
														"type": "text/plain"
													}
												},
												{
													"key": "extern_uid",
													"value": "<string>",
													"description": {
														"content": "The external authentication provider UID",
														"type": "text/plain"
													}
												},
												{
													"key": "provider",
													"value": "<string>",
													"description": {
														"content": "The external provider",
														"type": "text/plain"
													}
												},
												{
													"key": "bio",
													"value": "<string>",
													"description": {
														"content": "The biography of the user",
														"type": "text/plain"
													}
												},
												{
													"key": "location",
													"value": "<string>",
													"description": {
														"content": "The location of the user",
														"type": "text/plain"
													}
												},
												{
													"key": "admin",
													"value": "<boolean>",
													"description": {
														"content": "Flag indicating the user is an administrator",
														"type": "text/plain"
													}
												},
												{
													"key": "can_create_group",
													"value": "<boolean>",
													"description": {
														"content": "Flag indicating the user can create groups",
														"type": "text/plain"
													}
												},
												{
													"key": "confirm",
													"value": "<boolean>",
													"description": {
														"content": "Flag indicating the account needs to be confirmed",
														"type": "text/plain"
													}
												},
												{
													"key": "external",
													"value": "<boolean>",
													"description": {
														"content": "Flag indicating the user is an external user",
														"type": "text/plain"
													}
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v3/users?private_token=<API Key>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"users"
											],
											"query": [
												{
													"key": "private_token",
													"value": "<API Key>"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"avatar_url\": \"minim\",\n \"bio\": \"esse Ut elit\",\n \"can_create_group\": \"nisi nulla ullamco eiusmod\",\n \"can_create_project\": \"laboris sint\",\n \"color_scheme_id\": \"Ut incididunt\",\n \"confirmed_at\": \"id in\",\n \"created_at\": \"in ipsum voluptate\",\n \"current_sign_in_at\": \"sit dolore\",\n \"email\": \"nisi id minim aliqua nostrud\",\n \"external\": \"elit\",\n \"id\": \"nostrud est proident cillum\",\n \"identities\": {\n  \"extern_uid\": \"velit\",\n  \"provider\": \"laborum occaecat tempor aute\"\n },\n \"is_admin\": \"est quis Lorem\",\n \"last_sign_in_at\": \"magna voluptate aliquip commodo\",\n \"linkedin\": \"irure Excepteur deserunt\",\n \"location\": \"et Ut\",\n \"name\": \"deserunt sunt cillum labore\",\n \"organization\": \"laboris ipsum qui occaecat deserunt\",\n \"projects_limit\": \"et culpa labore deserunt\",\n \"skype\": \"tempor exercitation proident e\",\n \"state\": \"sint enim commodo deserunt\",\n \"theme_id\": \"consectetur in\",\n \"twitter\": \"aute proident\",\n \"two_factor_enabled\": \"et laboris sint\",\n \"username\": \"in eu\",\n \"web_url\": \"aliquip amet elit qui\",\n \"website_url\": \"voluptate dolor officia reprehenderit\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Validation of .gitlab-ci.yml content",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "content",
									"value": "<string>",
									"description": "Content of .gitlab-ci.yml"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/v3/ci/lint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"ci",
								"lint"
							]
						},
						"description": "Validation of .gitlab-ci.yml content"
					},
					"response": [
						{
							"name": "Validation of .gitlab-ci.yml content",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "content",
											"value": "<string>",
											"description": {
												"content": "Content of .gitlab-ci.yml",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v3/ci/lint?private_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"ci",
										"lint"
									],
									"query": [
										{
											"key": "private_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "get V3Deploy Keys",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v3/deploy_keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"deploy_keys"
							]
						}
					},
					"response": [
						{
							"name": "get DeployKey(s)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/deploy_keys?private_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"deploy_keys"
									],
									"query": [
										{
											"key": "private_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get currently authenticated user's issues",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v3/issues?state=all&labels=<string>&milestone=<string>&order_by=created_at&sort=desc&page=<integer>&per_page=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"issues"
							],
							"query": [
								{
									"key": "state",
									"value": "all",
									"description": "Return opened, closed, or all issues"
								},
								{
									"key": "labels",
									"value": "<string>",
									"description": "Comma-separated list of label names"
								},
								{
									"key": "milestone",
									"value": "<string>",
									"description": "Return issues for a specific milestone"
								},
								{
									"key": "order_by",
									"value": "created_at",
									"description": "Return issues ordered by `created_at` or `updated_at` fields."
								},
								{
									"key": "sort",
									"value": "desc",
									"description": "Return issues sorted in `asc` or `desc` order."
								},
								{
									"key": "page",
									"value": "<integer>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items per page"
								}
							]
						},
						"description": "Get currently authenticated user's issues"
					},
					"response": [
						{
							"name": "Get currently authenticated user's issues",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/issues?state=all&labels=<string>&milestone=<string>&order_by=created_at&sort=desc&page=<integer>&per_page=<integer>&private_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"issues"
									],
									"query": [
										{
											"key": "state",
											"value": "all"
										},
										{
											"key": "labels",
											"value": "<string>"
										},
										{
											"key": "milestone",
											"value": "<string>"
										},
										{
											"key": "order_by",
											"value": "created_at"
										},
										{
											"key": "sort",
											"value": "desc"
										},
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "private_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"assignee\": {\n  \"avatar_url\": \"minim labore consectet\",\n  \"id\": \"Excepteur ipsum ut in laborum\",\n  \"name\": \"dolore nostrud ut mollit\",\n  \"state\": \"ea officia mollit\",\n  \"username\": \"Ut Lorem reprehenderit\",\n  \"web_url\": \"eu ex sint nisi\"\n },\n \"author\": {\n  \"avatar_url\": \"dolore eu\",\n  \"id\": \"aute nulla\",\n  \"name\": \"dolor exercitation elit consequat\",\n  \"state\": \"laborum deserunt\",\n  \"username\": \"dolor cup\",\n  \"web_url\": \"qui adipisicing ullamco\"\n },\n \"confidential\": \"deserunt in\",\n \"created_at\": \"cupidatat consequat proident q\",\n \"description\": \"dolor esse Lorem\",\n \"downvotes\": \"exercitation\",\n \"due_date\": \"sint\",\n \"id\": \"non minim nisi\",\n \"iid\": \"irure\",\n \"labels\": \"tempor\",\n \"milestone\": {\n  \"created_at\": \"in do\",\n  \"description\": \"et\",\n  \"due_date\": \"labore nostrud\",\n  \"id\": \"labore ipsum culpa Lorem reprehenderit\",\n  \"iid\": \"dolor qui\",\n  \"project_id\": \"ad\",\n  \"start_date\": \"proident dolor mollit in ullamco\",\n  \"state\": \"in aute pariatur\",\n  \"title\": \"id\",\n  \"updated_at\": \"irure fugiat qui adipisicing id\"\n },\n \"project_id\": \"es\",\n \"state\": \"elit irure sed\",\n \"subscribed\": \"Excepteur voluptate dolore in\",\n \"title\": \"dolore irure laborum fugiat\",\n \"updated_at\": \"id laborum\",\n \"upvotes\": \"reprehenderit exercitation sit\",\n \"user_notes_count\": \"reprehenderit sit aliquip do\",\n \"web_url\": \"dolore in voluptate in\"\n}"
						}
					]
				},
				{
					"name": "Get single ssh key by id. Only available to admin users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v3/keys/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"keys",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<integer>",
									"type": "string",
									"description": "(Required) "
								}
							]
						},
						"description": "Get single ssh key by id. Only available to admin users"
					},
					"response": [
						{
							"name": "Get single ssh key by id. Only available to admin users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/keys/:id?private_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"keys",
										":id"
									],
									"query": [
										{
											"key": "private_token",
											"value": "<API Key>"
										}
									],
									"variable": [
										{
											"key": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"can_push\": \"veniam consequat dolore qui\",\n \"created_at\": \"esse veniam Ut\",\n \"id\": \"minim ad mollit occaecat\",\n \"key\": \"cillum consequat\",\n \"title\": \"aute ad\",\n \"user\": {\n  \"avatar_url\": \"ullamco exercitation laborum velit\",\n  \"bio\": \"aliquip consectetur officia\",\n  \"can_create_group\": \"ad in\",\n  \"can_create_project\": \"laborum non dolor\",\n  \"color_scheme_id\": \"adipisicin\",\n  \"confirmed_at\": \"labore irure fugiat laborum\",\n  \"created_at\": \"tempor nostrud mollit\",\n  \"current_sign_in_at\": \"nisi irure\",\n  \"email\": \"est incidi\",\n  \"external\": \"reprehenderit pariatur officia\",\n  \"id\": \"incididunt ea\",\n  \"identities\": {\n   \"extern_uid\": \"amet voluptate\",\n   \"provider\": \"cupidatat sint\"\n  },\n  \"is_admin\": \"est culpa anim\",\n  \"last_sign_in_at\": \"sint eiusmod in\",\n  \"linkedin\": \"sunt\",\n  \"location\": \"Excepteur dolor laboris deserunt\",\n  \"name\": \"deserunt elit Excepteur\",\n  \"organization\": \"proident est\",\n  \"projects_limit\": \"aliqua ea ad\",\n  \"skype\": \"tempor deserunt proide\",\n  \"state\": \"exercitation ut sunt\",\n  \"theme_id\": \"enim dolore voluptate\",\n  \"twitter\": \"dolor esse velit sunt\",\n  \"two_factor_enabled\": \"reprehenderit amet\",\n  \"username\": \"ex officia\",\n  \"web_url\": \"ad tempor\",\n  \"website_url\": \"anim quis\"\n }\n}"
						}
					]
				},
				{
					"name": "Get a namespaces list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v3/namespaces?search=<string>&page=<integer>&per_page=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"namespaces"
							],
							"query": [
								{
									"key": "search",
									"value": "<string>",
									"description": "Search query for namespaces"
								},
								{
									"key": "page",
									"value": "<integer>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<integer>",
									"description": "Number of items per page"
								}
							]
						},
						"description": "Get a namespaces list"
					},
					"response": [
						{
							"name": "Get a namespaces list",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/namespaces?search=<string>&page=<integer>&per_page=<integer>&private_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"namespaces"
									],
									"query": [
										{
											"key": "search",
											"value": "<string>"
										},
										{
											"key": "page",
											"value": "<integer>"
										},
										{
											"key": "per_page",
											"value": "<integer>"
										},
										{
											"key": "private_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"aliquip exercitation nulla irure\",\n \"kind\": \"et\",\n \"name\": \"sed ex adipisicing fugiat\",\n \"path\": \"cillum exercitation\"\n}"
						}
					]
				},
				{
					"name": "Login to get token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "password",
									"value": "<string>",
									"description": "The password of the user"
								},
								{
									"key": "login",
									"value": "<string>",
									"description": "The username"
								},
								{
									"key": "email",
									"value": "<string>",
									"description": "The email of the user"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/v3/session",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"session"
							]
						},
						"description": "Login to get token"
					},
					"response": [
						{
							"name": "Login to get token",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "password",
											"value": "<string>",
											"description": {
												"content": "The password of the user",
												"type": "text/plain"
											}
										},
										{
											"key": "login",
											"value": "<string>",
											"description": {
												"content": "The username",
												"type": "text/plain"
											}
										},
										{
											"key": "email",
											"value": "<string>",
											"description": {
												"content": "The email of the user",
												"type": "text/plain"
											}
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v3/session?private_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"session"
									],
									"query": [
										{
											"key": "private_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"avatar_url\": \"aute enim veniam\",\n \"bio\": \"occaecat reprehenderit\",\n \"can_create_group\": \"ut ea est\",\n \"can_create_project\": \"ve\",\n \"color_scheme_id\": \"sit dolore dolore consequat anim\",\n \"confirmed_at\": \"culpa voluptate veniam proident aliqua\",\n \"created_at\": \"voluptate proident incididunt\",\n \"current_sign_in_at\": \"ex deserunt commodo velit esse\",\n \"email\": \"anim laborum tempor\",\n \"external\": \"ut quis est magna cupidatat\",\n \"id\": \"officia laborum occaecat\",\n \"identities\": {\n  \"extern_uid\": \"in dolore\",\n  \"provider\": \"sunt qui quis nisi\"\n },\n \"is_admin\": \"consectetur laborum cupidatat eiusmod non\",\n \"last_sign_in_at\": \"labore sit\",\n \"linkedin\": \"tempor\",\n \"location\": \"irure aliquip ut\",\n \"name\": \"eu quis amet dolore\",\n \"organization\": \"adipisicing ex ipsum ullamco\",\n \"private_token\": \"non enim quis esse\",\n \"projects_limit\": \"do\",\n \"skype\": \"nisi consectetur ex\",\n \"state\": \"Duis sit\",\n \"theme_id\": \"nisi qui magna mollit\",\n \"twitter\": \"ut elit\",\n \"two_factor_enabled\": \"aute irure proident\",\n \"username\": \"amet culpa\",\n \"web_url\": \"enim\",\n \"website_url\": \"esse\"\n}"
						}
					]
				},
				{
					"name": "Get the version information of the GitLab instance.",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v3/version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"version"
							]
						},
						"description": "This feature was introduced in GitLab 8.13."
					},
					"response": [
						{
							"name": "Get the version information of the GitLab instance.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/version?private_token=<API Key>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"version"
									],
									"query": [
										{
											"key": "private_token",
											"value": "<API Key>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "private_token",
				"type": "string"
			},
			{
				"key": "value",
				"value": true,
				"type": "boolean"
			},
			{
				"key": "in",
				"value": "query",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://gitlab.com/api",
			"type": "string"
		}
	]
}